{
  "id": "9e8dd24554a1acca506f949502c75103",
  "_format": "hh-sol-build-info-1",
  "solcVersion": "0.8.4",
  "solcLongVersion": "0.8.4+commit.c7e474f2",
  "input": {
    "language": "Solidity",
    "sources": {
      "contracts/deps/Context.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Provides information about the current execution context, including the\r\n * sender of the transaction and its data. While these are generally available\r\n * via msg.sender and msg.data, they should not be accessed in such a direct\r\n * manner, since when dealing with meta-transactions the account sending and\r\n * paying for execution may not be the actual sender (as far as an application\r\n * is concerned).\r\n *\r\n * This contract is only required for intermediate, library-like contracts.\r\n */\r\nabstract contract Context {\r\n    function _msgSender() internal view virtual returns (address) {\r\n        return msg.sender;\r\n    }\r\n\r\n    function _msgData() internal view virtual returns (bytes calldata) {\r\n        return msg.data;\r\n    }\r\n}\r\n"
      },
      "contracts/IBoolaContract.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./libraries/IBoolaLib.sol\";\r\nimport \"./deps/Context.sol\";\r\nimport \"./deps/Ownable.sol\";\r\nimport \"./deps/IERC20.sol\";\r\n\r\n/**\r\n * @title IBoolaContract\r\n * @author Bobeu: https://github.com/bobeu\r\n * A smart contract that will tokenize the disposal and collection of waste. \r\n    Users get a token when they dispose of their waste in a waste bin, collectors \r\n    get token for collecting waste and taking them to the waste recyclers \r\n\r\n    The process of tokenization happens when the waste drops in the waste bin. Every\r\n    waste bin has a unique wallet ID which will receive the token at the end of evacuation.\r\n    The owners of the waste bin will have a DAO. \r\n\r\n    *Wallet \r\n    *Token (iBoola token) which would be paired against either Avalanche, Celo or Polygon \r\n    *New users get 10 $IBT after sign up \r\n    *Community of waste bins will have a DAO \r\n    Waste generators get 10% collectors get 65 while the iBoola team gets 25% \r\n    Decimals: use standard 18 decimals \r\n\r\n    Mintable: not mintable\r\n\r\n    Ownership privilege :  30% locked for 5 years, 20% for dev team 45% for  initial circulation, \r\n    5% for presale \r\n\r\n    PSEUDO\r\n    ======\r\n    Parties:\r\n        o Waste generators.\r\n        o Collectors.\r\n        o Recyclers.\r\n\r\n    o When waste is disposed or evacuated, then reward collectors.\r\n    o Each waste bin has a unique identifer and an owner.\r\n    o On sign up, user gets 10 $IBT Token.\r\n    o Waste collectors own a DAO.\r\n    o Waste bin owners own a DAO.\r\n    o Reward sharing formula Note - It is configurable. The owner account is able to \r\n        set each of these fields.\r\n        - Waste generators 10%.\r\n        - Collectors 65%.\r\n        - Team 25%.\r\n */\r\ncontract IBoolaContract is Context, Common, Ownable {\r\n\r\n    ///@dev New sign up reward\r\n    uint public newSignUpReward;\r\n\r\n    ///@dev iBoola Token\r\n    address public token;\r\n\r\n    ///@dev Total waste generated to date\r\n    uint256 public totalWasteGenerated;\r\n\r\n    ///@dev Collector reward\r\n    uint public collectorReward;\r\n\r\n    ///@dev Total bin registered to date\r\n    uint public binCounter;\r\n\r\n    ///@dev Price of recycled waste\r\n    uint public price;\r\n\r\n    /**\r\n        @dev Array of bins \r\n            { Contain bins which contain collected wastes which contains wastedata}\r\n            @notice Bins in this list are owned by addresses.\r\n    */\r\n    BinData[] public bins;\r\n    \r\n    mapping (Share=>uint8) public formula;\r\n    \r\n\r\n    /**\r\n        @dev Mapping of Generated and Recycled Waste State -> binId (binCounter) -> WasteData\r\n        Keys type: \r\n            o State\r\n            o uint256\r\n\r\n        value:\r\n           array of struct(s) \r\n     */\r\n    mapping (State=>WasteData[]) private _garbages;\r\n    \r\n    /**\r\n        @dev Mapping of Waste State -> user -> profile\r\n        Keys type: \r\n            o State\r\n            o address\r\n\r\n        value:\r\n            struct \r\n     */\r\n    mapping (Category=>mapping(address=>Profile)) private profiles;\r\n\r\n    /**\r\n        @dev Sign up fees for different category.\r\n            @notice - It can be configured to suit any category.\r\n     */\r\n    mapping (Category=>uint256) public signUpFees;\r\n\r\n    ///@dev Rewards\r\n    // mapping(address=>uint) public rewards;\r\n\r\n\r\n    modifier validateWasteId(uint binId, uint wasteId, State state, string memory errorMessage) {\r\n        if(state == State.COLLECTED) {\r\n            if(wasteId >= bins[binId].bin.length) revert InvalidWasteId();\r\n        } else if(state == State.GENERATED) {\r\n            require(wasteId < _garbages[state].length, \"Invalid wasteId\");\r\n        } else {\r\n            if(binId >= bins.length) revert InvalidBinID();\r\n        }\r\n\r\n        // require(wasteId < bins[binId].bin.length, \"Errror\");\r\n        // require(bins[binId].bin[wasteId].state == state, errorMessage);\r\n        _;\r\n    }\r\n\r\n    ///Checks user's existence\r\n    modifier isApproved(Category cat, address who) {\r\n        if(!_getApproval(cat, who)) revert UserAlreadyNotExist();\r\n        _;\r\n    }\r\n\r\n    ///@dev Validates category\r\n    modifier validateCategory(uint8 cat) {\r\n        require(cat < 4, \"Invalid category\");\r\n        _;\r\n    }\r\n\r\n    //Checks that the size of wastes not greater than 50\r\n    modifier validateSize(uint[] memory wasteIDs, string[] memory wastedata) {\r\n        (uint8 low, uint8 high) = (0, 50);\r\n        wastedata.length == 0 ? require(\r\n            wasteIDs.length > low && wasteIDs.length <= high, \r\n            \"invalid\"\r\n        ) : require(wastedata.length > low && wastedata.length <= high, \"invalid\");\r\n        _;\r\n    }\r\n\r\n    constructor (address _token) { \r\n        token = _token;\r\n        newSignUpReward = 10 * (10 ** 18);\r\n        profiles[Category.BINOWNER][_msgSender()].approval = true;\r\n        formula[Share.COLLECTOR] = 65;\r\n        formula[Share.GENERATOR] = 10;\r\n        formula[Share.TEAM] = 25;\r\n    }\r\n\r\n    /**\r\n        @notice Sign up function. \r\n                o Caller must not already be a member. \r\n    */\r\n    function signUpAsWasteCollector(string memory location, string memory _address) public {\r\n       require(!profiles[Category.COLLECTOR][_msgSender()].isRegistered, \"Already sign up\");\r\n       IBoolaLib.registerCollector(profiles, _msgSender(), location, _address);\r\n       IERC20(token).approve(_msgSender(), newSignUpReward);\r\n    }\r\n\r\n    function getProfile(uint category, address who) public view returns(Profile memory _profile) {\r\n        require(category < 5, \"Invalid\");\r\n        _profile = profiles[Category(category)][who];\r\n    }\r\n\r\n    /**\r\n        @dev Adds new bin.\r\n            @notice Caller must already be approves as BinOwner .\r\n    */\r\n    function registerBin() public payable {\r\n        require(!profiles[Category.BINOWNER][msg.sender].isRegistered, \"Already registered\");\r\n        uint binId = IBoolaLib.registerNewBin(bins, _msgSender());\r\n        profiles[Category.BINOWNER][msg.sender].isRegistered = true;\r\n        binCounter ++;\r\n        emit RegisteredBin(binId, _msgSender());\r\n    }\r\n\r\n    /**\r\n        @dev Removes bin at binId.\r\n            @notice Caller must already be approves as BinOwner .\r\n    */\r\n    function removeBin(uint binId) public isApproved(Category.BINOWNER, _msgSender()) {\r\n        address _owner = _getBinOwner(binId);\r\n        if(_msgSender() != owner()) require(_msgSender() == _owner, \"Not Authorized\");\r\n        \r\n        IBoolaLib.removeBin(bins, binId);\r\n    }\r\n\r\n    /**@dev Returns list of wastes under each 'State'\r\n        i.e Generated waste data, Collected waste data, ...rest\r\n    */\r\n    function garbages(uint8 _category) public view returns(WasteData[] memory _data) {\r\n        require(_category < 3, \"Invalid selecetor\");\r\n        _data = _garbages[State(_category)];\r\n    }\r\n\r\n    ///@dev Return owner of bin at binId. \r\n    function _getBinOwner(uint binId) private view returns(address) {\r\n        return bins[binId].owner;\r\n    }\r\n\r\n    /**\r\n        @dev Whitelist user\r\n            Note Admin privilege.\r\n                cat should reference the Category enum.\r\n     */\r\n    function whitelistuser(address who, uint8 category) public onlyOwner validateCategory(category) {\r\n        IBoolaLib.setStatus(profiles, who, true, Category(category));\r\n    }\r\n\r\n    /**\r\n        @dev Blacklist user\r\n            Note Admin privilege.\r\n                cat should reference the Category enum.\r\n     */\r\n    function blacklistUser(address who, uint8 category) public onlyOwner validateCategory(category){\r\n        IBoolaLib.setStatus(profiles, who, false, Category(category));\r\n    }\r\n\r\n    /**\r\n        @dev Set new fee\r\n            @notice To perfectly select the right category,\r\n                category parameter should not be greater than 4.\r\n     */\r\n    function setFee(uint8 category, uint newFee) public onlyOwner {\r\n        require(category < 4, \"Invalid category\");\r\n        signUpFees[Category(category)] = newFee;\r\n    }\r\n\r\n    /**\r\n        @dev Generates new waste. \r\n        @notice Each waste is unique to another.\r\n            Note To successfully generate waste, bin id must be provided.\r\n                    This represents the destination where wastes are dumped.\r\n     */\r\n    function generateWaste(string memory _data) public isApproved(Category.GENERATOR, _msgSender()) {\r\n        State state = State.GENERATED;\r\n        totalWasteGenerated ++;\r\n        uint nonce = totalWasteGenerated;\r\n        IBoolaLib.portToMap(\r\n            _garbages, \r\n             WasteData(\r\n                keccak256(abi.encodePacked(bytes(_data), nonce)), \r\n                address(0), \r\n                _msgSender(), \r\n                address(0),\r\n                state\r\n            ), \r\n            state\r\n        );\r\n    }\r\n\r\n    function _empty() internal pure returns(Empty memory empty) {\r\n        uint[] memory wasteIds = new uint[](0);\r\n        string[] memory wastedata = new string[](0);\r\n        empty = Empty(wasteIds, wastedata);\r\n    }\r\n\r\n    ///@dev Generates multiple waste data\r\n    function generateMultipleWaste(string[] memory data) public validateSize(_empty().wasteIds, data) {\r\n        for (uint i=0; i < data.length; i++) {\r\n            generateWaste(data[i]);\r\n        }\r\n    }\r\n\r\n    /**\r\n        @dev Gets approval for user 'who'\r\n            @param cat - Category of user e.g COLLECTOR etc\r\n            @param who - Address of user.\r\n    */\r\n    function _getApproval(Category cat, address who) internal view returns(bool) {\r\n        return profiles[cat][who].approval;\r\n    }\r\n\r\n    /**\r\n        @dev Collect waste.\r\n            Note : Only generated waste can be collected\r\n            @param binId - Bin where the waste is located.\r\n            @param wasteId - Which waste to collect.\r\n                    Note - Every waste is unique to another.\r\n                            To make purchase of manure easy, wastes are recycled\r\n                            in 50s.\r\n     */\r\n    function recycle(uint binId, uint wasteId) internal isApproved(Category.RECYCLER, _msgSender()) validateWasteId(binId, wasteId, State.COLLECTED, \"Invalid waste pointer\") {\r\n        WasteData memory outWaste = IBoolaLib.popFromArray(bins, binId, wasteId);\r\n        IBoolaLib.portToMap(_garbages, outWaste, State.RECYCLED);\r\n        uint amount = collectorReward;\r\n\r\n        (uint collector, uint generator, uint team) = IBoolaLib.split(formula, amount);\r\n        IERC20(token).approve(outWaste.collector, collector);\r\n        IERC20(token).approve(outWaste.generator, generator);\r\n        IERC20(token).approve(address(this), team);\r\n\r\n    }\r\n\r\n    ///@notice Can recycle wastes greater than 0 but less than 51\r\n    function recycleMultiple(uint binId, uint[] memory wasteIds) public validateSize(wasteIds, _empty().wastedata) {\r\n        for (uint i = 0; i < wasteIds.length; i++) {\r\n            recycle(binId, wasteIds[i]);\r\n        }\r\n    }\r\n\r\n\r\n    /**@notice Withdraw reward if any {IBoola Token}\r\n        Note - Caller must have previous reward otherwise it fails.\r\n     */\r\n    function withdraw() public {\r\n        uint rewardBal = IERC20(token).allowance(address(this),_msgSender());\r\n        if(rewardBal == 0) revert NothingToWithdraw();\r\n        IERC20(token).transferFrom(address(this), _msgSender(), rewardBal);\r\n    }\r\n\r\n    /**\r\n        @dev Collect waste for disposal. \r\n            Note: Caller must be an approved waste collector.\r\n                must supply the following:\r\n                    o @param binId - Location of bin to deposit collected waste. ie bin index\r\n                    o @param wasteId - Identifier for waste collected.\r\n     */\r\n\r\n    function collectWaste(uint binId, uint wasteId) public isApproved(Category.COLLECTOR, _msgSender()) validateWasteId(binId, wasteId, State.GENERATED, \"Invalid waste pointer\") {\r\n        require(profiles[Category.COLLECTOR][_msgSender()].isRegistered,\"Not allowed\");\r\n        State _state = State.GENERATED;\r\n        require(_garbages[_state].length > wasteId, \"wasteId out of bound\");\r\n        WasteData memory outWaste = IBoolaLib.popFromMapping(_garbages, wasteId, _state);\r\n        IBoolaLib.portToArray(bins, binId, outWaste, State.COLLECTED);\r\n\r\n    }\r\n\r\n    //See `collectWaste()` except that this runs mulitple time.\r\n    function collectMultipleWaste(uint binId, uint[] memory wasteIds) public validateSize(wasteIds,_empty().wastedata) {\r\n        for (uint i = 0; i < wasteIds.length; i++) {\r\n            collectWaste(binId, wasteIds[i]);\r\n        }\r\n    }\r\n\r\n    /**@notice Buy recycled waste in form of manure\r\n        NOTE: Only recycled waste can be bought.\r\n        If available manure cannot cover requested volume, buyer simply \r\n        purchased available volume.\r\n     */\r\n    function buyRecycled(uint volume) public payable {\r\n        uint len = _garbages[State.RECYCLED].length;\r\n        uint actualVolume;\r\n        State _s = State.RECYCLED;\r\n        require(len > 0 && len >= volume, \"Not available\");\r\n        for(uint i = 0; i < volume; i++) {\r\n            WasteData memory wd = _garbages[_s][i];\r\n            if(wd.recycler != address(0)) {\r\n                actualVolume ++;\r\n                profiles[Category.SOLD][_msgSender()].purchased.push(WasteData(\r\n                    wd.value,\r\n                    wd.collector,\r\n                    wd.generator,\r\n                    wd.recycler,\r\n                    wd.state\r\n                ));\r\n                delete _garbages[_s][i];\r\n            }\r\n        }\r\n        uint amtToPay = price * actualVolume;\r\n        require(msg.value >= amtToPay, \"IValue\");\r\n        \r\n     }\r\n\r\n    ///@dev Sets new price for recycled waste.\r\n    function setPrice(uint newPrice) public onlyOwner {\r\n        price = newPrice;\r\n    }\r\n\r\n\r\n    ///@dev Sets new sign up reward. Note With access modifier\r\n    function setSignUpReward(uint newReward) public onlyOwner{\r\n        newSignUpReward = newReward;\r\n    }\r\n\r\n    ///@dev Sets new sign up reward. Note With access modifier\r\n    function setCollectorUpReward(uint newReward) public onlyOwner{\r\n        collectorReward = newReward;\r\n    }\r\n\r\n\r\n}\r\n"
      },
      "contracts/libraries/IBoolaLib.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"../interfaces/Common.sol\";\r\n\r\nlibrary IBoolaLib {\r\n  /**\r\n    @dev Sign up new collector\r\n      @param self - Storage\r\n      @param newCollector - Address of new Collector to add.\r\n   */\r\n\r\n  function registerCollector(\r\n    mapping (Common.Category=>mapping(address=>Common.Profile)) storage self, \r\n      address newCollector, \r\n      string memory location, \r\n      string memory _address\r\n    ) internal {\r\n      Common.Category _c = Common.Category.COLLECTOR;\r\n      self[_c][newCollector].transactionTime = _now();\r\n      self[_c][newCollector].wasteCount = 0;\r\n      self[_c][newCollector].approval = false;\r\n      self[_c][newCollector].isRegistered = true;\r\n      self[_c][newCollector].metadata = abi.encode(location, _address);\r\n  }\r\n\r\n  /**\r\n    @dev Dual function: \r\n            o Recycles collected waste.\r\n            o Generate new waste.\r\n   */\r\n  function portToMap(\r\n    mapping (Common.State=>Common.WasteData[]) storage self, \r\n    Common.WasteData memory inWaste,\r\n    Common.State state\r\n  ) internal {\r\n    self[state].push(Common.WasteData(\r\n        inWaste.value,\r\n        inWaste.collector,\r\n        inWaste.generator,\r\n        inWaste.recycler,\r\n        state\r\n      )\r\n    );\r\n  }\r\n\r\n  ///@dev Moves waste to bin\r\n  function portToArray(Common.BinData[] storage self, uint binId, Common.WasteData memory inWaste, Common.State state) internal {\r\n    self[binId].bin.push(Common.WasteData(\r\n      inWaste.value,\r\n      inWaste.collector,\r\n      inWaste.generator,\r\n      inWaste.recycler,\r\n      state\r\n    )\r\n    );\r\n  }\r\n\r\n  ///@dev Removes waste at 'wasteId' from bin at 'binId' in bin array at hashmap 'self'\r\n  function popFromMapping(mapping (Common.State=>Common.WasteData[]) storage self, uint wasteId, Common.State state) internal returns(Common.WasteData memory _waste) {\r\n    _waste = self[state][wasteId];\r\n    delete self[state][wasteId];\r\n  }\r\n\r\n  ///@dev Removes waste at 'wasteId' from bin at 'binId' in bin array 'self'\r\n  function popFromArray(Common.BinData[] storage self, uint binId, uint wasteId) internal returns(Common.WasteData memory _waste) {\r\n    _waste = self[binId].bin[wasteId];\r\n    delete self[binId].bin[wasteId];\r\n  }\r\n\r\n  /**\r\n    @dev Sets collectors status to either true or false\r\n    @param value - Value to set status to.\r\n    @param who - User to set status for.\r\n    @param self - storage.\r\n      Note : If value is true, collector's status must be false vice versa.\r\n   */\r\n  function setStatus(mapping (Common.Category=>mapping(address=>Common.Profile)) storage self, address who, bool value, Common.Category cat) internal {\r\n    bool prevStatus = _previousStatus(self, who, cat);\r\n    if(value) {\r\n      if(prevStatus) revert Common.UserAlreadyExist();\r\n      self[cat][who].approval = true;\r\n    } else {\r\n      if(!prevStatus) revert Common.UserAlreadyNotExist();\r\n      self[cat][who].approval = false;\r\n    }\r\n  }\r\n\r\n  function _previousStatus(mapping (Common.Category=>mapping(address=>Common.Profile)) storage self, address who, Common.Category cat) private view returns(bool) {\r\n    return self[cat][who].approval;\r\n  }\r\n\r\n  /**\r\n    @dev Registers new bin with owner.\r\n        @param owner - Bin Owner\r\n        @param self - Storage\r\n        @return newId \r\n   */\r\n  function registerNewBin(Common.BinData[] storage self, address owner) internal returns(uint newId) {\r\n    newId = self.length;\r\n    self.push();\r\n    self[newId].owner = owner;\r\n  }\r\n\r\n  /**\r\n    @dev Removes bin from bin array.\r\n      @notice binId must be less than the bin array at any time since arrays are zero-based.\r\n      @param self - Storage\r\n   */\r\n  function removeBin(Common.BinData[] storage self, uint binId) internal {\r\n    (uint len, Common.BinData memory wasteBin)  = (self.length, self[binId]);\r\n    if(wasteBin.bin.length == 0) revert Common.EmptyBin();\r\n    for(uint i = 0; i < len; i++) {\r\n      if(wasteBin.bin[i].state < Common.State.RECYCLED) {\r\n        revert Common.CannotDeleteBinInEngagedMode();\r\n      }\r\n    } \r\n    delete self[binId];\r\n  }\r\n\r\n  function split(mapping (Common.Share=>uint8) storage self, uint amount) internal view returns(uint collector, uint generator, uint team) {\r\n    collector = (self[Common.Share.COLLECTOR] * amount) / 100;\r\n    generator = (self[Common.Share.GENERATOR] * amount) / 100;\r\n    team = (self[Common.Share.TEAM] * amount) / 100;\r\n\r\n  }\r\n\r\n  function _now() internal view returns(uint32) { return uint32(block.timestamp); }\r\n\r\n}"
      },
      "contracts/deps/Ownable.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Contract module which provides a basic access control mechanism, where\r\n * there is an account (an owner) that can be granted exclusive access to\r\n * specific functions.\r\n *\r\n * By default, the owner account will be the one that deploys the contract. This\r\n * can later be changed with {transferOwnership}.\r\n *\r\n * This module is used through inheritance. It will make available the modifier\r\n * `onlyOwner`, which can be applied to your functions to restrict their use to\r\n * the owner.\r\n */\r\nabstract contract Ownable is Context {\r\n    address private _owner;\r\n\r\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\r\n\r\n    /**\r\n     * @dev Initializes the contract setting the deployer as the initial owner.\r\n     */\r\n    constructor() {\r\n        _transferOwnership(_msgSender());\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if called by any account other than the owner.\r\n     */\r\n    modifier onlyOwner() {\r\n        _checkOwner();\r\n        _;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the address of the current owner.\r\n     */\r\n    function owner() public view virtual returns (address) {\r\n        return _owner;\r\n    }\r\n\r\n    /**\r\n     * @dev Throws if the sender is not the owner.\r\n     */\r\n    function _checkOwner() internal view virtual {\r\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\r\n    }\r\n\r\n    /**\r\n     * @dev Leaves the contract without owner. It will not be possible to call\r\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\r\n     *\r\n     * NOTE: Renouncing ownership will leave the contract without an owner,\r\n     * thereby removing any functionality that is only available to the owner.\r\n     */\r\n    function renounceOwnership() public virtual onlyOwner {\r\n        _transferOwnership(address(0));\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Can only be called by the current owner.\r\n     */\r\n    function transferOwnership(address newOwner) public virtual onlyOwner {\r\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\r\n        _transferOwnership(newOwner);\r\n    }\r\n\r\n    /**\r\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\r\n     * Internal function without access restriction.\r\n     */\r\n    function _transferOwnership(address newOwner) internal virtual {\r\n        address oldOwner = _owner;\r\n        _owner = newOwner;\r\n        emit OwnershipTransferred(oldOwner, newOwner);\r\n    }\r\n}\r\n"
      },
      "contracts/deps/IERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\n/**\r\n * @dev Interface of the ERC20 standard as defined in the EIP.\r\n */\r\ninterface IERC20 {\r\n    /**\r\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\r\n     * another (`to`).\r\n     *\r\n     * Note that `value` may be zero.\r\n     */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /**\r\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\r\n     * a call to {approve}. `value` is the new allowance.\r\n     */\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens in existence.\r\n     */\r\n    function totalSupply() external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Returns the amount of tokens owned by `account`.\r\n     */\r\n    function balanceOf(address account) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from the caller's account to `to`.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transfer(address to, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Returns the remaining number of tokens that `spender` will be\r\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\r\n     * zero by default.\r\n     *\r\n     * This value changes when {approve} or {transferFrom} are called.\r\n     */\r\n    function allowance(address owner, address spender) external view returns (uint256);\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\r\n     * that someone may use both the old and the new allowance by unfortunate\r\n     * transaction ordering. One possible solution to mitigate this race\r\n     * condition is to first reduce the spender's allowance to 0 and set the\r\n     * desired value afterwards:\r\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\r\n     *\r\n     * Emits an {Approval} event.\r\n     */\r\n    function approve(address spender, uint256 amount) external returns (bool);\r\n\r\n    /**\r\n     * @dev Moves `amount` tokens from `from` to `to` using the\r\n     * allowance mechanism. `amount` is then deducted from the caller's\r\n     * allowance.\r\n     *\r\n     * Returns a boolean value indicating whether the operation succeeded.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) external returns (bool);\r\n}\r\n"
      },
      "contracts/interfaces/Common.sol": {
        "content": "// SPDX-License-Identifier: GPL-3.0\r\n\r\npragma solidity ^0.8.0;\r\n\r\ninterface Common {\r\n  enum State { GENERATED, COLLECTED, RECYCLED }\r\n  enum Category { COLLECTOR, GENERATOR, RECYCLER, BINOWNER, SOLD }\r\n  enum Share { COLLECTOR, GENERATOR, TEAM }\r\n\r\n  error UserAlreadyExist();\r\n  error UserAlreadyNotExist();\r\n  error InvalidBinID();\r\n  error EmptyBin();\r\n  error CannotDeleteBinInEngagedMode();\r\n  error InvalidWasteId();\r\n  error NothingToWithdraw();\r\n  error MaxWasteTransportExceeded();\r\n\r\n  event RegisteredBin(uint binId, address msgSender);\r\n\r\n  struct WasteData {\r\n    bytes32 value;\r\n    address collector;\r\n    address generator;\r\n    address recycler;\r\n    State state;\r\n  }\r\n\r\n  struct Profile {\r\n    uint32 transactionTime;\r\n    uint wasteCount;\r\n    bool approval;\r\n    bool isRegistered;\r\n    WasteData[] purchased;\r\n    bytes metadata;\r\n  }\r\n\r\n  struct BinData {\r\n    WasteData[] bin;\r\n    address owner;\r\n  }\r\n\r\n  struct Empty {\r\n    uint[] wasteIds;\r\n    string[] wastedata;\r\n  }\r\n\r\n}"
      },
      "contracts/deps/IERC20Metadata.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\n\r\n/**\r\n * @dev Interface for the optional metadata functions from the ERC20 standard.\r\n *\r\n * _Available since v4.1._\r\n */\r\ninterface IERC20Metadata is IERC20 {\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token.\r\n     */\r\n    function symbol() external view returns (string memory);\r\n\r\n    /**\r\n     * @dev Returns the decimals places of the token.\r\n     */\r\n    function decimals() external view returns (uint8);\r\n}\r\n"
      },
      "contracts/deps/ERC20.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\r\n\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./IERC20.sol\";\r\nimport \"./IERC20Metadata.sol\";\r\nimport \"./Context.sol\";\r\n\r\n/**\r\n * @dev Implementation of the {IERC20} interface.\r\n *\r\n * This implementation is agnostic to the way tokens are created. This means\r\n * that a supply mechanism has to be added in a derived contract using {_mint}.\r\n * For a generic mechanism see {ERC20PresetMinterPauser}.\r\n *\r\n * TIP: For a detailed writeup see our guide\r\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\r\n * to implement supply mechanisms].\r\n *\r\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\r\n * instead returning `false` on failure. This behavior is nonetheless\r\n * conventional and does not conflict with the expectations of ERC20\r\n * applications.\r\n *\r\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\r\n * This allows applications to reconstruct the allowance for all accounts just\r\n * by listening to said events. Other implementations of the EIP may not emit\r\n * these events, as it isn't required by the specification.\r\n *\r\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\r\n * functions have been added to mitigate the well-known issues around setting\r\n * allowances. See {IERC20-approve}.\r\n */\r\ncontract ERC20 is Context, IERC20, IERC20Metadata {\r\n    mapping(address => uint256) private _balances;\r\n\r\n    mapping(address => mapping(address => uint256)) private _allowances;\r\n\r\n    uint256 private _totalSupply;\r\n\r\n    string private _name;\r\n    string private _symbol;\r\n\r\n    /**\r\n     * @dev Sets the values for {name} and {symbol}.\r\n     *\r\n     * The default value of {decimals} is 18. To select a different value for\r\n     * {decimals} you should overload it.\r\n     *\r\n     * All two of these values are immutable: they can only be set once during\r\n     * construction.\r\n     */\r\n    constructor(string memory name_, string memory symbol_) {\r\n        _name = name_;\r\n        _symbol = symbol_;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the name of the token.\r\n     */\r\n    function name() public view virtual override returns (string memory) {\r\n        return _name;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the symbol of the token, usually a shorter version of the\r\n     * name.\r\n     */\r\n    function symbol() public view virtual override returns (string memory) {\r\n        return _symbol;\r\n    }\r\n\r\n    /**\r\n     * @dev Returns the number of decimals used to get its user representation.\r\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\r\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\r\n     *\r\n     * Tokens usually opt for a value of 18, imitating the relationship between\r\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\r\n     * overridden;\r\n     *\r\n     * NOTE: This information is only used for _display_ purposes: it in\r\n     * no way affects any of the arithmetic of the contract, including\r\n     * {IERC20-balanceOf} and {IERC20-transfer}.\r\n     */\r\n    function decimals() public view virtual override returns (uint8) {\r\n        return 18;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-totalSupply}.\r\n     */\r\n    function totalSupply() public view virtual override returns (uint256) {\r\n        return _totalSupply;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-balanceOf}.\r\n     */\r\n    function balanceOf(address account) public view virtual override returns (uint256) {\r\n        return _balances[account];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transfer}.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `to` cannot be the zero address.\r\n     * - the caller must have a balance of at least `amount`.\r\n     */\r\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _transfer(owner, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-allowance}.\r\n     */\r\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\r\n        return _allowances[owner][spender];\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-approve}.\r\n     *\r\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\r\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev See {IERC20-transferFrom}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance. This is not\r\n     * required by the EIP. See the note at the beginning of {ERC20}.\r\n     *\r\n     * NOTE: Does not update the allowance if the current allowance\r\n     * is the maximum `uint256`.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` and `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     * - the caller must have allowance for ``from``'s tokens of at least\r\n     * `amount`.\r\n     */\r\n    function transferFrom(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) public virtual override returns (bool) {\r\n        address spender = _msgSender();\r\n        _spendAllowance(from, spender, amount);\r\n        _transfer(from, to, amount);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\r\n     *\r\n     * This is an alternative to {approve} that can be used as a mitigation for\r\n     * problems described in {IERC20-approve}.\r\n     *\r\n     * Emits an {Approval} event indicating the updated allowance.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `spender` cannot be the zero address.\r\n     * - `spender` must have allowance for the caller of at least\r\n     * `subtractedValue`.\r\n     */\r\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\r\n        address owner = _msgSender();\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        require(currentAllowance >= subtractedValue, \"ERC20: decreased allowance below zero\");\r\n        unchecked {\r\n            _approve(owner, spender, currentAllowance - subtractedValue);\r\n        }\r\n\r\n        return true;\r\n    }\r\n\r\n    /**\r\n     * @dev Moves `amount` of tokens from `from` to `to`.\r\n     *\r\n     * This internal function is equivalent to {transfer}, and can be used to\r\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\r\n     *\r\n     * Emits a {Transfer} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `from` cannot be the zero address.\r\n     * - `to` cannot be the zero address.\r\n     * - `from` must have a balance of at least `amount`.\r\n     */\r\n    function _transfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(from != address(0), \"ERC20: transfer from the zero address\");\r\n        require(to != address(0), \"ERC20: transfer to the zero address\");\r\n\r\n        _beforeTokenTransfer(from, to, amount);\r\n\r\n        uint256 fromBalance = _balances[from];\r\n        require(fromBalance >= amount, \"ERC20: transfer amount exceeds balance\");\r\n        unchecked {\r\n            _balances[from] = fromBalance - amount;\r\n        }\r\n        _balances[to] += amount;\r\n\r\n        emit Transfer(from, to, amount);\r\n\r\n        _afterTokenTransfer(from, to, amount);\r\n    }\r\n\r\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\r\n     * the total supply.\r\n     *\r\n     * Emits a {Transfer} event with `from` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     */\r\n    function _mint(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: mint to the zero address\");\r\n\r\n        _beforeTokenTransfer(address(0), account, amount);\r\n\r\n        _totalSupply += amount;\r\n        _balances[account] += amount;\r\n        emit Transfer(address(0), account, amount);\r\n\r\n        _afterTokenTransfer(address(0), account, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Destroys `amount` tokens from `account`, reducing the\r\n     * total supply.\r\n     *\r\n     * Emits a {Transfer} event with `to` set to the zero address.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `account` cannot be the zero address.\r\n     * - `account` must have at least `amount` tokens.\r\n     */\r\n    function _burn(address account, uint256 amount) internal virtual {\r\n        require(account != address(0), \"ERC20: burn from the zero address\");\r\n\r\n        _beforeTokenTransfer(account, address(0), amount);\r\n\r\n        uint256 accountBalance = _balances[account];\r\n        require(accountBalance >= amount, \"ERC20: burn amount exceeds balance\");\r\n        unchecked {\r\n            _balances[account] = accountBalance - amount;\r\n        }\r\n        _totalSupply -= amount;\r\n\r\n        emit Transfer(account, address(0), amount);\r\n\r\n        _afterTokenTransfer(account, address(0), amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\r\n     *\r\n     * This internal function is equivalent to `approve`, and can be used to\r\n     * e.g. set automatic allowances for certain subsystems, etc.\r\n     *\r\n     * Emits an {Approval} event.\r\n     *\r\n     * Requirements:\r\n     *\r\n     * - `owner` cannot be the zero address.\r\n     * - `spender` cannot be the zero address.\r\n     */\r\n    function _approve(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        require(owner != address(0), \"ERC20: approve from the zero address\");\r\n        require(spender != address(0), \"ERC20: approve to the zero address\");\r\n\r\n        _allowances[owner][spender] = amount;\r\n        emit Approval(owner, spender, amount);\r\n    }\r\n\r\n    /**\r\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\r\n     *\r\n     * Does not update the allowance amount in case of infinite allowance.\r\n     * Revert if not enough allowance is available.\r\n     *\r\n     * Might emit an {Approval} event.\r\n     */\r\n    function _spendAllowance(\r\n        address owner,\r\n        address spender,\r\n        uint256 amount\r\n    ) internal virtual {\r\n        uint256 currentAllowance = allowance(owner, spender);\r\n        if (currentAllowance != type(uint256).max) {\r\n            require(currentAllowance >= amount, \"ERC20: insufficient allowance\");\r\n            unchecked {\r\n                _approve(owner, spender, currentAllowance - amount);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * @dev Hook that is called before any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * will be transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _beforeTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n\r\n    /**\r\n     * @dev Hook that is called after any transfer of tokens. This includes\r\n     * minting and burning.\r\n     *\r\n     * Calling conditions:\r\n     *\r\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\r\n     * has been transferred to `to`.\r\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\r\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\r\n     * - `from` and `to` are never both zero.\r\n     *\r\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\r\n     */\r\n    function _afterTokenTransfer(\r\n        address from,\r\n        address to,\r\n        uint256 amount\r\n    ) internal virtual {}\r\n}\r\n"
      },
      "contracts/IBoolaToken.sol": {
        "content": "// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.0;\r\n\r\nimport \"./deps/ERC20.sol\";\r\nimport \"./deps/Ownable.sol\";\r\n\r\n/**\r\n * @notice A simple ERC20 Token implementation that also accepts donation for the project\r\n */\r\ncontract IBoolaToken is ERC20, Ownable {\r\n    constructor() ERC20(\"iBoola Token\", \"IBT\") {\r\n        \r\n        /// @notice mint 10000 tokens to the owner\r\n        _mint(_msgSender(), 6_000_000_000 * (10 ** 18));\r\n    }\r\n\r\n    function mint(address to, uint amount) public onlyOwner {\r\n        _mint(to, amount);\r\n    }\r\n\r\n    function burn(uint amount) public {\r\n        _burn(_msgSender(), amount);\r\n    }\r\n}\r\n"
      }
    },
    "settings": {
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "outputSelection": {
        "*": {
          "*": [
            "abi",
            "evm.bytecode",
            "evm.deployedBytecode",
            "evm.methodIdentifiers",
            "metadata",
            "devdoc",
            "userdoc",
            "storageLayout",
            "evm.gasEstimates"
          ],
          "": [
            "ast"
          ]
        }
      },
      "metadata": {
        "useLiteralContent": true
      }
    }
  },
  "output": {
    "contracts": {
      "contracts/IBoolaContract.sol": {
        "IBoolaContract": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "_token",
                  "type": "address"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "inputs": [],
              "name": "CannotDeleteBinInEngagedMode",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EmptyBin",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidBinID",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidWasteId",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MaxWasteTransportExceeded",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NothingToWithdraw",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UserAlreadyExist",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UserAlreadyNotExist",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "binId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "msgSender",
                  "type": "address"
                }
              ],
              "name": "RegisteredBin",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "binCounter",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "name": "bins",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "category",
                  "type": "uint8"
                }
              ],
              "name": "blacklistUser",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "volume",
                  "type": "uint256"
                }
              ],
              "name": "buyRecycled",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "binId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "wasteIds",
                  "type": "uint256[]"
                }
              ],
              "name": "collectMultipleWaste",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "binId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "wasteId",
                  "type": "uint256"
                }
              ],
              "name": "collectWaste",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "collectorReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum Common.Share",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "name": "formula",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "_category",
                  "type": "uint8"
                }
              ],
              "name": "garbages",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "bytes32",
                      "name": "value",
                      "type": "bytes32"
                    },
                    {
                      "internalType": "address",
                      "name": "collector",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "generator",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "recycler",
                      "type": "address"
                    },
                    {
                      "internalType": "enum Common.State",
                      "name": "state",
                      "type": "uint8"
                    }
                  ],
                  "internalType": "struct Common.WasteData[]",
                  "name": "_data",
                  "type": "tuple[]"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string[]",
                  "name": "data",
                  "type": "string[]"
                }
              ],
              "name": "generateMultipleWaste",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "_data",
                  "type": "string"
                }
              ],
              "name": "generateWaste",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "category",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                }
              ],
              "name": "getProfile",
              "outputs": [
                {
                  "components": [
                    {
                      "internalType": "uint32",
                      "name": "transactionTime",
                      "type": "uint32"
                    },
                    {
                      "internalType": "uint256",
                      "name": "wasteCount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "bool",
                      "name": "approval",
                      "type": "bool"
                    },
                    {
                      "internalType": "bool",
                      "name": "isRegistered",
                      "type": "bool"
                    },
                    {
                      "components": [
                        {
                          "internalType": "bytes32",
                          "name": "value",
                          "type": "bytes32"
                        },
                        {
                          "internalType": "address",
                          "name": "collector",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "generator",
                          "type": "address"
                        },
                        {
                          "internalType": "address",
                          "name": "recycler",
                          "type": "address"
                        },
                        {
                          "internalType": "enum Common.State",
                          "name": "state",
                          "type": "uint8"
                        }
                      ],
                      "internalType": "struct Common.WasteData[]",
                      "name": "purchased",
                      "type": "tuple[]"
                    },
                    {
                      "internalType": "bytes",
                      "name": "metadata",
                      "type": "bytes"
                    }
                  ],
                  "internalType": "struct Common.Profile",
                  "name": "_profile",
                  "type": "tuple"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "newSignUpReward",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "price",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "binId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "wasteIds",
                  "type": "uint256[]"
                }
              ],
              "name": "recycleMultiple",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "registerBin",
              "outputs": [],
              "stateMutability": "payable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "binId",
                  "type": "uint256"
                }
              ],
              "name": "removeBin",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newReward",
                  "type": "uint256"
                }
              ],
              "name": "setCollectorUpReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint8",
                  "name": "category",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "newFee",
                  "type": "uint256"
                }
              ],
              "name": "setFee",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newPrice",
                  "type": "uint256"
                }
              ],
              "name": "setPrice",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "newReward",
                  "type": "uint256"
                }
              ],
              "name": "setSignUpReward",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "location",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "_address",
                  "type": "string"
                }
              ],
              "name": "signUpAsWasteCollector",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "enum Common.Category",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "name": "signUpFees",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "token",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalWasteGenerated",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "who",
                  "type": "address"
                },
                {
                  "internalType": "uint8",
                  "name": "category",
                  "type": "uint8"
                }
              ],
              "name": "whitelistuser",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "withdraw",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "author": "Bobeu: https://github.com/bobeu A smart contract that will tokenize the disposal and collection of waste.  Users get a token when they dispose of their waste in a waste bin, collectors  get token for collecting waste and taking them to the waste recyclers  The process of tokenization happens when the waste drops in the waste bin. Every waste bin has a unique wallet ID which will receive the token at the end of evacuation. The owners of the waste bin will have a DAO.  Wallet  Token (iBoola token) which would be paired against either Avalanche, Celo or Polygon  New users get 10 $IBT after sign up  Community of waste bins will have a DAO  Waste generators get 10% collectors get 65 while the iBoola team gets 25%  Decimals: use standard 18 decimals  Mintable: not mintable Ownership privilege :  30% locked for 5 years, 20% for dev team 45% for  initial circulation,  5% for presale  PSEUDO ====== Parties: o Waste generators. o Collectors. o Recyclers. o When waste is disposed or evacuated, then reward collectors. o Each waste bin has a unique identifer and an owner. o On sign up, user gets 10 $IBT Token. o Waste collectors own a DAO. o Waste bin owners own a DAO. o Reward sharing formula Note - It is configurable. The owner account is able to  set each of these fields. - Waste generators 10%. - Collectors 65%. - Team 25%.",
            "kind": "dev",
            "methods": {
              "blacklistUser(address,uint8)": {
                "details": "Blacklist user Note Admin privilege. cat should reference the Category enum."
              },
              "collectWaste(uint256,uint256)": {
                "details": "Collect waste for disposal.  Note: Caller must be an approved waste collector. must supply the following:",
                "params": {
                  "binId": "- Location of bin to deposit collected waste. ie bin index",
                  "wasteId": "- Identifier for waste collected."
                }
              },
              "garbages(uint8)": {
                "details": "Returns list of wastes under each 'State' i.e Generated waste data, Collected waste data, ...rest"
              },
              "generateMultipleWaste(string[])": {
                "details": "Generates multiple waste data"
              },
              "generateWaste(string)": {
                "details": "Generates new waste. "
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "registerBin()": {
                "details": "Adds new bin."
              },
              "removeBin(uint256)": {
                "details": "Removes bin at binId."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "setCollectorUpReward(uint256)": {
                "details": "Sets new sign up reward. Note With access modifier"
              },
              "setFee(uint8,uint256)": {
                "details": "Set new fee"
              },
              "setPrice(uint256)": {
                "details": "Sets new price for recycled waste."
              },
              "setSignUpReward(uint256)": {
                "details": "Sets new sign up reward. Note With access modifier"
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              },
              "whitelistuser(address,uint8)": {
                "details": "Whitelist user Note Admin privilege. cat should reference the Category enum."
              }
            },
            "stateVariables": {
              "_garbages": {
                "details": "Mapping of Generated and Recycled Waste State -> binId (binCounter) -> WasteData Keys type:  o State o uint256 value: array of struct(s) "
              },
              "binCounter": {
                "details": "Total bin registered to date"
              },
              "bins": {
                "details": "Array of bins  { Contain bins which contain collected wastes which contains wastedata}"
              },
              "collectorReward": {
                "details": "Collector reward"
              },
              "newSignUpReward": {
                "details": "New sign up reward"
              },
              "price": {
                "details": "Price of recycled waste"
              },
              "profiles": {
                "details": "Mapping of Waste State -> user -> profile Keys type:  o State o address value: struct "
              },
              "signUpFees": {
                "details": "Sign up fees for different category."
              },
              "token": {
                "details": "iBoola Token"
              },
              "totalWasteGenerated": {
                "details": "Total waste generated to date"
              }
            },
            "title": "IBoolaContract",
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:326:9",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:9",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "95:229:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "141:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "150:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "158:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "143:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "143:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "143:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "116:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "125:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "112:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "112:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "137:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "108:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "108:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "105:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "176:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "195:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "189:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "189:16:9"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "180:5:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "268:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "277:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "285:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "270:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "270:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "270:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "227:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "238:5:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "253:3:9",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "258:1:9",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "249:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "249:11:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "262:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "245:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "245:19:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "234:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "234:31:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "224:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "224:42:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "217:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "217:50:9"
                              },
                              "nodeType": "YulIf",
                              "src": "214:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "303:15:9",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "313:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "303:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "61:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "72:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "84:6:9",
                            "type": ""
                          }
                        ],
                        "src": "14:310:9"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(value0, value0) }\n        value0 := value\n    }\n}",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b50604051620035c2380380620035c283398101604081905262000034916200020f565b6200003f33620001bf565b600280546001600160a01b0319166001600160a01b038316179055678ac7230489e80000600190815560036000908152600a6020527fa856840544dc26124927add067d799967eac11be13e14d82cc281ea46fa39759906200009e3390565b6001600160a01b031681526020808201929092526040016000908120600201805493151560ff199485161790558080526008918290527f5eff886ea0ce6ca488a3d6e336d6c0f75f46d19b42c06ce5ee98e42c96d256c78054909316604117909255600a91600160028111156200012557634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060006101000a81548160ff021916908360ff1602179055506019600860006002808111156200017257634e487b7160e01b600052602160045260246000fd5b60028111156200019257634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002060006101000a81548160ff021916908360ff160217905550506200023f565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60006020828403121562000221578081fd5b81516001600160a01b038116811462000238578182fd5b9392505050565b613373806200024f6000396000f3fe6080604052600436106101cc5760003560e01c806393051d95116100f7578063c3864cce11610095578063f2fde38b11610064578063f2fde38b1461052c578063f94045061461054c578063fc0c546a14610562578063ffc2105c1461058257600080fd5b8063c3864cce146104b9578063c437a2f0146104d9578063e47c294d146104ec578063f2d03e151461050c57600080fd5b8063a741c0df116100d1578063a741c0df14610422578063b75882801461044f578063bf5e6b6d1461046f578063c2f0c2791461047757600080fd5b806393051d95146103cc578063955ef11a146103ec578063a035b1fe1461040c57600080fd5b80633fd979271161016f578063885c7b381161013e578063885c7b38146103365780638c6aa3f51461036e5780638da5cb5b1461038e57806391b7f5ed146103ac57600080fd5b80633fd97927146102b457806341311bc3146102e1578063715018a61461030157806372938a141461031657600080fd5b80631f2a4a3f116101ab5780631f2a4a3f14610253578063235eb9f51461026957806331b59ed71461027f5780633ccfd60b1461029f57600080fd5b806295db2d146101d15780630b776241146102115780630bdd706314610233575b600080fd5b3480156101dd57600080fd5b506101fe6101ec366004612df7565b600b6020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561021d57600080fd5b5061023161022c366004612e70565b610598565b005b34801561023f57600080fd5b5061023161024e366004612f23565b6106bb565b34801561025f57600080fd5b506101fe60055481565b34801561027557600080fd5b506101fe60045481565b34801561028b57600080fd5b5061023161029a366004612cef565b610798565b3480156102ab57600080fd5b506102316107f4565b3480156102c057600080fd5b506102d46102cf366004612f01565b61093b565b6040516102089190613190565b3480156102ed57600080fd5b506102316102fc366004612f23565b610bfe565b34801561030d57600080fd5b50610231610cd2565b34801561032257600080fd5b50610231610331366004612ed1565b610ce6565b34801561034257600080fd5b50610356610351366004612ed1565b610cf3565b6040516001600160a01b039091168152602001610208565b34801561037a57600080fd5b50610231610389366004612ffd565b610d25565b34801561039a57600080fd5b506000546001600160a01b0316610356565b3480156103b857600080fd5b506102316103c7366004612ed1565b610dcb565b3480156103d857600080fd5b506102316103e7366004612ed1565b610dd8565b3480156103f857600080fd5b50610231610407366004612d21565b610e93565b34801561041857600080fd5b506101fe60065481565b34801561042e57600080fd5b5061044261043d366004612fe3565b610f6c565b6040516102089190613104565b34801561045b57600080fd5b5061023161046a366004612e35565b611110565b6102316111ea565b34801561048357600080fd5b506104a7610492366004612e16565b60086020526000908152604090205460ff1681565b60405160ff9091168152602001610208565b3480156104c557600080fd5b506102316104d4366004612fc2565b611313565b6102316104e7366004612ed1565b611567565b3480156104f857600080fd5b50610231610507366004612cef565b6119b7565b34801561051857600080fd5b50610231610527366004612ed1565b611a0e565b34801561053857600080fd5b50610231610547366004612cce565b611a1b565b34801561055857600080fd5b506101fe60015481565b34801561056e57600080fd5b50600254610356906001600160a01b031681565b34801561058e57600080fd5b506101fe60035481565b3360009081527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e36020526040902060020154610100900460ff16156106165760405162461bcd60e51b815260206004820152600f60248201526e0416c7265616479207369676e20757608c1b60448201526064015b60405180910390fd5b610623600a338484611a94565b6002546001600160a01b031663095ea7b3336001546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561067e57600080fd5b505af1158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b69190612dd7565b505050565b806106c4611b7a565b6020015180516000906032901561070d578160ff1683511180156106ec57508060ff16835111155b6107085760405162461bcd60e51b815260040161060d9061316f565b610740565b8160ff16845111801561072457508060ff16845111155b6107405760405162461bcd60e51b815260040161060d9061316f565b60005b855181101561078f5761077d8787838151811061077057634e487b7160e01b600052603260045260246000fd5b6020026020010151611bda565b80610787816132f6565b915050610743565b50505050505050565b6107a0611e69565b8060048160ff16106107c45760405162461bcd60e51b815260040161060d90613145565b6106b6600a8460018560ff1660048111156107ef57634e487b7160e01b600052602160045260246000fd5b611ec3565b60025460408051636eb1769f60e11b815230600482015233602482015290516000926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b15801561084557600080fd5b505afa158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190612ee9565b90508061089d57604051630686827b60e51b815260040160405180910390fd5b6002546001600160a01b03166323b872dd30336040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052606401602060405180830381600087803b1580156108ff57600080fd5b505af1158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190612dd7565b5050565b61097e6040518060c00160405280600063ffffffff1681526020016000815260200160001515815260200160001515815260200160608152602001606081525090565b600583106109b85760405162461bcd60e51b8152602060048201526007602482015266125b9d985b1a5960ca1b604482015260640161060d565b600a60008460048111156109dc57634e487b7160e01b600052602160045260246000fd5b60048111156109fb57634e487b7160e01b600052602160045260246000fd5b6004811115610a1a57634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b03861682528352818120825160c081018452815463ffffffff168152600182015481860152600282015460ff8082161515838701526101009091041615156060820152600382018054855181880281018801909652808652919592946080870194909391929184015b82821015610b5c5760008481526020908190206040805160a081018252600486029092018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff1690811115610b2a57634e487b7160e01b600052602160045260246000fd5b6002811115610b4957634e487b7160e01b600052602160045260246000fd5b8152505081526020019060010190610a9f565b505050508152602001600482018054610b74906132bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba0906132bb565b8015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b505050505081525050905092915050565b80610c07611b7a565b60200151805160009060329015610c50578160ff168351118015610c2f57508060ff16835111155b610c4b5760405162461bcd60e51b815260040161060d9061316f565b610c83565b8160ff168451118015610c6757508060ff16845111155b610c835760405162461bcd60e51b815260040161060d9061316f565b60005b855181101561078f57610cc087878381518110610cb357634e487b7160e01b600052603260045260246000fd5b6020026020010151611313565b80610cca816132f6565b915050610c86565b610cda611e69565b610ce4600061201b565b565b610cee611e69565b600455565b60078181548110610d0357600080fd5b60009182526020909120600160029092020101546001600160a01b0316905081565b610d2d611e69565b60048260ff1610610d505760405162461bcd60e51b815260040161060d90613145565b80600b60008460ff166004811115610d7857634e487b7160e01b600052602160045260246000fd5b6004811115610d9757634e487b7160e01b600052602160045260246000fd5b6004811115610db657634e487b7160e01b600052602160045260246000fd5b81526020810191909152604001600020555050565b610dd3611e69565b600655565b600333610de5828261206b565b610e025760405163aa6318d360e01b815260040160405180910390fd5b6000610e0d846120e5565b9050610e216000546001600160a01b031690565b6001600160a01b0316336001600160a01b031614610e8257336001600160a01b03821614610e825760405162461bcd60e51b815260206004820152600e60248201526d139bdd08105d5d1a1bdc9a5e995960921b604482015260640161060d565b610e8d60078561212b565b50505050565b610e9b611b7a565b518151829060009060329015610ee3578160ff168351118015610ec257508060ff16835111155b610ede5760405162461bcd60e51b815260040161060d9061316f565b610f16565b8160ff168451118015610efa57508060ff16845111155b610f165760405162461bcd60e51b815260040161060d9061316f565b60005b8551811015610f6457610f52868281518110610f4557634e487b7160e01b600052603260045260246000fd5b6020026020010151611110565b80610f5c816132f6565b915050610f19565b505050505050565b606060038260ff1610610fb55760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21039b2b632b1b2ba37b960791b604482015260640161060d565b600960008360ff166002811115610fdc57634e487b7160e01b600052602160045260246000fd5b6002811115610ffb57634e487b7160e01b600052602160045260246000fd5b600281111561101a57634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156111055760008481526020908190206040805160a081018252600486029092018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff16908111156110d357634e487b7160e01b600052602160045260246000fd5b60028111156110f257634e487b7160e01b600052602160045260246000fd5b8152505081526020019060010190611048565b505050509050919050565b60013361111d828261206b565b61113a5760405163aa6318d360e01b815260040160405180910390fd5b600380546000918261114b836132f6565b90915550506003546040805160a081019091526111e39060099080611174898660c084016130e2565b60405160208183030381529060405280519060200120815260200160006001600160a01b031681526020016111a63390565b6001600160a01b03168152600060208201526040018560028111156111db57634e487b7160e01b600052602160045260246000fd5b90528461236c565b5050505050565b3360009081527fa856840544dc26124927add067d799967eac11be13e14d82cc281ea46fa397596020526040902060020154610100900460ff16156112665760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b604482015260640161060d565b60006112736007336124e6565b3360009081527fa856840544dc26124927add067d799967eac11be13e14d82cc281ea46fa3975960205260408120600201805461ff00191661010017905560058054929350906112c2836132f6565b91905055507f0723b3a091c16d9ebe7fe55f416fb9ea16fe106c1094fb596b8fdaa98f2847fb816112f03390565b604080519283526001600160a01b0390911660208301520160405180910390a150565b600033611320828261206b565b61133d5760405163aa6318d360e01b815260040160405180910390fd5b60408051808201909152601581527424b73b30b634b2103bb0b9ba32903837b4b73a32b960591b60208201528490849060009061137a565b611458565b600082600281111561139c57634e487b7160e01b600052602160045260246000fd5b141561143657600960008360028111156113c657634e487b7160e01b600052602160045260246000fd5b60028111156113e557634e487b7160e01b600052602160045260246000fd5b815260208101919091526040016000205483106113755760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081dd85cdd195259608a1b604482015260640161060d565b600754841061145857604051638320418360e01b815260040160405180910390fd5b3360009081527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e36020526040902060020154610100900460ff166114cc5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b604482015260640161060d565b600080805260096020527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b54881061153d5760405162461bcd60e51b81526020600482015260146024820152731dd85cdd195259081bdd5d081bd988189bdd5b9960621b604482015260640161060d565b600061154b60098a84612551565b905061155b60078b836001612751565b50505050505050505050565b6002600081815260096020527f6cde3cea4b3a3fb2488b2808bae7556f4a405e50f65e1794383bc026131b13c3549182158015906115a55750838310155b6115e15760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420617661696c61626c6560981b604482015260640161060d565b60005b8481101561196b5760006009600084600281111561161257634e487b7160e01b600052602160045260246000fd5b600281111561163157634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020828154811061165e57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160a0810182526004939093029091018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff16908111156116e357634e487b7160e01b600052602160045260246000fd5b600281111561170257634e487b7160e01b600052602160045260246000fd5b90525060608101519091506001600160a01b0316156119585783611725816132f6565b60046000908152600a6020529095507fe1eb2b2161a492c07c5a334e48012567cba93ec021043f53c1955516a3c5a8419150336001600160a01b03166001600160a01b031681526020019081526020016000206003016040518060a001604052808360000151815260200183602001516001600160a01b0316815260200183604001516001600160a01b0316815260200183606001516001600160a01b03168152602001836080015160028111156117ed57634e487b7160e01b600052602160045260246000fd5b9052815460018082018455600093845260209384902083516004909302019182559282015192810180546001600160a01b03199081166001600160a01b0395861617909155604083015160028084018054841692871692909217909155606084015160038401805493841691909616908117865560808501519495939493926001600160a81b0319161790600160a01b90849081111561189d57634e487b7160e01b600052602160045260246000fd5b02179055505050600960008460028111156118c857634e487b7160e01b600052602160045260246000fd5b60028111156118e757634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020828154811061191457634e487b7160e01b600052603260045260246000fd5b6000918252602082206004909102019081556001810180546001600160a01b0319908116909155600282018054909116905560030180546001600160a81b03191690555b5080611963816132f6565b9150506115e4565b5060008260065461197c9190613270565b9050803410156111e35760405162461bcd60e51b81526020600482015260066024820152654956616c756560d01b604482015260640161060d565b6119bf611e69565b8060048160ff16106119e35760405162461bcd60e51b815260040161060d90613145565b6106b6600a8460008560ff1660048111156107ef57634e487b7160e01b600052602160045260246000fd5b611a16611e69565b600155565b611a23611e69565b6001600160a01b038116611a885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060d565b611a918161201b565b50565b6000808052602085815260408083206001600160a01b03871684528252808320805463ffffffff19164263ffffffff1617815560018101849055600201805461010061ffff1990911617905551611aef918591859101613117565b604051602081830303815290604052856000836004811115611b2157634e487b7160e01b600052602160045260246000fd5b6004811115611b4057634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b03891682528352208251610f64936004909201929190910190612b35565b604080518082018252606080825260208083019190915282516000808252918101828152818501909452919281611bc1565b6060815260200190600190039081611bac5790505b5060408051808201909152928352602083015250919050565b600233611be7828261206b565b611c045760405163aa6318d360e01b815260040160405180910390fd5b60408051808201909152601581527424b73b30b634b2103bb0b9ba32903837b4b73a32b960591b60208201528490849060019060078481548110611c5857634e487b7160e01b600052603260045260246000fd5b60009182526020909120600290910201548310611c8857604051637e849ffb60e01b815260040160405180910390fd5b6000611c9660078a8a6128ad565b9050611ca5600982600261236c565b60045460008080611cb7600885612a26565b600254602089015160405163095ea7b360e01b81526001600160a01b03918216600482015260248101869052949750929550909350169063095ea7b390604401602060405180830381600087803b158015611d1157600080fd5b505af1158015611d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d499190612dd7565b50600254604086810151905163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b390604401602060405180830381600087803b158015611d9c57600080fd5b505af1158015611db0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd49190612dd7565b5060025460405163095ea7b360e01b8152306004820152602481018390526001600160a01b039091169063095ea7b390604401602060405180830381600087803b158015611e2157600080fd5b505af1158015611e35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e599190612dd7565b5050505050505050505050505050565b6000546001600160a01b03163314610ce45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060d565b6000611ed0858584612abb565b90508215611f78578015611ef757604051633ee20b6960e01b815260040160405180910390fd5b6001856000846004811115611f1c57634e487b7160e01b600052602160045260246000fd5b6004811115611f3b57634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b03891682529092529020600201805460ff19169115159190911790556111e3565b80611f965760405163aa6318d360e01b815260040160405180910390fd5b6000856000846004811115611fbb57634e487b7160e01b600052602160045260246000fd5b6004811115611fda57634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b03891682529092529020600201805491151560ff199092169190911790555050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600a600084600481111561209157634e487b7160e01b600052602160045260246000fd5b60048111156120b057634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b038616825290925290206002015460ff16905092915050565b60006007828154811061210857634e487b7160e01b600052603260045260246000fd5b60009182526020909120600160029092020101546001600160a01b031692915050565b81546000908190848482811061215157634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160405180604001604052908160008201805480602002602001604051908101604052809291908181526020016000905b8282101561224c5760008481526020908190206040805160a081018252600486029092018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff169081111561221a57634e487b7160e01b600052602160045260246000fd5b600281111561223957634e487b7160e01b600052602160045260246000fd5b815250508152602001906001019061218f565b50505090825250600191909101546001600160a01b0316602090910152805151919350915061228e5760405163347682f560e01b815260040160405180910390fd5b60005b8281101561231957600282518051839081106122bd57634e487b7160e01b600052603260045260246000fd5b60200260200101516080015160028111156122e857634e487b7160e01b600052602160045260246000fd5b101561230757604051633f00676b60e01b815260040160405180910390fd5b80612311816132f6565b915050612291565b5083838154811061233a57634e487b7160e01b600052603260045260246000fd5b600091825260208220600290910201906123548282612bb9565b5060010180546001600160a01b031916905550505050565b82600082600281111561238f57634e487b7160e01b600052602160045260246000fd5b60028111156123ae57634e487b7160e01b600052602160045260246000fd5b81526020019081526020016000206040518060a001604052808460000151815260200184602001516001600160a01b0316815260200184604001516001600160a01b0316815260200184606001516001600160a01b0316815260200183600281111561242a57634e487b7160e01b600052602160045260246000fd5b9052815460018082018455600093845260209384902083516004909302019182559282015192810180546001600160a01b03199081166001600160a01b0395861617909155604083015160028084018054841692871692909217909155606084015160038401805493841691909616908117865560808501519495939493926001600160a81b0319161790600160a01b9084908111156124da57634e487b7160e01b600052602160045260246000fd5b02179055505050505050565b8154600181018084556000849052829084908390811061251657634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555092915050565b6125806040805160a0810182526000808252602082018190529181018290526060810182905290608082015290565b8360008360028111156125a357634e487b7160e01b600052602160045260246000fd5b60028111156125c257634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002083815481106125ef57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160a0810182526004939093029091018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff169081111561267457634e487b7160e01b600052602160045260246000fd5b600281111561269357634e487b7160e01b600052602160045260246000fd5b90525090508360008360028111156126bb57634e487b7160e01b600052602160045260246000fd5b60028111156126da57634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020838154811061270757634e487b7160e01b600052603260045260246000fd5b6000918252602082206004909102019081556001810180546001600160a01b0319908116909155600282018054909116905560030180546001600160a81b03191690559392505050565b83838154811061277157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016000016040518060a001604052808460000151815260200184602001516001600160a01b0316815260200184604001516001600160a01b0316815260200184606001516001600160a01b031681526020018360028111156127f057634e487b7160e01b600052602160045260246000fd5b9052815460018082018455600093845260209384902083516004909302019182559282015192810180546001600160a01b03199081166001600160a01b0395861617909155604083015160028084018054841692871692909217909155606084015160038401805493841691909616908117865560808501519495939493926001600160a81b0319161790600160a01b9084908111156128a057634e487b7160e01b600052602160045260246000fd5b0217905550505050505050565b6128dc6040805160a0810182526000808252602082018190529181018290526060810182905290608082015290565b8383815481106128fc57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600001828154811061292c57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160a0810182526004939093029091018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff16908111156129b157634e487b7160e01b600052602160045260246000fd5b60028111156129d057634e487b7160e01b600052602160045260246000fd5b8152505090508383815481106129f657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600001828154811061270757634e487b7160e01b600052603260045260246000fd5b60008080526020839052604081205481908190606490612a4a90869060ff16613270565b612a549190613250565b6001600090815260208790526040902054909350606490612a7990869060ff16613270565b612a839190613250565b6002600090815260208790526040902054909250606490612aa890869060ff16613270565b612ab29190613250565b90509250925092565b6000836000836004811115612ae057634e487b7160e01b600052602160045260246000fd5b6004811115612aff57634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b038716825290925290206002015460ff1690509392505050565b828054612b41906132bb565b90600052602060002090601f016020900481019282612b635760008555612ba9565b82601f10612b7c57805160ff1916838001178555612ba9565b82800160010185558215612ba9579182015b82811115612ba9578251825591602001919060010190612b8e565b50612bb5929150612bda565b5090565b5080546000825560040290600052602060002090810190611a919190612bef565b5b80821115612bb55760008155600101612bdb565b5b80821115612bb557600081556001810180546001600160a01b031990811690915560028201805490911690556003810180546001600160a81b0319169055600401612bf0565b80356001600160a01b0381168114612c4d57600080fd5b919050565b600082601f830112612c62578081fd5b813567ffffffffffffffff811115612c7c57612c7c613327565b612c8f601f8201601f19166020016131fb565b818152846020838601011115612ca3578283fd5b816020850160208301379081016020019190915292915050565b803560ff81168114612c4d57600080fd5b600060208284031215612cdf578081fd5b612ce882612c36565b9392505050565b60008060408385031215612d01578081fd5b612d0a83612c36565b9150612d1860208401612cbd565b90509250929050565b60006020808385031215612d33578182fd5b823567ffffffffffffffff80821115612d4a578384fd5b818501915085601f830112612d5d578384fd5b8135612d70612d6b8261322c565b6131fb565b80828252858201915085850189878560051b8801011115612d8f578788fd5b875b84811015612dc857813586811115612da757898afd5b612db58c8a838b0101612c52565b8552509287019290870190600101612d91565b50909998505050505050505050565b600060208284031215612de8578081fd5b81518015158114612ce8578182fd5b600060208284031215612e08578081fd5b813560058110612ce8578182fd5b600060208284031215612e27578081fd5b813560038110612ce8578182fd5b600060208284031215612e46578081fd5b813567ffffffffffffffff811115612e5c578182fd5b612e6884828501612c52565b949350505050565b60008060408385031215612e82578182fd5b823567ffffffffffffffff80821115612e99578384fd5b612ea586838701612c52565b93506020850135915080821115612eba578283fd5b50612ec785828601612c52565b9150509250929050565b600060208284031215612ee2578081fd5b5035919050565b600060208284031215612efa578081fd5b5051919050565b60008060408385031215612f13578182fd5b82359150612d1860208401612c36565b60008060408385031215612f35578182fd5b8235915060208084013567ffffffffffffffff811115612f53578283fd5b8401601f81018613612f63578283fd5b8035612f71612d6b8261322c565b80828252848201915084840189868560051b8701011115612f90578687fd5b8694505b83851015612fb2578035835260019490940193918501918501612f94565b5080955050505050509250929050565b60008060408385031215612fd4578182fd5b50508035926020909101359150565b600060208284031215612ff4578081fd5b612ce882612cbd565b6000806040838503121561300f578182fd5b61301883612cbd565b946020939093013593505050565b6000815180845260208085019450808401835b838110156130ab57815180518852838101516001600160a01b03908116858a01526040808301518216908a015260608083015190911690890152608090810151906003821061309657634e487b7160e01b87526021600452602487fd5b88015260a09096019590820190600101613039565b509495945050505050565b600081518084526130ce81602086016020860161328f565b601f01601f19169290920160200192915050565b600083516130f481846020880161328f565b9190910191825250602001919050565b602081526000612ce86020830184613026565b60408152600061312a60408301856130b6565b828103602084015261313c81856130b6565b95945050505050565b60208082526010908201526f496e76616c69642063617465676f727960801b604082015260600190565b6020808252600790820152661a5b9d985b1a5960ca1b604082015260600190565b6020815263ffffffff8251166020820152602082015160408201526040820151151560608201526060820151151560808201526000608083015160c060a08401526131de60e0840182613026565b905060a0840151601f198483030160c085015261313c82826130b6565b604051601f8201601f1916810167ffffffffffffffff8111828210171561322457613224613327565b604052919050565b600067ffffffffffffffff82111561324657613246613327565b5060051b60200190565b60008261326b57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561328a5761328a613311565b500290565b60005b838110156132aa578181015183820152602001613292565b83811115610e8d5750506000910152565b600181811c908216806132cf57607f821691505b602082108114156132f057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561330a5761330a613311565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201052264b80de3126c34d9ed1f016758fa69133745d6ad06078cfb6f3aa2bc91464736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0x35C2 CODESIZE SUB DUP1 PUSH3 0x35C2 DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x20F JUMP JUMPDEST PUSH3 0x3F CALLER PUSH3 0x1BF JUMP JUMPDEST PUSH1 0x2 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND OR SWAP1 SSTORE PUSH8 0x8AC7230489E80000 PUSH1 0x1 SWAP1 DUP2 SSTORE PUSH1 0x3 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE PUSH32 0xA856840544DC26124927ADD067D799967EAC11BE13E14D82CC281EA46FA39759 SWAP1 PUSH3 0x9E CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP4 ISZERO ISZERO PUSH1 0xFF NOT SWAP5 DUP6 AND OR SWAP1 SSTORE DUP1 DUP1 MSTORE PUSH1 0x8 SWAP2 DUP3 SWAP1 MSTORE PUSH32 0x5EFF886EA0CE6CA488A3D6E336D6C0F75F46D19B42C06CE5EE98E42C96D256C7 DUP1 SLOAD SWAP1 SWAP4 AND PUSH1 0x41 OR SWAP1 SWAP3 SSTORE PUSH1 0xA SWAP2 PUSH1 0x1 PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x125 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x19 PUSH1 0x8 PUSH1 0x0 PUSH1 0x2 DUP1 DUP2 GT ISZERO PUSH3 0x172 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH3 0x192 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 PUSH1 0xFF AND MUL OR SWAP1 SSTORE POP POP PUSH3 0x23F JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH3 0x221 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH3 0x238 JUMPI DUP2 DUP3 REVERT JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH2 0x3373 DUP1 PUSH3 0x24F PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x93051D95 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xC3864CCE GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xF9404506 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xFFC2105C EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC3864CCE EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xC437A2F0 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xE47C294D EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xF2D03E15 EQ PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA741C0DF GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA741C0DF EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xB7588280 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xBF5E6B6D EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xC2F0C279 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93051D95 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x955EF11A EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD97927 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x885C7B38 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x885C7B38 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x8C6AA3F5 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD97927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x41311BC3 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x72938A14 EQ PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F2A4A3F GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1F2A4A3F EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x235EB9F5 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x31B59ED7 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x95DB2D EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xB776241 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xBDD7063 EQ PUSH2 0x233 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E70 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x2F23 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x7F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2F01 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x3190 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2F23 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0xCD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x356 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FFD JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x356 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0xDCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0xDD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D21 JUMP JUMPDEST PUSH2 0xE93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE3 JUMP JUMPDEST PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x3104 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E35 JUMP JUMPDEST PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x11EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E16 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC2 JUMP JUMPDEST PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x1567 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x19B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x1A0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CCE JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x356 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x416C7265616479207369676E20757 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x623 PUSH1 0xA CALLER DUP5 DUP5 PUSH2 0x1A94 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 CALLER PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x6C4 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x32 SWAP1 ISZERO PUSH2 0x70D JUMPI DUP2 PUSH1 0xFF AND DUP4 MLOAD GT DUP1 ISZERO PUSH2 0x6EC JUMPI POP DUP1 PUSH1 0xFF AND DUP4 MLOAD GT ISZERO JUMPDEST PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH2 0x740 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP5 MLOAD GT DUP1 ISZERO PUSH2 0x724 JUMPI POP DUP1 PUSH1 0xFF AND DUP5 MLOAD GT ISZERO JUMPDEST PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH2 0x77D DUP8 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x770 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1BDA JUMP JUMPDEST DUP1 PUSH2 0x787 DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x743 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x1E69 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 PUSH1 0xFF AND LT PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x3145 JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0xA DUP5 PUSH1 0x1 DUP6 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x859 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x97E PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP4 LT PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x125B9D985B1A59 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA1A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE DUP4 MSTORE DUP2 DUP2 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP4 DUP8 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE SWAP2 SWAP6 SWAP3 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xB2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB49 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA9F JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0xB74 SWAP1 PUSH2 0x32BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBA0 SWAP1 PUSH2 0x32BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBC2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBD0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xC07 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x32 SWAP1 ISZERO PUSH2 0xC50 JUMPI DUP2 PUSH1 0xFF AND DUP4 MLOAD GT DUP1 ISZERO PUSH2 0xC2F JUMPI POP DUP1 PUSH1 0xFF AND DUP4 MLOAD GT ISZERO JUMPDEST PUSH2 0xC4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP5 MLOAD GT DUP1 ISZERO PUSH2 0xC67 JUMPI POP DUP1 PUSH1 0xFF AND DUP5 MLOAD GT ISZERO JUMPDEST PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH2 0xCC0 DUP8 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1313 JUMP JUMPDEST DUP1 PUSH2 0xCCA DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC86 JUMP JUMPDEST PUSH2 0xCDA PUSH2 0x1E69 JUMP JUMPDEST PUSH2 0xCE4 PUSH1 0x0 PUSH2 0x201B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xD2D PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH1 0xFF AND LT PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x3145 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDD3 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x3 CALLER PUSH2 0xDE5 DUP3 DUP3 PUSH2 0x206B JUMP JUMPDEST PUSH2 0xE02 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0D DUP5 PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP PUSH2 0xE21 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE82 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xE82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08105D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH2 0xE8D PUSH1 0x7 DUP6 PUSH2 0x212B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE9B PUSH2 0x1B7A JUMP JUMPDEST MLOAD DUP2 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x32 SWAP1 ISZERO PUSH2 0xEE3 JUMPI DUP2 PUSH1 0xFF AND DUP4 MLOAD GT DUP1 ISZERO PUSH2 0xEC2 JUMPI POP DUP1 PUSH1 0xFF AND DUP4 MLOAD GT ISZERO JUMPDEST PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP5 MLOAD GT DUP1 ISZERO PUSH2 0xEFA JUMPI POP DUP1 PUSH1 0xFF AND DUP5 MLOAD GT ISZERO JUMPDEST PUSH2 0xF16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xF64 JUMPI PUSH2 0xF52 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF45 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1110 JUMP JUMPDEST DUP1 PUSH2 0xF5C DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF19 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP3 PUSH1 0xFF AND LT PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x24B73B30B634B21039B2B632B1B2BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFDC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFFB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x101A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1105 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x10D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1048 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 CALLER PUSH2 0x111D DUP3 DUP3 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x114B DUP4 PUSH2 0x32F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH2 0x11E3 SWAP1 PUSH1 0x9 SWAP1 DUP1 PUSH2 0x1174 DUP10 DUP7 PUSH1 0xC0 DUP5 ADD PUSH2 0x30E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A6 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE DUP5 PUSH2 0x236C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA856840544DC26124927ADD067D799967EAC11BE13E14D82CC281EA46FA39759 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1273 PUSH1 0x7 CALLER PUSH2 0x24E6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA856840544DC26124927ADD067D799967EAC11BE13E14D82CC281EA46FA39759 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 PUSH2 0x12C2 DUP4 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x723B3A091C16D9EBE7FE55F416FB9EA16FE106C1094FB596B8FDAA98F2847FB DUP2 PUSH2 0x12F0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1320 DUP3 DUP3 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x133D JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x24B73B30B634B2103BB0B9BA32903837B4B73A32B9 PUSH1 0x59 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x139C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1436 JUMPI PUSH1 0x9 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 LT PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081DD85CDD195259 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x7 SLOAD DUP5 LT PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH4 0x83204183 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BDD08185B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B SLOAD DUP9 LT PUSH2 0x153D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1DD85CDD195259081BDD5D081BD988189BDD5B99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154B PUSH1 0x9 DUP11 DUP5 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x155B PUSH1 0x7 DUP12 DUP4 PUSH1 0x1 PUSH2 0x2751 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0x6CDE3CEA4B3A3FB2488B2808BAE7556F4A405E50F65E1794383BC026131B13C3 SLOAD SWAP2 DUP3 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15A5 JUMPI POP DUP4 DUP4 LT ISZERO JUMPDEST PUSH2 0x15E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F7420617661696C61626C65 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x196B JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1612 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1631 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x165E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x16E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1702 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE POP PUSH1 0x60 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1958 JUMPI DUP4 PUSH2 0x1725 DUP2 PUSH2 0x32F6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE SWAP1 SWAP6 POP PUSH32 0xE1EB2B2161A492C07C5A334E48012567CBA93EC021043F53C1955516A3C5A841 SWAP2 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17ED JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 DUP3 ADD MLOAD SWAP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD DUP5 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 DUP5 AND SWAP2 SWAP1 SWAP7 AND SWAP1 DUP2 OR DUP7 SSTORE PUSH1 0x80 DUP6 ADD MLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x189D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x9 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1914 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST POP DUP1 PUSH2 0x1963 DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15E4 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x6 SLOAD PUSH2 0x197C SWAP2 SWAP1 PUSH2 0x3270 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x4956616C7565 PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH2 0x19BF PUSH2 0x1E69 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 PUSH1 0xFF AND LT PUSH2 0x19E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x3145 JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0xA DUP5 PUSH1 0x0 DUP6 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A16 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x1A23 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60D JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x201B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND TIMESTAMP PUSH4 0xFFFFFFFF AND OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x100 PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE MLOAD PUSH2 0x1AEF SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x3117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP6 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B21 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B40 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 MSTORE DUP4 MSTORE KECCAK256 DUP3 MLOAD PUSH2 0xF64 SWAP4 PUSH1 0x4 SWAP1 SWAP3 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP2 DUP2 ADD DUP3 DUP2 MSTORE DUP2 DUP6 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP3 DUP2 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1BAC JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 CALLER PUSH2 0x1BE7 DUP3 DUP3 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1C04 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x24B73B30B634B2103BB0B9BA32903837B4B73A32B9 PUSH1 0x59 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP4 LT PUSH2 0x1C88 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E849FFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C96 PUSH1 0x7 DUP11 DUP11 PUSH2 0x28AD JUMP JUMPDEST SWAP1 POP PUSH2 0x1CA5 PUSH1 0x9 DUP3 PUSH1 0x2 PUSH2 0x236C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 DUP1 DUP1 PUSH2 0x1CB7 PUSH1 0x8 DUP6 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP5 SWAP8 POP SWAP3 SWAP6 POP SWAP1 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D49 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP7 DUP2 ADD MLOAD SWAP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD4 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E59 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED0 DUP6 DUP6 DUP5 PUSH2 0x2ABB JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x1F78 JUMPI DUP1 ISZERO PUSH2 0x1EF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE20B69 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F3B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x11E3 JUMP JUMPDEST DUP1 PUSH2 0x1F96 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FBB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FDA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2091 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2108 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP5 DUP5 DUP3 DUP2 LT PUSH2 0x2151 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x224C JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2239 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x218F JUMP JUMPDEST POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x228E JUMPI PUSH1 0x40 MLOAD PUSH4 0x347682F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2319 JUMPI PUSH1 0x2 DUP3 MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x22BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x22E8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST LT ISZERO PUSH2 0x2307 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3F00676B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2311 DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2291 JUMP JUMPDEST POP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x233A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SWAP1 PUSH2 0x2354 DUP3 DUP3 PUSH2 0x2BB9 JUMP JUMPDEST POP PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x238F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x23AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x242A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 DUP3 ADD MLOAD SWAP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD DUP5 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 DUP5 AND SWAP2 SWAP1 SWAP7 AND SWAP1 DUP2 OR DUP7 SSTORE PUSH1 0x80 DUP6 ADD MLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x24DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE PUSH1 0x0 DUP5 SWAP1 MSTORE DUP3 SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2516 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2580 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x25A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x25C2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2674 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2693 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE POP SWAP1 POP DUP4 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2707 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2771 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x27F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 DUP3 ADD MLOAD SWAP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD DUP5 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 DUP5 AND SWAP2 SWAP1 SWAP7 AND SWAP1 DUP2 OR DUP7 SSTORE PUSH1 0x80 DUP6 ADD MLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x28A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x28DC PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x28FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x292C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x29B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x29F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2707 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x2A4A SWAP1 DUP7 SWAP1 PUSH1 0xFF AND PUSH2 0x3270 JUMP JUMPDEST PUSH2 0x2A54 SWAP2 SWAP1 PUSH2 0x3250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 POP PUSH1 0x64 SWAP1 PUSH2 0x2A79 SWAP1 DUP7 SWAP1 PUSH1 0xFF AND PUSH2 0x3270 JUMP JUMPDEST PUSH2 0x2A83 SWAP2 SWAP1 PUSH2 0x3250 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH1 0x64 SWAP1 PUSH2 0x2AA8 SWAP1 DUP7 SWAP1 PUSH1 0xFF AND PUSH2 0x3270 JUMP JUMPDEST PUSH2 0x2AB2 SWAP2 SWAP1 PUSH2 0x3250 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AE0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2B41 SWAP1 PUSH2 0x32BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2B63 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2BA9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2B7C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2BA9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2BA9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BA9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B8E JUMP JUMPDEST POP PUSH2 0x2BB5 SWAP3 SWAP2 POP PUSH2 0x2BDA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x4 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A91 SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BB5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2BDB JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BB5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH2 0x2BF0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C62 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C7C JUMPI PUSH2 0x2C7C PUSH2 0x3327 JUMP JUMPDEST PUSH2 0x2C8F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x31FB JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2CA3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CDF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2CE8 DUP3 PUSH2 0x2C36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D01 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2D0A DUP4 PUSH2 0x2C36 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D18 PUSH1 0x20 DUP5 ADD PUSH2 0x2CBD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D33 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D4A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D5D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D70 PUSH2 0x2D6B DUP3 PUSH2 0x322C JUMP JUMPDEST PUSH2 0x31FB JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP10 DUP8 DUP6 PUSH1 0x5 SHL DUP9 ADD ADD GT ISZERO PUSH2 0x2D8F JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2DC8 JUMPI DUP2 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x2DA7 JUMPI DUP10 DUP11 REVERT JUMPDEST PUSH2 0x2DB5 DUP13 DUP11 DUP4 DUP12 ADD ADD PUSH2 0x2C52 JUMP JUMPDEST DUP6 MSTORE POP SWAP3 DUP8 ADD SWAP3 SWAP1 DUP8 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D91 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CE8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E08 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0x2CE8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E27 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x2CE8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E46 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E5C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2E68 DUP5 DUP3 DUP6 ADD PUSH2 0x2C52 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E82 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E99 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2EA5 DUP7 DUP4 DUP8 ADD PUSH2 0x2C52 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EBA JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2EC7 DUP6 DUP3 DUP7 ADD PUSH2 0x2C52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EFA JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F13 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2D18 PUSH1 0x20 DUP5 ADD PUSH2 0x2C36 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F35 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F53 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2F63 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2F71 PUSH2 0x2D6B DUP3 PUSH2 0x322C JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP10 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x2F90 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2FB2 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x2F94 JUMP JUMPDEST POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FD4 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FF4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2CE8 DUP3 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x300F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3018 DUP4 PUSH2 0x2CBD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30AB JUMPI DUP2 MLOAD DUP1 MLOAD DUP9 MSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 DUP11 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP11 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP10 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT PUSH2 0x3096 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP9 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3039 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x30CE DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x328F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x30F4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x328F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2CE8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3026 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x312A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x30B6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x313C DUP2 DUP6 PUSH2 0x30B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x496E76616C69642063617465676F7279 PUSH1 0x80 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x1A5B9D985B1A59 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x31DE PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x3026 JUMP JUMPDEST SWAP1 POP PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x313C DUP3 DUP3 PUSH2 0x30B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3224 JUMPI PUSH2 0x3224 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3246 JUMPI PUSH2 0x3246 PUSH2 0x3327 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x326B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x328A JUMPI PUSH2 0x328A PUSH2 0x3311 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32AA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3292 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE8D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x32CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x32F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x330A JUMPI PUSH2 0x330A PUSH2 0x3311 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MSTORE 0x26 0x4B DUP1 0xDE BALANCE 0x26 0xC3 0x4D SWAP15 0xD1 CREATE AND PUSH22 0x8FA69133745D6AD06078CFB6F3AA2BC91464736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1777:12293:0:-:0;;;4653:290;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;957:32:6;736:10:2;957:18:6;:32::i;:::-;4694:5:0;:14;;-1:-1:-1;;;;;;4694:14:0;-1:-1:-1;;;;;4694:14:0;;;;;4737:15;-1:-1:-1;4719:33:0;;;4772:17;-1:-1:-1;4763:27:0;;;:8;:27;;;;4791:12;736:10:2;;656:98;4791:12:0;-1:-1:-1;;;;;4763:41:0;;;;;;;;;;;;;-1:-1:-1;4763:41:0;;;:50;;:57;;;;;-1:-1:-1;;4763:57:0;;;;;;4831:24;;;:7;:24;;;;;:29;;;;;4858:2;4831:29;;;;4898:2;;-1:-1:-1;4871:24:0;;;;;;-1:-1:-1;;;4871:24:0;;;;;;;;;;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;4933:2;4911:7;:19;4919:10;4911:19;;;;;;-1:-1:-1;;;4911:19:0;;;;;;;;;;;;;;;-1:-1:-1;;;4911:19:0;;;;;;;;;;;;;;;;;;;;;:24;;;;;;;;;;;;;;;;;;4653:290;1777:12293;;2503:191:6;2577:16;2596:6;;-1:-1:-1;;;;;2613:17:6;;;-1:-1:-1;;;;;;2613:17:6;;;;;;2646:40;;2596:6;;;;;;;2646:40;;2577:16;2646:40;2503:191;;:::o;14:310:9:-;84:6;137:2;125:9;116:7;112:23;108:32;105:2;;;158:6;150;143:22;105:2;189:16;;-1:-1:-1;;;;;234:31:9;;224:42;;214:2;;285:6;277;270:22;214:2;313:5;95:229;-1:-1:-1;;;95:229:9:o;:::-;1777:12293:0;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:18669:9",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:9",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:124:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "150:3:9",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "155:1:9",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "146:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "146:11:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "142:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "142:19:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:31:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:42:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:50:9"
                              },
                              "nodeType": "YulIf",
                              "src": "111:2:9"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:9",
                            "type": ""
                          }
                        ],
                        "src": "14:173:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "245:498:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "294:24:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "303:5:9"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "310:5:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "296:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "296:20:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "296:20:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "273:6:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "281:4:9",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "269:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "269:17:9"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "288:3:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "265:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "265:27:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "258:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "258:35:9"
                              },
                              "nodeType": "YulIf",
                              "src": "255:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "327:30:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "350:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "337:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "337:20:9"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "331:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "396:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "398:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "398:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "398:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "372:2:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "376:18:9",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "369:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "369:26:9"
                              },
                              "nodeType": "YulIf",
                              "src": "366:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "427:70:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "_1",
                                                "nodeType": "YulIdentifier",
                                                "src": "470:2:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "474:4:9",
                                                "type": "",
                                                "value": "0x1f"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "466:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "466:13:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "485:2:9",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "481:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "481:7:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "462:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "462:27:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "491:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "458:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "458:38:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "442:15:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "442:55:9"
                              },
                              "variables": [
                                {
                                  "name": "array_1",
                                  "nodeType": "YulTypedName",
                                  "src": "431:7:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "array_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "513:7:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "522:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "506:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "506:19:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "506:19:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "573:24:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "582:5:9"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "589:5:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "575:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "575:20:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "575:20:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "548:6:9"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "556:2:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "544:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "544:15:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "561:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "540:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "540:26:9"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "568:3:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "537:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "537:35:9"
                              },
                              "nodeType": "YulIf",
                              "src": "534:2:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "array_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "623:7:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "632:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "619:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "619:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "643:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "651:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "639:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "639:17:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "658:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldatacopy",
                                  "nodeType": "YulIdentifier",
                                  "src": "606:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "606:55:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "606:55:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "array_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "685:7:9"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "694:2:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "681:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "681:16:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "699:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "677:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "677:27:9"
                                  },
                                  {
                                    "name": "array",
                                    "nodeType": "YulIdentifier",
                                    "src": "706:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "670:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "670:42:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "670:42:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "721:16:9",
                              "value": {
                                "name": "array_1",
                                "nodeType": "YulIdentifier",
                                "src": "730:7:9"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "721:5:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_string",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "219:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "227:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "235:5:9",
                            "type": ""
                          }
                        ],
                        "src": "192:551:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "795:109:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "805:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "827:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "814:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "814:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "805:5:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "882:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "891:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "894:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "884:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "884:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "884:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "856:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "867:5:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "874:4:9",
                                            "type": "",
                                            "value": "0xff"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "863:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "863:16:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "853:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "853:27:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "846:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "846:35:9"
                              },
                              "nodeType": "YulIf",
                              "src": "843:2:9"
                            }
                          ]
                        },
                        "name": "abi_decode_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "774:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "785:5:9",
                            "type": ""
                          }
                        ],
                        "src": "748:156:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "979:126:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1025:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1034:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1042:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1027:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1027:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1027:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1000:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1009:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "996:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "996:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1021:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "992:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "992:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "989:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1060:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1089:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1070:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1070:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1060:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "945:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "956:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "968:6:9",
                            "type": ""
                          }
                        ],
                        "src": "909:196:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1195:181:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1241:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1250:6:9"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1258:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1243:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1243:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1243:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1216:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1225:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1212:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1212:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1237:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1208:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1208:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1205:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1276:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1305:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1286:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1286:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1276:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1324:46:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1355:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1366:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1351:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1351:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "1334:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1334:36:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1324:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1153:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1164:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1176:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1184:6:9",
                            "type": ""
                          }
                        ],
                        "src": "1110:266:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1486:1023:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1496:12:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1506:2:9",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1500:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1553:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1562:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1570:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1555:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1555:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1555:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1528:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1537:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1524:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1524:23:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1549:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1520:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1520:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1517:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1588:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1615:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1602:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1602:23:9"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1592:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1634:28:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1644:18:9",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "1638:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1689:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1698:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1706:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1691:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1691:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1691:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1677:6:9"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "1685:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1674:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1674:14:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1671:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1724:32:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1738:9:9"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1749:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1734:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1734:22:9"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "1728:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1804:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1813:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1821:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1806:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1806:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1806:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "1783:2:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1787:4:9",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "1779:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1779:13:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1794:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1775:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1775:27:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1768:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1768:35:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1765:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1839:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "1862:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1849:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1849:16:9"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "1843:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1874:70:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "1940:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_string_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "1901:38:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1901:42:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1885:15:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1885:59:9"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "1878:3:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1953:16:9",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "1966:3:9"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1957:5:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "1985:3:9"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1990:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1978:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1978:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1978:15:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2002:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "2013:3:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2018:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2009:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2009:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "2002:3:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2030:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "2045:2:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2049:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2041:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2041:11:9"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "2034:3:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2106:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2115:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2123:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2108:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2108:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2108:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_3",
                                            "nodeType": "YulIdentifier",
                                            "src": "2075:2:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2083:1:9",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "_4",
                                                "nodeType": "YulIdentifier",
                                                "src": "2086:2:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "2079:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2079:10:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "2071:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2071:19:9"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2092:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2067:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2067:28:9"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "2097:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2064:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2064:41:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2061:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2141:15:9",
                              "value": {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2150:6:9"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2145:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2210:269:9",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "2224:36:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "2256:3:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "calldataload",
                                        "nodeType": "YulIdentifier",
                                        "src": "2243:12:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2243:17:9"
                                    },
                                    "variables": [
                                      {
                                        "name": "innerOffset",
                                        "nodeType": "YulTypedName",
                                        "src": "2228:11:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "2296:26:9",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "value0",
                                                "nodeType": "YulIdentifier",
                                                "src": "2305:6:9"
                                              },
                                              {
                                                "name": "value0",
                                                "nodeType": "YulIdentifier",
                                                "src": "2313:6:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "2298:6:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2298:22:9"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "2298:22:9"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "name": "innerOffset",
                                          "nodeType": "YulIdentifier",
                                          "src": "2279:11:9"
                                        },
                                        {
                                          "name": "_2",
                                          "nodeType": "YulIdentifier",
                                          "src": "2292:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "gt",
                                        "nodeType": "YulIdentifier",
                                        "src": "2276:2:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2276:19:9"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "2273:2:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "2342:3:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "_3",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2373:2:9"
                                                    },
                                                    {
                                                      "name": "innerOffset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2377:11:9"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2369:3:9"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2369:20:9"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2391:2:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2365:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2365:29:9"
                                            },
                                            {
                                              "name": "dataEnd",
                                              "nodeType": "YulIdentifier",
                                              "src": "2396:7:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "abi_decode_string",
                                            "nodeType": "YulIdentifier",
                                            "src": "2347:17:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2347:57:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2335:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2335:70:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2335:70:9"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2418:19:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "2429:3:9"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2434:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2425:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2425:12:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "2418:3:9"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2450:19:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "2461:3:9"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2466:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2457:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2457:12:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "2450:3:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2176:1:9"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "2179:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2173:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2173:9:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2183:18:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2185:14:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2194:1:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "2197:1:9",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2190:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2190:9:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2185:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2169:3:9",
                                "statements": []
                              },
                              "src": "2165:314:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2488:15:9",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "2498:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2488:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1452:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1463:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1475:6:9",
                            "type": ""
                          }
                        ],
                        "src": "1381:1128:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2592:219:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2638:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2647:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2655:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2640:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2640:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2640:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2613:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2622:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2609:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2609:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2634:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2605:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2605:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2602:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2673:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2692:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2686:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2686:16:9"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2677:5:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2755:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2764:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2772:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2757:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2757:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2757:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "2724:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "value",
                                                "nodeType": "YulIdentifier",
                                                "src": "2745:5:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "iszero",
                                              "nodeType": "YulIdentifier",
                                              "src": "2738:6:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2738:13:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "2731:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2731:21:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "2721:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2721:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2714:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2714:40:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2711:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2790:15:9",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "2800:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "2790:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_bool_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2558:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2569:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2581:6:9",
                            "type": ""
                          }
                        ],
                        "src": "2514:297:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2899:206:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2945:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2954:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "2962:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "2947:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2947:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2947:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "2920:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2929:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "2916:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2916:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2941:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2912:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2912:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2909:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2980:36:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3006:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2993:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2993:23:9"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "2984:5:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3049:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3058:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3066:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3051:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3051:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3051:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3038:5:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3045:1:9",
                                        "type": "",
                                        "value": "5"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3035:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3035:12:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3028:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3028:20:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3025:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3084:15:9",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3094:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3084:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_enum$_Category_$1978",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2865:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "2876:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "2888:6:9",
                            "type": ""
                          }
                        ],
                        "src": "2816:289:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3190:206:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3236:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3245:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3253:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3238:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3238:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3238:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3211:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3220:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3207:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3207:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3232:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3203:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3203:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3200:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3271:36:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3297:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3284:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3284:23:9"
                              },
                              "variables": [
                                {
                                  "name": "value",
                                  "nodeType": "YulTypedName",
                                  "src": "3275:5:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3340:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3349:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3357:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3342:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3342:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3342:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "3329:5:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3336:1:9",
                                        "type": "",
                                        "value": "3"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "3326:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3326:12:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "3319:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3319:20:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3316:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3375:15:9",
                              "value": {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "3385:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3375:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_enum$_Share_$1982",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3156:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3167:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3179:6:9",
                            "type": ""
                          }
                        ],
                        "src": "3110:286:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3481:262:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3527:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3536:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3544:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3529:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3529:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3529:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3502:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3511:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3498:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3498:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3523:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3494:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3494:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3491:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3562:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3589:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3576:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3576:23:9"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3566:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3642:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3651:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3659:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3644:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3644:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3644:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "3614:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3622:18:9",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3611:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3611:30:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3608:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3677:60:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3709:9:9"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "3720:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3705:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3705:22:9"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "3729:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "3687:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3687:50:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "3677:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3447:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3458:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3470:6:9",
                            "type": ""
                          }
                        ],
                        "src": "3401:342:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3855:466:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "3901:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3910:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "3918:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "3903:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "3903:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "3903:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "3876:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3885:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "3872:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3872:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3897:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "3868:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3868:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "3865:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3936:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3963:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "3950:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3950:23:9"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "3940:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "3982:28:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "3992:18:9",
                                "type": "",
                                "value": "0xffffffffffffffff"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "3986:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4037:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4046:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4054:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4039:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4039:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4039:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "4025:6:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4033:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4022:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4022:14:9"
                              },
                              "nodeType": "YulIf",
                              "src": "4019:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4072:60:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4104:9:9"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "4115:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4100:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4100:22:9"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4124:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "4082:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4082:50:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4072:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "4141:48:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4174:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4185:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4170:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4170:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4157:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4157:32:9"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "4145:8:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4218:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "4227:6:9"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "4235:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4220:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4220:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4220:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4204:8:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "4214:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4201:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4201:16:9"
                              },
                              "nodeType": "YulIf",
                              "src": "4198:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4253:62:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4285:9:9"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "4296:8:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4281:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4281:24:9"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "4307:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string",
                                  "nodeType": "YulIdentifier",
                                  "src": "4263:17:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4263:52:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4253:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3813:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "3824:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "3836:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "3844:6:9",
                            "type": ""
                          }
                        ],
                        "src": "3748:573:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4396:120:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4442:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4451:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4459:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4444:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4444:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4444:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4417:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4426:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4413:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4413:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4438:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4409:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4409:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "4406:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4477:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4500:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4487:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4487:23:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4477:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4362:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4373:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4385:6:9",
                            "type": ""
                          }
                        ],
                        "src": "4326:190:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4602:113:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4648:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4657:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4665:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4650:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4650:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4650:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4623:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4632:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4619:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4619:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4644:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4615:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4615:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "4612:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4683:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4699:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4693:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4693:16:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4683:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4568:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4579:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4591:6:9",
                            "type": ""
                          }
                        ],
                        "src": "4521:194:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4807:177:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "4853:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4862:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "4870:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "4855:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "4855:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "4855:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "4828:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4837:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "4824:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4824:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4849:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "4820:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4820:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "4817:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4888:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4911:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "4898:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4898:23:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "4888:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4930:48:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4963:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4974:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4959:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4959:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "4940:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4940:38:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "4930:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4765:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "4776:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4788:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "4796:6:9",
                            "type": ""
                          }
                        ],
                        "src": "4720:264:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5101:902:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5147:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5156:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "5164:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5149:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5149:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5149:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5122:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5131:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "5118:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5118:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5143:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5114:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5114:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5111:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5182:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5205:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5192:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5192:23:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "5182:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5224:12:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "5234:2:9",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5228:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5245:46:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5276:9:9"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5287:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5272:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5272:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5259:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5259:32:9"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "5249:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5334:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5343:6:9"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5351:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5336:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5336:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5336:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5306:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5314:18:9",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5303:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5303:30:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5300:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5369:32:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5383:9:9"
                                  },
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "5394:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5379:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5379:22:9"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "5373:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5449:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5458:6:9"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5466:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5451:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5451:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5451:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "5428:2:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "5432:4:9",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5424:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5424:13:9"
                                      },
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "5439:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5420:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5420:27:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5413:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5413:35:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5410:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5484:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5507:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "5494:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5494:16:9"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "5488:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5519:70:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "5585:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "array_allocation_size_array_string_dyn",
                                      "nodeType": "YulIdentifier",
                                      "src": "5546:38:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5546:42:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "allocate_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "5530:15:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5530:59:9"
                              },
                              "variables": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulTypedName",
                                  "src": "5523:3:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5598:16:9",
                              "value": {
                                "name": "dst",
                                "nodeType": "YulIdentifier",
                                "src": "5611:3:9"
                              },
                              "variables": [
                                {
                                  "name": "dst_1",
                                  "nodeType": "YulTypedName",
                                  "src": "5602:5:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "5630:3:9"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5635:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5623:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5623:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5623:15:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5647:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "dst",
                                    "nodeType": "YulIdentifier",
                                    "src": "5658:3:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5663:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5654:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5654:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "dst",
                                  "nodeType": "YulIdentifier",
                                  "src": "5647:3:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5675:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "5690:2:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "5694:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5686:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5686:11:9"
                              },
                              "variables": [
                                {
                                  "name": "src",
                                  "nodeType": "YulTypedName",
                                  "src": "5679:3:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5751:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5760:6:9"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5768:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5753:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5753:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5753:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "_2",
                                            "nodeType": "YulIdentifier",
                                            "src": "5720:2:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "5728:1:9",
                                                "type": "",
                                                "value": "5"
                                              },
                                              {
                                                "name": "_3",
                                                "nodeType": "YulIdentifier",
                                                "src": "5731:2:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "5724:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "5724:10:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "5716:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "5716:19:9"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "5737:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5712:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5712:28:9"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "5742:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5709:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5709:41:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5706:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5786:15:9",
                              "value": {
                                "name": "value1",
                                "nodeType": "YulIdentifier",
                                "src": "5795:6:9"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "5790:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5855:118:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "5876:3:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "src",
                                              "nodeType": "YulIdentifier",
                                              "src": "5894:3:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "calldataload",
                                            "nodeType": "YulIdentifier",
                                            "src": "5881:12:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5881:17:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5869:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5869:30:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5869:30:9"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5912:19:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "dst",
                                          "nodeType": "YulIdentifier",
                                          "src": "5923:3:9"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5928:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5919:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5919:12:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "dst",
                                        "nodeType": "YulIdentifier",
                                        "src": "5912:3:9"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5944:19:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "src",
                                          "nodeType": "YulIdentifier",
                                          "src": "5955:3:9"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "5960:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5951:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5951:12:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "src",
                                        "nodeType": "YulIdentifier",
                                        "src": "5944:3:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "5821:1:9"
                                  },
                                  {
                                    "name": "_3",
                                    "nodeType": "YulIdentifier",
                                    "src": "5824:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5818:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5818:9:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "5828:18:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5830:14:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "5839:1:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5842:1:9",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "5835:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5835:9:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "5830:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "5814:3:9",
                                "statements": []
                              },
                              "src": "5810:163:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5982:15:9",
                              "value": {
                                "name": "dst_1",
                                "nodeType": "YulIdentifier",
                                "src": "5992:5:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "5982:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5059:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "5070:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5082:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "5090:6:9",
                            "type": ""
                          }
                        ],
                        "src": "4989:1014:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6095:171:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6141:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6150:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6158:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6143:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6143:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6143:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6116:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6125:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6112:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6112:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6137:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6108:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6108:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "6105:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6176:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6199:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6186:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6186:23:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6176:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6218:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6245:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6256:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6241:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6241:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6228:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6228:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6218:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6053:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6064:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6076:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6084:6:9",
                            "type": ""
                          }
                        ],
                        "src": "6008:258:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6339:124:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6385:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6394:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6402:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6387:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6387:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6387:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6360:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6369:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6356:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6356:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6381:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6352:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6352:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "6349:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6420:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6447:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6430:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6430:27:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6420:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6305:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6316:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6328:6:9",
                            "type": ""
                          }
                        ],
                        "src": "6271:192:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6553:175:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "6599:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6608:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "6616:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "6601:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "6601:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "6601:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "6574:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6583:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "6570:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6570:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6595:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6566:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6566:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "6563:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6634:37:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6661:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_uint8",
                                  "nodeType": "YulIdentifier",
                                  "src": "6644:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6644:27:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "6634:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6680:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6707:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6718:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6703:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6703:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6690:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6690:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "6680:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint8t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6511:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "6522:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "6534:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "6542:6:9",
                            "type": ""
                          }
                        ],
                        "src": "6468:260:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6803:1055:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6813:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6833:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "6827:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6827:12:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "6817:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6855:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6860:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6848:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6848:19:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6848:19:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6876:14:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "6886:4:9",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "6880:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6899:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "6910:3:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6915:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6906:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6906:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "pos",
                                  "nodeType": "YulIdentifier",
                                  "src": "6899:3:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6927:28:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "6945:5:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "6952:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6941:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6941:14:9"
                              },
                              "variables": [
                                {
                                  "name": "srcPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "6931:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "6964:12:9",
                              "value": {
                                "name": "end",
                                "nodeType": "YulIdentifier",
                                "src": "6973:3:9"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "6968:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7034:799:9",
                                "statements": [
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7048:23:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7064:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "7058:5:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7058:13:9"
                                    },
                                    "variables": [
                                      {
                                        "name": "_2",
                                        "nodeType": "YulTypedName",
                                        "src": "7052:2:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "7091:3:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "7102:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "7096:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7096:9:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7084:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7084:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7084:22:9"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7119:38:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "7149:2:9"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "7153:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "7145:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7145:11:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "7139:5:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7139:18:9"
                                    },
                                    "variables": [
                                      {
                                        "name": "memberValue0",
                                        "nodeType": "YulTypedName",
                                        "src": "7123:12:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7170:29:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7188:3:9",
                                              "type": "",
                                              "value": "160"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7193:1:9",
                                              "type": "",
                                              "value": "1"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "7184:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7184:11:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7197:1:9",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "sub",
                                        "nodeType": "YulIdentifier",
                                        "src": "7180:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7180:19:9"
                                    },
                                    "variables": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulTypedName",
                                        "src": "7174:2:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "7223:3:9"
                                            },
                                            {
                                              "name": "_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "7228:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "7219:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7219:12:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "name": "memberValue0",
                                              "nodeType": "YulIdentifier",
                                              "src": "7237:12:9"
                                            },
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "7251:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "7233:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7233:21:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7212:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7212:43:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7212:43:9"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7268:14:9",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7278:4:9",
                                      "type": "",
                                      "value": "0x40"
                                    },
                                    "variables": [
                                      {
                                        "name": "_4",
                                        "nodeType": "YulTypedName",
                                        "src": "7272:2:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "7306:3:9"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "7311:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "7302:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7302:12:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "_2",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7330:2:9"
                                                    },
                                                    {
                                                      "name": "_4",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7334:2:9"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7326:3:9"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "7326:11:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "7320:5:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "7320:18:9"
                                            },
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "7340:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "7316:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7316:27:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7295:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7295:49:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7295:49:9"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7357:14:9",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7367:4:9",
                                      "type": "",
                                      "value": "0x60"
                                    },
                                    "variables": [
                                      {
                                        "name": "_5",
                                        "nodeType": "YulTypedName",
                                        "src": "7361:2:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "7395:3:9"
                                            },
                                            {
                                              "name": "_5",
                                              "nodeType": "YulIdentifier",
                                              "src": "7400:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "7391:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7391:12:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "_2",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7419:2:9"
                                                    },
                                                    {
                                                      "name": "_5",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "7423:2:9"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "7415:3:9"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "7415:11:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "mload",
                                                "nodeType": "YulIdentifier",
                                                "src": "7409:5:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "7409:18:9"
                                            },
                                            {
                                              "name": "_3",
                                              "nodeType": "YulIdentifier",
                                              "src": "7429:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "and",
                                            "nodeType": "YulIdentifier",
                                            "src": "7405:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7405:27:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7384:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7384:49:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7384:49:9"
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7446:14:9",
                                    "value": {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "7456:4:9",
                                      "type": "",
                                      "value": "0x80"
                                    },
                                    "variables": [
                                      {
                                        "name": "_6",
                                        "nodeType": "YulTypedName",
                                        "src": "7450:2:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulVariableDeclaration",
                                    "src": "7473:40:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "_2",
                                              "nodeType": "YulIdentifier",
                                              "src": "7505:2:9"
                                            },
                                            {
                                              "name": "_6",
                                              "nodeType": "YulIdentifier",
                                              "src": "7509:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "7501:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7501:11:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mload",
                                        "nodeType": "YulIdentifier",
                                        "src": "7495:5:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7495:18:9"
                                    },
                                    "variables": [
                                      {
                                        "name": "memberValue0_1",
                                        "nodeType": "YulTypedName",
                                        "src": "7477:14:9",
                                        "type": ""
                                      }
                                    ]
                                  },
                                  {
                                    "body": {
                                      "nodeType": "YulBlock",
                                      "src": "7571:131:9",
                                      "statements": [
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "end",
                                                "nodeType": "YulIdentifier",
                                                "src": "7596:3:9"
                                              },
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "7605:3:9",
                                                    "type": "",
                                                    "value": "224"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "7610:10:9",
                                                    "type": "",
                                                    "value": "0x4e487b71"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "7601:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "7601:20:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "7589:6:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7589:33:9"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "7589:33:9"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7646:1:9",
                                                "type": "",
                                                "value": "4"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7649:4:9",
                                                "type": "",
                                                "value": "0x21"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mstore",
                                              "nodeType": "YulIdentifier",
                                              "src": "7639:6:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7639:15:9"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "7639:15:9"
                                        },
                                        {
                                          "expression": {
                                            "arguments": [
                                              {
                                                "name": "end",
                                                "nodeType": "YulIdentifier",
                                                "src": "7678:3:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "7683:4:9",
                                                "type": "",
                                                "value": "0x24"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "revert",
                                              "nodeType": "YulIdentifier",
                                              "src": "7671:6:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "7671:17:9"
                                          },
                                          "nodeType": "YulExpressionStatement",
                                          "src": "7671:17:9"
                                        }
                                      ]
                                    },
                                    "condition": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "memberValue0_1",
                                              "nodeType": "YulIdentifier",
                                              "src": "7539:14:9"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "7555:1:9",
                                              "type": "",
                                              "value": "3"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "lt",
                                            "nodeType": "YulIdentifier",
                                            "src": "7536:2:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7536:21:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "iszero",
                                        "nodeType": "YulIdentifier",
                                        "src": "7529:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7529:29:9"
                                    },
                                    "nodeType": "YulIf",
                                    "src": "7526:2:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "pos",
                                              "nodeType": "YulIdentifier",
                                              "src": "7726:3:9"
                                            },
                                            {
                                              "name": "_6",
                                              "nodeType": "YulIdentifier",
                                              "src": "7731:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "7722:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "7722:12:9"
                                        },
                                        {
                                          "name": "memberValue0_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7736:14:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "7715:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7715:36:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7715:36:9"
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7764:21:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "pos",
                                          "nodeType": "YulIdentifier",
                                          "src": "7775:3:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7780:4:9",
                                          "type": "",
                                          "value": "0xa0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7771:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7771:14:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "7764:3:9"
                                      }
                                    ]
                                  },
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7798:25:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "srcPtr",
                                          "nodeType": "YulIdentifier",
                                          "src": "7812:6:9"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "7820:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7808:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7808:15:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "srcPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "7798:6:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "6996:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "6999:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "6993:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6993:13:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "7007:18:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "7009:14:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "7018:1:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "7021:1:9",
                                          "type": "",
                                          "value": "1"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "7014:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7014:9:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "7009:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "6989:3:9",
                                "statements": []
                              },
                              "src": "6985:848:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7842:10:9",
                              "value": {
                                "name": "pos",
                                "nodeType": "YulIdentifier",
                                "src": "7849:3:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "7842:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_array_struct_WasteData_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "6780:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "6787:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "6795:3:9",
                            "type": ""
                          }
                        ],
                        "src": "6733:1125:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7912:208:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7922:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "7942:5:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "7936:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7936:12:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "7926:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "7964:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "7969:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7957:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7957:19:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7957:19:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "8011:5:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8018:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8007:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8007:16:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "8029:3:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8034:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8025:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8025:14:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8041:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "7985:21:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7985:63:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7985:63:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8057:57:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "pos",
                                        "nodeType": "YulIdentifier",
                                        "src": "8072:3:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "8085:6:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8093:2:9",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "8081:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8081:15:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8102:2:9",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "8098:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8098:7:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "8077:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8077:29:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8068:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8068:39:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8109:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8064:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8064:50:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8057:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_bytes",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "7889:5:9",
                            "type": ""
                          },
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "7896:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "7904:3:9",
                            "type": ""
                          }
                        ],
                        "src": "7863:257:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8290:205:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8300:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "8320:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "8314:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8314:13:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "8304:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8362:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8370:4:9",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8358:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8358:17:9"
                                  },
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8377:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8382:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "copy_memory_to_memory",
                                  "nodeType": "YulIdentifier",
                                  "src": "8336:21:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8336:53:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8336:53:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8398:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "pos",
                                    "nodeType": "YulIdentifier",
                                    "src": "8415:3:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "8420:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8411:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8411:16:9"
                              },
                              "variables": [
                                {
                                  "name": "end_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8402:5:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "end_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8443:5:9"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8450:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8436:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8436:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8436:21:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "8466:23:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "end_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "8477:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8484:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8473:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8473:16:9"
                              },
                              "variableNames": [
                                {
                                  "name": "end",
                                  "nodeType": "YulIdentifier",
                                  "src": "8466:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "pos",
                            "nodeType": "YulTypedName",
                            "src": "8258:3:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8263:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8271:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "8282:3:9",
                            "type": ""
                          }
                        ],
                        "src": "8125:370:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8601:102:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8611:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8623:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8634:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8619:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8619:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8611:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8653:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8668:6:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8684:3:9",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "8689:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "8680:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "8680:11:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "8693:1:9",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "8676:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "8676:19:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8664:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8664:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8646:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8646:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8646:51:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8570:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8581:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8592:4:9",
                            "type": ""
                          }
                        ],
                        "src": "8500:203:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8837:175:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "8847:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8859:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8870:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "8855:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8855:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "8847:4:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "8882:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8900:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8905:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8896:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8896:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8909:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "8892:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8892:19:9"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "8886:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "8927:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "8942:6:9"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8950:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8938:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8938:15:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8920:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8920:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8920:34:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "8974:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8985:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "8970:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8970:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "8994:6:9"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9002:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "8990:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8990:15:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8963:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8963:43:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8963:43:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "8798:9:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "8809:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "8817:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "8828:4:9",
                            "type": ""
                          }
                        ],
                        "src": "8708:304:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9174:218:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9184:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9196:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9207:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9192:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9192:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9184:4:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "9219:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9237:3:9",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9242:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "9233:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9233:11:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9246:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "9229:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9229:19:9"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "9223:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9264:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "9279:6:9"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9287:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9275:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9275:15:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9257:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9257:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9257:34:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9311:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9322:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9307:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9307:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9331:6:9"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "9339:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9327:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9327:15:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9300:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9300:43:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9300:43:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9363:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9374:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9359:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9359:18:9"
                                  },
                                  {
                                    "name": "value2",
                                    "nodeType": "YulIdentifier",
                                    "src": "9379:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9352:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9352:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9352:34:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9127:9:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "9138:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9146:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9154:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9165:4:9",
                            "type": ""
                          }
                        ],
                        "src": "9017:375:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9526:145:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "9536:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9548:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9559:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "9544:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9544:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9536:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9578:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "9593:6:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "9609:3:9",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "9614:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "9605:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "9605:11:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "9618:1:9",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "9601:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "9601:19:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "9589:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9589:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9571:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9571:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9571:51:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9642:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9653:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9638:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9638:18:9"
                                  },
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "9658:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9631:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9631:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9631:34:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9487:9:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "9498:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9506:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9517:4:9",
                            "type": ""
                          }
                        ],
                        "src": "9397:274:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "9881:119:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "9898:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "9909:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "9891:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9891:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "9891:21:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "9921:73:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "9967:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "9979:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "9990:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "9975:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "9975:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_struct_WasteData_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "9929:37:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "9929:65:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "9921:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_array$_t_struct$_WasteData_$2016_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_WasteData_$2016_memory_ptr_$dyn_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "9850:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "9861:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "9872:4:9",
                            "type": ""
                          }
                        ],
                        "src": "9676:324:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10174:212:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10191:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10202:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10184:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10184:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10184:21:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "10214:58:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "10245:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10257:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10268:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10253:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10253:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "10228:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10228:44:9"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "10218:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10292:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10303:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10288:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10288:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "tail_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "10312:6:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10320:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "10308:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10308:22:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10281:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10281:50:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10281:50:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10340:40:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10365:6:9"
                                  },
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "10373:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "10348:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10348:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10340:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10135:9:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "10146:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "10154:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10165:4:9",
                            "type": ""
                          }
                        ],
                        "src": "10005:381:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10565:165:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10582:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10593:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10575:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10575:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10575:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10616:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10627:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10612:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10612:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10632:2:9",
                                    "type": "",
                                    "value": "15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10605:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10605:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10605:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10655:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10666:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10651:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10651:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "10671:17:9",
                                    "type": "",
                                    "value": "Already sign up"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10644:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10644:45:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10644:45:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "10698:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10710:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10721:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "10706:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10706:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "10698:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0855ec215c237c3402a18339339aeeabd173180125b97094d2e4366ff55d9ec5__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10542:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10556:4:9",
                            "type": ""
                          }
                        ],
                        "src": "10391:339:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "10909:228:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "10926:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10937:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10919:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10919:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10919:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10960:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "10971:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10956:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10956:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "10976:2:9",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10949:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10949:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10949:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "10999:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11010:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "10995:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "10995:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11015:34:9",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "10988:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "10988:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "10988:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11070:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11081:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11066:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11066:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11086:8:9",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11059:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11059:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11059:36:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11104:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11116:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11127:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11112:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11112:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11104:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "10886:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "10900:4:9",
                            "type": ""
                          }
                        ],
                        "src": "10735:402:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11316:168:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11333:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11344:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11326:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11326:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11326:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11367:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11378:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11363:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11363:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11383:2:9",
                                    "type": "",
                                    "value": "18"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11356:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11356:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11356:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11406:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11417:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11402:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11402:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11422:20:9",
                                    "type": "",
                                    "value": "Already registered"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11395:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11395:48:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11395:48:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11452:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11464:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11475:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11460:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11460:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11452:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11293:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11307:4:9",
                            "type": ""
                          }
                        ],
                        "src": "11142:342:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "11663:164:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11680:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11691:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11673:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11673:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11673:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11714:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11725:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11710:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11710:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11730:2:9",
                                    "type": "",
                                    "value": "14"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11703:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11703:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11703:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "11753:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "11764:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "11749:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "11749:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "11769:16:9",
                                    "type": "",
                                    "value": "Not Authorized"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "11742:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11742:44:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "11742:44:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "11795:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "11807:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "11818:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "11803:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "11803:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "11795:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_593fd4f5418ae095969b093812245f49eb950b9775e5afd767614f342e26d4f2__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11640:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11654:4:9",
                            "type": ""
                          }
                        ],
                        "src": "11489:338:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12006:165:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12023:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12034:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12016:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12016:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12016:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12057:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12068:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12053:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12053:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12073:2:9",
                                    "type": "",
                                    "value": "15"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12046:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12046:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12046:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12096:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12107:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12092:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12092:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12112:17:9",
                                    "type": "",
                                    "value": "Invalid wasteId"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12085:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12085:45:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12085:45:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12139:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12151:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12162:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12147:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12147:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12139:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_87cfbd6b6eb548ee8fb6c49554690157210f324b121b51335da25bb255604d5c__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "11983:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "11997:4:9",
                            "type": ""
                          }
                        ],
                        "src": "11832:339:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12350:161:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12367:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12378:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12360:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12360:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12360:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12401:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12412:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12397:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12397:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12417:2:9",
                                    "type": "",
                                    "value": "11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12390:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12390:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12390:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12440:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12451:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12436:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12436:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12456:13:9",
                                    "type": "",
                                    "value": "Not allowed"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12429:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12429:41:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12429:41:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12479:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12491:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12502:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12487:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12487:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12479:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12327:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12341:4:9",
                            "type": ""
                          }
                        ],
                        "src": "12176:335:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "12690:182:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12707:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12718:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12700:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12700:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12700:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12741:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12752:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12737:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12737:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12757:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12730:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12730:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12730:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "12780:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "12791:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "12776:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "12776:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "12796:34:9",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "12769:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12769:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "12769:62:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "12840:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "12852:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "12863:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "12848:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "12848:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "12840:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "12667:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "12681:4:9",
                            "type": ""
                          }
                        ],
                        "src": "12516:356:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13051:163:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13068:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13079:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13061:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13061:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13061:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13102:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13113:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13098:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13098:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13118:2:9",
                                    "type": "",
                                    "value": "13"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13091:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13091:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13091:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13141:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13152:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13137:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13137:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13157:15:9",
                                    "type": "",
                                    "value": "Not available"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13130:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13130:43:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13130:43:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13182:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13194:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13205:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13190:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13190:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13182:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b9c8b0a781ee5b87f71931d50074d05dd76b7be959de5062a78ccee2fb412519__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13028:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13042:4:9",
                            "type": ""
                          }
                        ],
                        "src": "12877:337:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13393:166:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13410:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13421:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13403:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13403:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13403:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13444:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13455:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13440:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13440:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13460:2:9",
                                    "type": "",
                                    "value": "16"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13433:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13433:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13433:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13483:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13494:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13479:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13479:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13499:18:9",
                                    "type": "",
                                    "value": "Invalid category"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13472:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13472:46:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13472:46:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13527:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13539:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13550:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13535:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13535:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13527:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c42ca90c935df80db9ecab8e34c935bcc35abb722f6ed440da8d67e0cbd0ec47__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13370:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13384:4:9",
                            "type": ""
                          }
                        ],
                        "src": "13219:340:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "13738:155:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13755:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13766:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13748:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13748:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13748:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13789:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13800:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13785:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13785:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13805:1:9",
                                    "type": "",
                                    "value": "6"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13778:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13778:29:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13778:29:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "13827:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "13838:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "13823:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "13823:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "13843:8:9",
                                    "type": "",
                                    "value": "IValue"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "13816:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13816:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "13816:36:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "13861:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "13873:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "13884:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "13869:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "13869:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "13861:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c6f5816ffca9f3bdafc2c13d983135d2a105150b42711b53975c78544de1fc78__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "13715:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "13729:4:9",
                            "type": ""
                          }
                        ],
                        "src": "13564:329:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14072:156:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14089:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14100:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14082:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14082:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14082:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14123:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14134:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14119:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14119:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14139:1:9",
                                    "type": "",
                                    "value": "7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14112:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14112:29:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14112:29:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14161:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14172:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14157:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14157:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14177:9:9",
                                    "type": "",
                                    "value": "Invalid"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14150:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14150:37:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14150:37:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14196:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14208:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14219:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14204:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14204:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14196:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14049:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14063:4:9",
                            "type": ""
                          }
                        ],
                        "src": "13898:330:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14407:170:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14424:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14435:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14417:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14417:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14417:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14458:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14469:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14454:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14454:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14474:2:9",
                                    "type": "",
                                    "value": "20"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14447:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14447:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14447:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14497:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14508:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14493:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14493:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14513:22:9",
                                    "type": "",
                                    "value": "wasteId out of bound"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14486:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14486:50:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14486:50:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14545:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14557:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14568:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14553:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14553:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14545:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_cb93a266f8c738155922c03fad65991711659ffd1817f66a1e374e7caf1aa548__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14384:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14398:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14233:344:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "14756:167:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14773:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14784:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14766:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14766:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14766:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14807:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14818:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14803:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14803:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14823:2:9",
                                    "type": "",
                                    "value": "17"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14796:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14796:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14796:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "14846:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "14857:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "14842:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "14842:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "14862:19:9",
                                    "type": "",
                                    "value": "Invalid selecetor"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "14835:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14835:47:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "14835:47:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "14891:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "14903:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "14914:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "14899:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "14899:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "14891:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f5bbd90151df77045995fef44fa489fd73d41063f4d63aeaef7d4ef2cc0fb065__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "14733:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "14747:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14582:341:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15102:156:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15119:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15130:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15112:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15112:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15112:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15153:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15164:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15149:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15149:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15169:1:9",
                                    "type": "",
                                    "value": "7"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15142:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15142:29:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15142:29:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15191:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15202:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15187:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15187:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "15207:9:9",
                                    "type": "",
                                    "value": "invalid"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15180:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15180:37:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15180:37:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "15226:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15238:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15249:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "15234:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15234:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "15226:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15079:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15093:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14928:330:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "15414:689:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "15431:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15442:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15424:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15424:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15424:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15465:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15476:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15461:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15461:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "15491:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "mload",
                                          "nodeType": "YulIdentifier",
                                          "src": "15485:5:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15485:13:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15500:10:9",
                                        "type": "",
                                        "value": "0xffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "15481:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15481:30:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15454:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15454:58:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15454:58:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15532:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15543:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15528:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15528:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "15558:6:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "15566:2:9",
                                            "type": "",
                                            "value": "32"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "15554:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15554:15:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "15548:5:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15548:22:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15521:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15521:50:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15521:50:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15591:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15602:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15587:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15587:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "value0",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15631:6:9"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "15639:2:9",
                                                    "type": "",
                                                    "value": "64"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15627:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15627:15:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "15621:5:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15621:22:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "15614:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15614:30:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "15607:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15607:38:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15580:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15580:66:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15580:66:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15666:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15677:3:9",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15662:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15662:19:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "value0",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "15707:6:9"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "15715:2:9",
                                                    "type": "",
                                                    "value": "96"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "15703:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "15703:15:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "mload",
                                              "nodeType": "YulIdentifier",
                                              "src": "15697:5:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "15697:22:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "15690:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "15690:30:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "15683:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15683:38:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15655:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15655:67:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15655:67:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15731:43:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15761:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15769:3:9",
                                        "type": "",
                                        "value": "128"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15757:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15757:16:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "15751:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15751:23:9"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0",
                                  "nodeType": "YulTypedName",
                                  "src": "15735:12:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15794:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15805:3:9",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15790:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15790:19:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "15811:4:9",
                                    "type": "",
                                    "value": "0xc0"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15783:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15783:33:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15783:33:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15825:86:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0",
                                    "nodeType": "YulIdentifier",
                                    "src": "15877:12:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15895:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15906:3:9",
                                        "type": "",
                                        "value": "224"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15891:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15891:19:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_array_struct_WasteData_dyn",
                                  "nodeType": "YulIdentifier",
                                  "src": "15839:37:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15839:72:9"
                              },
                              "variables": [
                                {
                                  "name": "tail_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15829:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "15920:45:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "15952:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15960:3:9",
                                        "type": "",
                                        "value": "160"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15948:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15948:16:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "15942:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15942:23:9"
                              },
                              "variables": [
                                {
                                  "name": "memberValue0_1",
                                  "nodeType": "YulTypedName",
                                  "src": "15924:14:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "15985:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "15996:4:9",
                                        "type": "",
                                        "value": "0xc0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "15981:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "15981:20:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "tail_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "16011:6:9"
                                          },
                                          {
                                            "name": "headStart",
                                            "nodeType": "YulIdentifier",
                                            "src": "16019:9:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "16007:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16007:22:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16035:2:9",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "16031:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16031:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16003:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16003:36:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "15974:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "15974:66:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "15974:66:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "16049:48:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memberValue0_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "16074:14:9"
                                  },
                                  {
                                    "name": "tail_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "16090:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_encode_bytes",
                                  "nodeType": "YulIdentifier",
                                  "src": "16057:16:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16057:40:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16049:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_struct$_Profile_$2031_memory_ptr__to_t_struct$_Profile_$2031_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "15383:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "15394:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "15405:4:9",
                            "type": ""
                          }
                        ],
                        "src": "15263:840:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16209:76:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16219:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16231:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16242:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16227:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16227:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16219:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16261:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16272:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16254:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16254:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16254:25:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16178:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "16189:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16200:4:9",
                            "type": ""
                          }
                        ],
                        "src": "16108:177:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16419:145:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16429:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16441:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16452:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16437:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16437:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16429:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16471:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "16482:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16464:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16464:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16464:25:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "16509:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16520:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "16505:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16505:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value1",
                                        "nodeType": "YulIdentifier",
                                        "src": "16529:6:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "16545:3:9",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "16550:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "16541:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "16541:11:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16554:1:9",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "16537:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16537:19:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "16525:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16525:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16498:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16498:60:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16498:60:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16380:9:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "16391:6:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "16399:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16410:4:9",
                            "type": ""
                          }
                        ],
                        "src": "16290:274:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16666:87:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16676:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16688:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16699:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16684:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16684:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "16676:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "16718:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "16733:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16741:4:9",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "16729:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16729:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "16711:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16711:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "16711:36:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "16635:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "16646:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "16657:4:9",
                            "type": ""
                          }
                        ],
                        "src": "16569:184:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "16803:230:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "16813:19:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "16829:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "16823:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16823:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulIdentifier",
                                  "src": "16813:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "16841:58:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "16863:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "size",
                                            "nodeType": "YulIdentifier",
                                            "src": "16879:4:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16885:2:9",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "16875:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16875:13:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "16894:2:9",
                                            "type": "",
                                            "value": "31"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "not",
                                          "nodeType": "YulIdentifier",
                                          "src": "16890:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "16890:7:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "16871:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16871:27:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "16859:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16859:40:9"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "16845:10:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "16974:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "16976:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "16976:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "16976:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "16917:10:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "16929:18:9",
                                        "type": "",
                                        "value": "0xffffffffffffffff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "16914:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16914:34:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "16953:10:9"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "16965:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "16950:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "16950:22:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "16911:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "16911:62:9"
                              },
                              "nodeType": "YulIf",
                              "src": "16908:2:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17012:2:9",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "17016:10:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "17005:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17005:22:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "17005:22:9"
                            }
                          ]
                        },
                        "name": "allocate_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "16783:4:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulTypedName",
                            "src": "16792:6:9",
                            "type": ""
                          }
                        ],
                        "src": "16758:275:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17106:114:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17150:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "17152:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17152:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17152:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17122:6:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17130:18:9",
                                    "type": "",
                                    "value": "0xffffffffffffffff"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17119:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17119:30:9"
                              },
                              "nodeType": "YulIf",
                              "src": "17116:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17181:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "17197:1:9",
                                        "type": "",
                                        "value": "5"
                                      },
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "17200:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "17193:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17193:14:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17209:4:9",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "17189:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17189:25:9"
                              },
                              "variableNames": [
                                {
                                  "name": "size",
                                  "nodeType": "YulIdentifier",
                                  "src": "17181:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "array_allocation_size_array_string_dyn",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "17086:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "size",
                            "nodeType": "YulTypedName",
                            "src": "17097:4:9",
                            "type": ""
                          }
                        ],
                        "src": "17038:182:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17271:171:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17302:111:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "17323:1:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "17330:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "17335:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "17326:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "17326:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17316:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17316:31:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17316:31:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17367:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17370:4:9",
                                          "type": "",
                                          "value": "0x12"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17360:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17360:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17360:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "r",
                                          "nodeType": "YulIdentifier",
                                          "src": "17395:1:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17398:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "17388:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17388:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17388:15:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17291:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "17284:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17284:9:9"
                              },
                              "nodeType": "YulIf",
                              "src": "17281:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17422:14:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17431:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17434:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "div",
                                  "nodeType": "YulIdentifier",
                                  "src": "17427:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17427:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "r",
                                  "nodeType": "YulIdentifier",
                                  "src": "17422:1:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_div_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "17256:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "17259:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "r",
                            "nodeType": "YulTypedName",
                            "src": "17265:1:9",
                            "type": ""
                          }
                        ],
                        "src": "17225:217:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17499:116:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17558:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "17560:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17560:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17560:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "17530:1:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "17523:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17523:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "17516:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17516:17:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "17538:1:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "17549:1:9",
                                                "type": "",
                                                "value": "0"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "17545:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "17545:6:9"
                                          },
                                          {
                                            "name": "x",
                                            "nodeType": "YulIdentifier",
                                            "src": "17553:1:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "div",
                                          "nodeType": "YulIdentifier",
                                          "src": "17541:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "17541:14:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "17535:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "17535:21:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "17512:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17512:45:9"
                              },
                              "nodeType": "YulIf",
                              "src": "17509:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "17589:20:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "17604:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "17607:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mul",
                                  "nodeType": "YulIdentifier",
                                  "src": "17600:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17600:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "product",
                                  "nodeType": "YulIdentifier",
                                  "src": "17589:7:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_mul_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "17478:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "17481:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "product",
                            "nodeType": "YulTypedName",
                            "src": "17487:7:9",
                            "type": ""
                          }
                        ],
                        "src": "17447:168:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17673:205:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17683:10:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "17692:1:9",
                                "type": "",
                                "value": "0"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "17687:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17752:63:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "17777:3:9"
                                            },
                                            {
                                              "name": "i",
                                              "nodeType": "YulIdentifier",
                                              "src": "17782:1:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "17773:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "17773:11:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "src",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "17796:3:9"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "17801:1:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "17792:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "17792:11:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "17786:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "17786:18:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17766:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17766:39:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17766:39:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "17713:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17716:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17710:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17710:13:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "17724:19:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "17726:15:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "17735:1:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17738:2:9",
                                          "type": "",
                                          "value": "32"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "17731:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17731:10:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "17726:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "17706:3:9",
                                "statements": []
                              },
                              "src": "17702:113:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "17841:31:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "name": "dst",
                                              "nodeType": "YulIdentifier",
                                              "src": "17854:3:9"
                                            },
                                            {
                                              "name": "length",
                                              "nodeType": "YulIdentifier",
                                              "src": "17859:6:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "17850:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "17850:16:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "17868:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "17843:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "17843:27:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "17843:27:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "17830:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "17833:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "17827:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17827:13:9"
                              },
                              "nodeType": "YulIf",
                              "src": "17824:2:9"
                            }
                          ]
                        },
                        "name": "copy_memory_to_memory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "src",
                            "nodeType": "YulTypedName",
                            "src": "17651:3:9",
                            "type": ""
                          },
                          {
                            "name": "dst",
                            "nodeType": "YulTypedName",
                            "src": "17656:3:9",
                            "type": ""
                          },
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "17661:6:9",
                            "type": ""
                          }
                        ],
                        "src": "17620:258:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "17938:325:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "17948:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "17962:1:9",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "17965:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "17958:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "17958:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "17948:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "17979:38:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "18009:4:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18015:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "18005:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18005:12:9"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "17983:18:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18056:31:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "18058:27:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "18072:6:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "18080:4:9",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "18068:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18068:17:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "18058:6:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "18036:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "18029:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18029:26:9"
                              },
                              "nodeType": "YulIf",
                              "src": "18026:2:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18146:111:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "18167:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "18174:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "18179:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "18170:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "18170:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "18160:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18160:31:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18160:31:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "18211:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "18214:4:9",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "18204:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18204:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18204:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "18239:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "18242:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "18232:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18232:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18232:15:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "18102:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "18125:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18133:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "18122:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18122:14:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "18099:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18099:38:9"
                              },
                              "nodeType": "YulIf",
                              "src": "18096:2:9"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "17918:4:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "17927:6:9",
                            "type": ""
                          }
                        ],
                        "src": "17883:380:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18315:88:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "18346:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "18348:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "18348:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "18348:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18331:5:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18342:1:9",
                                        "type": "",
                                        "value": "0"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "18338:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18338:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "18328:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18328:17:9"
                              },
                              "nodeType": "YulIf",
                              "src": "18325:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "18377:20:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "18388:5:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18395:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "18384:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18384:13:9"
                              },
                              "variableNames": [
                                {
                                  "name": "ret",
                                  "nodeType": "YulIdentifier",
                                  "src": "18377:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "increment_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "18297:5:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "ret",
                            "nodeType": "YulTypedName",
                            "src": "18307:3:9",
                            "type": ""
                          }
                        ],
                        "src": "18268:135:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18440:95:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18457:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18464:3:9",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18469:10:9",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "18460:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18460:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18450:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18450:31:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18450:31:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18497:1:9",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18500:4:9",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18490:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18490:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18490:15:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18521:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18524:4:9",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "18514:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18514:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18514:15:9"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "18408:127:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "18572:95:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18589:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18596:3:9",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "18601:10:9",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "18592:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "18592:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18582:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18582:31:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18582:31:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18629:1:9",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18632:4:9",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "18622:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18622:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18622:15:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18653:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "18656:4:9",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "18646:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "18646:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "18646:15:9"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "18540:127:9"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_string(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := calldataload(offset)\n        if gt(_1, 0xffffffffffffffff) { panic_error_0x41() }\n        let array_1 := allocate_memory(add(and(add(_1, 0x1f), not(31)), 0x20))\n        mstore(array_1, _1)\n        if gt(add(add(offset, _1), 0x20), end) { revert(array, array) }\n        calldatacopy(add(array_1, 0x20), add(offset, 0x20), _1)\n        mstore(add(add(array_1, _1), 0x20), array)\n        array := array_1\n    }\n    function abi_decode_uint8(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, 0xff))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_uint8(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_uint8(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_array$_t_string_memory_ptr_$dyn_memory_ptr(headStart, dataEnd) -> value0\n    {\n        let _1 := 32\n        if slt(sub(dataEnd, headStart), _1) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _2 := 0xffffffffffffffff\n        if gt(offset, _2) { revert(value0, value0) }\n        let _3 := add(headStart, offset)\n        if iszero(slt(add(_3, 0x1f), dataEnd)) { revert(value0, value0) }\n        let _4 := calldataload(_3)\n        let dst := allocate_memory(array_allocation_size_array_string_dyn(_4))\n        let dst_1 := dst\n        mstore(dst, _4)\n        dst := add(dst, _1)\n        let src := add(_3, _1)\n        if gt(add(add(_3, shl(5, _4)), _1), dataEnd) { revert(value0, value0) }\n        let i := value0\n        for { } lt(i, _4) { i := add(i, 1) }\n        {\n            let innerOffset := calldataload(src)\n            if gt(innerOffset, _2) { revert(value0, value0) }\n            mstore(dst, abi_decode_string(add(add(_3, innerOffset), _1), dataEnd))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value0 := dst_1\n    }\n    function abi_decode_tuple_t_bool_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := mload(headStart)\n        if iszero(eq(value, iszero(iszero(value)))) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_Category_$1978(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 5)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_enum$_Share_$1982(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let value := calldataload(headStart)\n        if iszero(lt(value, 3)) { revert(value0, value0) }\n        value0 := value\n    }\n    function abi_decode_tuple_t_string_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        if gt(offset, 0xffffffffffffffff) { revert(value0, value0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string(add(headStart, offset), dataEnd)\n        let offset_1 := calldataload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string(add(headStart, offset_1), dataEnd)\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_decode_tuple_t_uint256_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := mload(headStart)\n    }\n    function abi_decode_tuple_t_uint256t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256t_array$_t_uint256_$dyn_memory_ptr(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        let _1 := 32\n        let offset := calldataload(add(headStart, _1))\n        if gt(offset, 0xffffffffffffffff) { revert(value1, value1) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(value1, value1) }\n        let _3 := calldataload(_2)\n        let dst := allocate_memory(array_allocation_size_array_string_dyn(_3))\n        let dst_1 := dst\n        mstore(dst, _3)\n        dst := add(dst, _1)\n        let src := add(_2, _1)\n        if gt(add(add(_2, shl(5, _3)), _1), dataEnd) { revert(value1, value1) }\n        let i := value1\n        for { } lt(i, _3) { i := add(i, 1) }\n        {\n            mstore(dst, calldataload(src))\n            dst := add(dst, _1)\n            src := add(src, _1)\n        }\n        value1 := dst_1\n    }\n    function abi_decode_tuple_t_uint256t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint8(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_uint8(headStart)\n    }\n    function abi_decode_tuple_t_uint8t_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_uint8(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_array_struct_WasteData_dyn(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        let _1 := 0x20\n        pos := add(pos, _1)\n        let srcPtr := add(value, _1)\n        let i := end\n        for { } lt(i, length) { i := add(i, 1) }\n        {\n            let _2 := mload(srcPtr)\n            mstore(pos, mload(_2))\n            let memberValue0 := mload(add(_2, _1))\n            let _3 := sub(shl(160, 1), 1)\n            mstore(add(pos, _1), and(memberValue0, _3))\n            let _4 := 0x40\n            mstore(add(pos, _4), and(mload(add(_2, _4)), _3))\n            let _5 := 0x60\n            mstore(add(pos, _5), and(mload(add(_2, _5)), _3))\n            let _6 := 0x80\n            let memberValue0_1 := mload(add(_2, _6))\n            if iszero(lt(memberValue0_1, 3))\n            {\n                mstore(end, shl(224, 0x4e487b71))\n                mstore(4, 0x21)\n                revert(end, 0x24)\n            }\n            mstore(add(pos, _6), memberValue0_1)\n            pos := add(pos, 0xa0)\n            srcPtr := add(srcPtr, _1)\n        }\n        end := pos\n    }\n    function abi_encode_bytes(value, pos) -> end\n    {\n        let length := mload(value)\n        mstore(pos, length)\n        copy_memory_to_memory(add(value, 0x20), add(pos, 0x20), length)\n        end := add(add(pos, and(add(length, 31), not(31))), 0x20)\n    }\n    function abi_encode_tuple_packed_t_bytes_memory_ptr_t_uint256__to_t_bytes_memory_ptr_t_uint256__nonPadded_inplace_fromStack_reversed(pos, value1, value0) -> end\n    {\n        let length := mload(value0)\n        copy_memory_to_memory(add(value0, 0x20), pos, length)\n        let end_1 := add(pos, length)\n        mstore(end_1, value1)\n        end := add(end_1, 0x20)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_address_t_address__to_t_address_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n    }\n    function abi_encode_tuple_t_address_t_address_t_uint256__to_t_address_t_address_t_uint256__fromStack_reversed(headStart, value2, value1, value0) -> tail\n    {\n        tail := add(headStart, 96)\n        let _1 := sub(shl(160, 1), 1)\n        mstore(headStart, and(value0, _1))\n        mstore(add(headStart, 32), and(value1, _1))\n        mstore(add(headStart, 64), value2)\n    }\n    function abi_encode_tuple_t_address_t_uint256__to_t_address_t_uint256__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n        mstore(add(headStart, 32), value1)\n    }\n    function abi_encode_tuple_t_array$_t_struct$_WasteData_$2016_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_WasteData_$2016_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        tail := abi_encode_array_struct_WasteData_dyn(value0, add(headStart, 32))\n    }\n    function abi_encode_tuple_t_string_memory_ptr_t_string_memory_ptr__to_t_string_memory_ptr_t_string_memory_ptr__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        mstore(headStart, 64)\n        let tail_1 := abi_encode_bytes(value0, add(headStart, 64))\n        mstore(add(headStart, 32), sub(tail_1, headStart))\n        tail := abi_encode_bytes(value1, tail_1)\n    }\n    function abi_encode_tuple_t_stringliteral_0855ec215c237c3402a18339339aeeabd173180125b97094d2e4366ff55d9ec5__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Already sign up\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 18)\n        mstore(add(headStart, 64), \"Already registered\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_593fd4f5418ae095969b093812245f49eb950b9775e5afd767614f342e26d4f2__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 14)\n        mstore(add(headStart, 64), \"Not Authorized\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_87cfbd6b6eb548ee8fb6c49554690157210f324b121b51335da25bb255604d5c__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 15)\n        mstore(add(headStart, 64), \"Invalid wasteId\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 11)\n        mstore(add(headStart, 64), \"Not allowed\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b9c8b0a781ee5b87f71931d50074d05dd76b7be959de5062a78ccee2fb412519__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 13)\n        mstore(add(headStart, 64), \"Not available\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c42ca90c935df80db9ecab8e34c935bcc35abb722f6ed440da8d67e0cbd0ec47__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 16)\n        mstore(add(headStart, 64), \"Invalid category\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c6f5816ffca9f3bdafc2c13d983135d2a105150b42711b53975c78544de1fc78__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 6)\n        mstore(add(headStart, 64), \"IValue\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"Invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_cb93a266f8c738155922c03fad65991711659ffd1817f66a1e374e7caf1aa548__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 20)\n        mstore(add(headStart, 64), \"wasteId out of bound\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_f5bbd90151df77045995fef44fa489fd73d41063f4d63aeaef7d4ef2cc0fb065__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 17)\n        mstore(add(headStart, 64), \"Invalid selecetor\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 7)\n        mstore(add(headStart, 64), \"invalid\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_struct$_Profile_$2031_memory_ptr__to_t_struct$_Profile_$2031_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), and(mload(value0), 0xffffffff))\n        mstore(add(headStart, 64), mload(add(value0, 32)))\n        mstore(add(headStart, 96), iszero(iszero(mload(add(value0, 64)))))\n        mstore(add(headStart, 128), iszero(iszero(mload(add(value0, 96)))))\n        let memberValue0 := mload(add(value0, 128))\n        mstore(add(headStart, 160), 0xc0)\n        let tail_1 := abi_encode_array_struct_WasteData_dyn(memberValue0, add(headStart, 224))\n        let memberValue0_1 := mload(add(value0, 160))\n        mstore(add(headStart, 0xc0), add(sub(tail_1, headStart), not(31)))\n        tail := abi_encode_bytes(memberValue0_1, tail_1)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint256_t_address__to_t_uint256_t_address__fromStack_reversed(headStart, value1, value0) -> tail\n    {\n        tail := add(headStart, 64)\n        mstore(headStart, value0)\n        mstore(add(headStart, 32), and(value1, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function allocate_memory(size) -> memPtr\n    {\n        memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(size, 31), not(31)))\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n    function array_allocation_size_array_string_dyn(length) -> size\n    {\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n        size := add(shl(5, length), 0x20)\n    }\n    function checked_div_t_uint256(x, y) -> r\n    {\n        if iszero(y)\n        {\n            mstore(r, shl(224, 0x4e487b71))\n            mstore(4, 0x12)\n            revert(r, 0x24)\n        }\n        r := div(x, y)\n    }\n    function checked_mul_t_uint256(x, y) -> product\n    {\n        if and(iszero(iszero(x)), gt(y, div(not(0), x))) { panic_error_0x11() }\n        product := mul(x, y)\n    }\n    function copy_memory_to_memory(src, dst, length)\n    {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        if gt(i, length) { mstore(add(dst, length), 0) }\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function increment_t_uint256(value) -> ret\n    {\n        if eq(value, not(0)) { panic_error_0x11() }\n        ret := add(value, 1)\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "6080604052600436106101cc5760003560e01c806393051d95116100f7578063c3864cce11610095578063f2fde38b11610064578063f2fde38b1461052c578063f94045061461054c578063fc0c546a14610562578063ffc2105c1461058257600080fd5b8063c3864cce146104b9578063c437a2f0146104d9578063e47c294d146104ec578063f2d03e151461050c57600080fd5b8063a741c0df116100d1578063a741c0df14610422578063b75882801461044f578063bf5e6b6d1461046f578063c2f0c2791461047757600080fd5b806393051d95146103cc578063955ef11a146103ec578063a035b1fe1461040c57600080fd5b80633fd979271161016f578063885c7b381161013e578063885c7b38146103365780638c6aa3f51461036e5780638da5cb5b1461038e57806391b7f5ed146103ac57600080fd5b80633fd97927146102b457806341311bc3146102e1578063715018a61461030157806372938a141461031657600080fd5b80631f2a4a3f116101ab5780631f2a4a3f14610253578063235eb9f51461026957806331b59ed71461027f5780633ccfd60b1461029f57600080fd5b806295db2d146101d15780630b776241146102115780630bdd706314610233575b600080fd5b3480156101dd57600080fd5b506101fe6101ec366004612df7565b600b6020526000908152604090205481565b6040519081526020015b60405180910390f35b34801561021d57600080fd5b5061023161022c366004612e70565b610598565b005b34801561023f57600080fd5b5061023161024e366004612f23565b6106bb565b34801561025f57600080fd5b506101fe60055481565b34801561027557600080fd5b506101fe60045481565b34801561028b57600080fd5b5061023161029a366004612cef565b610798565b3480156102ab57600080fd5b506102316107f4565b3480156102c057600080fd5b506102d46102cf366004612f01565b61093b565b6040516102089190613190565b3480156102ed57600080fd5b506102316102fc366004612f23565b610bfe565b34801561030d57600080fd5b50610231610cd2565b34801561032257600080fd5b50610231610331366004612ed1565b610ce6565b34801561034257600080fd5b50610356610351366004612ed1565b610cf3565b6040516001600160a01b039091168152602001610208565b34801561037a57600080fd5b50610231610389366004612ffd565b610d25565b34801561039a57600080fd5b506000546001600160a01b0316610356565b3480156103b857600080fd5b506102316103c7366004612ed1565b610dcb565b3480156103d857600080fd5b506102316103e7366004612ed1565b610dd8565b3480156103f857600080fd5b50610231610407366004612d21565b610e93565b34801561041857600080fd5b506101fe60065481565b34801561042e57600080fd5b5061044261043d366004612fe3565b610f6c565b6040516102089190613104565b34801561045b57600080fd5b5061023161046a366004612e35565b611110565b6102316111ea565b34801561048357600080fd5b506104a7610492366004612e16565b60086020526000908152604090205460ff1681565b60405160ff9091168152602001610208565b3480156104c557600080fd5b506102316104d4366004612fc2565b611313565b6102316104e7366004612ed1565b611567565b3480156104f857600080fd5b50610231610507366004612cef565b6119b7565b34801561051857600080fd5b50610231610527366004612ed1565b611a0e565b34801561053857600080fd5b50610231610547366004612cce565b611a1b565b34801561055857600080fd5b506101fe60015481565b34801561056e57600080fd5b50600254610356906001600160a01b031681565b34801561058e57600080fd5b506101fe60035481565b3360009081527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e36020526040902060020154610100900460ff16156106165760405162461bcd60e51b815260206004820152600f60248201526e0416c7265616479207369676e20757608c1b60448201526064015b60405180910390fd5b610623600a338484611a94565b6002546001600160a01b031663095ea7b3336001546040516001600160e01b031960e085901b1681526001600160a01b0390921660048301526024820152604401602060405180830381600087803b15801561067e57600080fd5b505af1158015610692573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106b69190612dd7565b505050565b806106c4611b7a565b6020015180516000906032901561070d578160ff1683511180156106ec57508060ff16835111155b6107085760405162461bcd60e51b815260040161060d9061316f565b610740565b8160ff16845111801561072457508060ff16845111155b6107405760405162461bcd60e51b815260040161060d9061316f565b60005b855181101561078f5761077d8787838151811061077057634e487b7160e01b600052603260045260246000fd5b6020026020010151611bda565b80610787816132f6565b915050610743565b50505050505050565b6107a0611e69565b8060048160ff16106107c45760405162461bcd60e51b815260040161060d90613145565b6106b6600a8460018560ff1660048111156107ef57634e487b7160e01b600052602160045260246000fd5b611ec3565b60025460408051636eb1769f60e11b815230600482015233602482015290516000926001600160a01b03169163dd62ed3e916044808301926020929190829003018186803b15801561084557600080fd5b505afa158015610859573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061087d9190612ee9565b90508061089d57604051630686827b60e51b815260040160405180910390fd5b6002546001600160a01b03166323b872dd30336040516001600160e01b031960e085901b1681526001600160a01b0392831660048201529116602482015260448101849052606401602060405180830381600087803b1580156108ff57600080fd5b505af1158015610913573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109379190612dd7565b5050565b61097e6040518060c00160405280600063ffffffff1681526020016000815260200160001515815260200160001515815260200160608152602001606081525090565b600583106109b85760405162461bcd60e51b8152602060048201526007602482015266125b9d985b1a5960ca1b604482015260640161060d565b600a60008460048111156109dc57634e487b7160e01b600052602160045260246000fd5b60048111156109fb57634e487b7160e01b600052602160045260246000fd5b6004811115610a1a57634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b03861682528352818120825160c081018452815463ffffffff168152600182015481860152600282015460ff8082161515838701526101009091041615156060820152600382018054855181880281018801909652808652919592946080870194909391929184015b82821015610b5c5760008481526020908190206040805160a081018252600486029092018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff1690811115610b2a57634e487b7160e01b600052602160045260246000fd5b6002811115610b4957634e487b7160e01b600052602160045260246000fd5b8152505081526020019060010190610a9f565b505050508152602001600482018054610b74906132bb565b80601f0160208091040260200160405190810160405280929190818152602001828054610ba0906132bb565b8015610bed5780601f10610bc257610100808354040283529160200191610bed565b820191906000526020600020905b815481529060010190602001808311610bd057829003601f168201915b505050505081525050905092915050565b80610c07611b7a565b60200151805160009060329015610c50578160ff168351118015610c2f57508060ff16835111155b610c4b5760405162461bcd60e51b815260040161060d9061316f565b610c83565b8160ff168451118015610c6757508060ff16845111155b610c835760405162461bcd60e51b815260040161060d9061316f565b60005b855181101561078f57610cc087878381518110610cb357634e487b7160e01b600052603260045260246000fd5b6020026020010151611313565b80610cca816132f6565b915050610c86565b610cda611e69565b610ce4600061201b565b565b610cee611e69565b600455565b60078181548110610d0357600080fd5b60009182526020909120600160029092020101546001600160a01b0316905081565b610d2d611e69565b60048260ff1610610d505760405162461bcd60e51b815260040161060d90613145565b80600b60008460ff166004811115610d7857634e487b7160e01b600052602160045260246000fd5b6004811115610d9757634e487b7160e01b600052602160045260246000fd5b6004811115610db657634e487b7160e01b600052602160045260246000fd5b81526020810191909152604001600020555050565b610dd3611e69565b600655565b600333610de5828261206b565b610e025760405163aa6318d360e01b815260040160405180910390fd5b6000610e0d846120e5565b9050610e216000546001600160a01b031690565b6001600160a01b0316336001600160a01b031614610e8257336001600160a01b03821614610e825760405162461bcd60e51b815260206004820152600e60248201526d139bdd08105d5d1a1bdc9a5e995960921b604482015260640161060d565b610e8d60078561212b565b50505050565b610e9b611b7a565b518151829060009060329015610ee3578160ff168351118015610ec257508060ff16835111155b610ede5760405162461bcd60e51b815260040161060d9061316f565b610f16565b8160ff168451118015610efa57508060ff16845111155b610f165760405162461bcd60e51b815260040161060d9061316f565b60005b8551811015610f6457610f52868281518110610f4557634e487b7160e01b600052603260045260246000fd5b6020026020010151611110565b80610f5c816132f6565b915050610f19565b505050505050565b606060038260ff1610610fb55760405162461bcd60e51b815260206004820152601160248201527024b73b30b634b21039b2b632b1b2ba37b960791b604482015260640161060d565b600960008360ff166002811115610fdc57634e487b7160e01b600052602160045260246000fd5b6002811115610ffb57634e487b7160e01b600052602160045260246000fd5b600281111561101a57634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b828210156111055760008481526020908190206040805160a081018252600486029092018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff16908111156110d357634e487b7160e01b600052602160045260246000fd5b60028111156110f257634e487b7160e01b600052602160045260246000fd5b8152505081526020019060010190611048565b505050509050919050565b60013361111d828261206b565b61113a5760405163aa6318d360e01b815260040160405180910390fd5b600380546000918261114b836132f6565b90915550506003546040805160a081019091526111e39060099080611174898660c084016130e2565b60405160208183030381529060405280519060200120815260200160006001600160a01b031681526020016111a63390565b6001600160a01b03168152600060208201526040018560028111156111db57634e487b7160e01b600052602160045260246000fd5b90528461236c565b5050505050565b3360009081527fa856840544dc26124927add067d799967eac11be13e14d82cc281ea46fa397596020526040902060020154610100900460ff16156112665760405162461bcd60e51b8152602060048201526012602482015271105b1c9958591e481c9959da5cdd195c995960721b604482015260640161060d565b60006112736007336124e6565b3360009081527fa856840544dc26124927add067d799967eac11be13e14d82cc281ea46fa3975960205260408120600201805461ff00191661010017905560058054929350906112c2836132f6565b91905055507f0723b3a091c16d9ebe7fe55f416fb9ea16fe106c1094fb596b8fdaa98f2847fb816112f03390565b604080519283526001600160a01b0390911660208301520160405180910390a150565b600033611320828261206b565b61133d5760405163aa6318d360e01b815260040160405180910390fd5b60408051808201909152601581527424b73b30b634b2103bb0b9ba32903837b4b73a32b960591b60208201528490849060009061137a565b611458565b600082600281111561139c57634e487b7160e01b600052602160045260246000fd5b141561143657600960008360028111156113c657634e487b7160e01b600052602160045260246000fd5b60028111156113e557634e487b7160e01b600052602160045260246000fd5b815260208101919091526040016000205483106113755760405162461bcd60e51b815260206004820152600f60248201526e125b9d985b1a59081dd85cdd195259608a1b604482015260640161060d565b600754841061145857604051638320418360e01b815260040160405180910390fd5b3360009081527f13da86008ba1c6922daee3e07db95305ef49ebced9f5467a0b8613fcc6b343e36020526040902060020154610100900460ff166114cc5760405162461bcd60e51b815260206004820152600b60248201526a139bdd08185b1b1bddd95960aa1b604482015260640161060d565b600080805260096020527fec8156718a8372b1db44bb411437d0870f3e3790d4a08526d024ce1b0b668f6b54881061153d5760405162461bcd60e51b81526020600482015260146024820152731dd85cdd195259081bdd5d081bd988189bdd5b9960621b604482015260640161060d565b600061154b60098a84612551565b905061155b60078b836001612751565b50505050505050505050565b6002600081815260096020527f6cde3cea4b3a3fb2488b2808bae7556f4a405e50f65e1794383bc026131b13c3549182158015906115a55750838310155b6115e15760405162461bcd60e51b815260206004820152600d60248201526c4e6f7420617661696c61626c6560981b604482015260640161060d565b60005b8481101561196b5760006009600084600281111561161257634e487b7160e01b600052602160045260246000fd5b600281111561163157634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020828154811061165e57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160a0810182526004939093029091018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff16908111156116e357634e487b7160e01b600052602160045260246000fd5b600281111561170257634e487b7160e01b600052602160045260246000fd5b90525060608101519091506001600160a01b0316156119585783611725816132f6565b60046000908152600a6020529095507fe1eb2b2161a492c07c5a334e48012567cba93ec021043f53c1955516a3c5a8419150336001600160a01b03166001600160a01b031681526020019081526020016000206003016040518060a001604052808360000151815260200183602001516001600160a01b0316815260200183604001516001600160a01b0316815260200183606001516001600160a01b03168152602001836080015160028111156117ed57634e487b7160e01b600052602160045260246000fd5b9052815460018082018455600093845260209384902083516004909302019182559282015192810180546001600160a01b03199081166001600160a01b0395861617909155604083015160028084018054841692871692909217909155606084015160038401805493841691909616908117865560808501519495939493926001600160a81b0319161790600160a01b90849081111561189d57634e487b7160e01b600052602160045260246000fd5b02179055505050600960008460028111156118c857634e487b7160e01b600052602160045260246000fd5b60028111156118e757634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020828154811061191457634e487b7160e01b600052603260045260246000fd5b6000918252602082206004909102019081556001810180546001600160a01b0319908116909155600282018054909116905560030180546001600160a81b03191690555b5080611963816132f6565b9150506115e4565b5060008260065461197c9190613270565b9050803410156111e35760405162461bcd60e51b81526020600482015260066024820152654956616c756560d01b604482015260640161060d565b6119bf611e69565b8060048160ff16106119e35760405162461bcd60e51b815260040161060d90613145565b6106b6600a8460008560ff1660048111156107ef57634e487b7160e01b600052602160045260246000fd5b611a16611e69565b600155565b611a23611e69565b6001600160a01b038116611a885760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161060d565b611a918161201b565b50565b6000808052602085815260408083206001600160a01b03871684528252808320805463ffffffff19164263ffffffff1617815560018101849055600201805461010061ffff1990911617905551611aef918591859101613117565b604051602081830303815290604052856000836004811115611b2157634e487b7160e01b600052602160045260246000fd5b6004811115611b4057634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b03891682528352208251610f64936004909201929190910190612b35565b604080518082018252606080825260208083019190915282516000808252918101828152818501909452919281611bc1565b6060815260200190600190039081611bac5790505b5060408051808201909152928352602083015250919050565b600233611be7828261206b565b611c045760405163aa6318d360e01b815260040160405180910390fd5b60408051808201909152601581527424b73b30b634b2103bb0b9ba32903837b4b73a32b960591b60208201528490849060019060078481548110611c5857634e487b7160e01b600052603260045260246000fd5b60009182526020909120600290910201548310611c8857604051637e849ffb60e01b815260040160405180910390fd5b6000611c9660078a8a6128ad565b9050611ca5600982600261236c565b60045460008080611cb7600885612a26565b600254602089015160405163095ea7b360e01b81526001600160a01b03918216600482015260248101869052949750929550909350169063095ea7b390604401602060405180830381600087803b158015611d1157600080fd5b505af1158015611d25573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d499190612dd7565b50600254604086810151905163095ea7b360e01b81526001600160a01b0391821660048201526024810185905291169063095ea7b390604401602060405180830381600087803b158015611d9c57600080fd5b505af1158015611db0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611dd49190612dd7565b5060025460405163095ea7b360e01b8152306004820152602481018390526001600160a01b039091169063095ea7b390604401602060405180830381600087803b158015611e2157600080fd5b505af1158015611e35573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e599190612dd7565b5050505050505050505050505050565b6000546001600160a01b03163314610ce45760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161060d565b6000611ed0858584612abb565b90508215611f78578015611ef757604051633ee20b6960e01b815260040160405180910390fd5b6001856000846004811115611f1c57634e487b7160e01b600052602160045260246000fd5b6004811115611f3b57634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b03891682529092529020600201805460ff19169115159190911790556111e3565b80611f965760405163aa6318d360e01b815260040160405180910390fd5b6000856000846004811115611fbb57634e487b7160e01b600052602160045260246000fd5b6004811115611fda57634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b03891682529092529020600201805491151560ff199092169190911790555050505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000600a600084600481111561209157634e487b7160e01b600052602160045260246000fd5b60048111156120b057634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b038616825290925290206002015460ff16905092915050565b60006007828154811061210857634e487b7160e01b600052603260045260246000fd5b60009182526020909120600160029092020101546001600160a01b031692915050565b81546000908190848482811061215157634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160405180604001604052908160008201805480602002602001604051908101604052809291908181526020016000905b8282101561224c5760008481526020908190206040805160a081018252600486029092018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff169081111561221a57634e487b7160e01b600052602160045260246000fd5b600281111561223957634e487b7160e01b600052602160045260246000fd5b815250508152602001906001019061218f565b50505090825250600191909101546001600160a01b0316602090910152805151919350915061228e5760405163347682f560e01b815260040160405180910390fd5b60005b8281101561231957600282518051839081106122bd57634e487b7160e01b600052603260045260246000fd5b60200260200101516080015160028111156122e857634e487b7160e01b600052602160045260246000fd5b101561230757604051633f00676b60e01b815260040160405180910390fd5b80612311816132f6565b915050612291565b5083838154811061233a57634e487b7160e01b600052603260045260246000fd5b600091825260208220600290910201906123548282612bb9565b5060010180546001600160a01b031916905550505050565b82600082600281111561238f57634e487b7160e01b600052602160045260246000fd5b60028111156123ae57634e487b7160e01b600052602160045260246000fd5b81526020019081526020016000206040518060a001604052808460000151815260200184602001516001600160a01b0316815260200184604001516001600160a01b0316815260200184606001516001600160a01b0316815260200183600281111561242a57634e487b7160e01b600052602160045260246000fd5b9052815460018082018455600093845260209384902083516004909302019182559282015192810180546001600160a01b03199081166001600160a01b0395861617909155604083015160028084018054841692871692909217909155606084015160038401805493841691909616908117865560808501519495939493926001600160a81b0319161790600160a01b9084908111156124da57634e487b7160e01b600052602160045260246000fd5b02179055505050505050565b8154600181018084556000849052829084908390811061251657634e487b7160e01b600052603260045260246000fd5b906000526020600020906002020160010160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555092915050565b6125806040805160a0810182526000808252602082018190529181018290526060810182905290608082015290565b8360008360028111156125a357634e487b7160e01b600052602160045260246000fd5b60028111156125c257634e487b7160e01b600052602160045260246000fd5b815260200190815260200160002083815481106125ef57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160a0810182526004939093029091018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff169081111561267457634e487b7160e01b600052602160045260246000fd5b600281111561269357634e487b7160e01b600052602160045260246000fd5b90525090508360008360028111156126bb57634e487b7160e01b600052602160045260246000fd5b60028111156126da57634e487b7160e01b600052602160045260246000fd5b8152602001908152602001600020838154811061270757634e487b7160e01b600052603260045260246000fd5b6000918252602082206004909102019081556001810180546001600160a01b0319908116909155600282018054909116905560030180546001600160a81b03191690559392505050565b83838154811061277157634e487b7160e01b600052603260045260246000fd5b90600052602060002090600202016000016040518060a001604052808460000151815260200184602001516001600160a01b0316815260200184604001516001600160a01b0316815260200184606001516001600160a01b031681526020018360028111156127f057634e487b7160e01b600052602160045260246000fd5b9052815460018082018455600093845260209384902083516004909302019182559282015192810180546001600160a01b03199081166001600160a01b0395861617909155604083015160028084018054841692871692909217909155606084015160038401805493841691909616908117865560808501519495939493926001600160a81b0319161790600160a01b9084908111156128a057634e487b7160e01b600052602160045260246000fd5b0217905550505050505050565b6128dc6040805160a0810182526000808252602082018190529181018290526060810182905290608082015290565b8383815481106128fc57634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600001828154811061292c57634e487b7160e01b600052603260045260246000fd5b60009182526020918290206040805160a0810182526004939093029091018054835260018101546001600160a01b03908116948401949094526002808201548516928401929092526003810154938416606084015291926080840191600160a01b90910460ff16908111156129b157634e487b7160e01b600052602160045260246000fd5b60028111156129d057634e487b7160e01b600052602160045260246000fd5b8152505090508383815481106129f657634e487b7160e01b600052603260045260246000fd5b9060005260206000209060020201600001828154811061270757634e487b7160e01b600052603260045260246000fd5b60008080526020839052604081205481908190606490612a4a90869060ff16613270565b612a549190613250565b6001600090815260208790526040902054909350606490612a7990869060ff16613270565b612a839190613250565b6002600090815260208790526040902054909250606490612aa890869060ff16613270565b612ab29190613250565b90509250925092565b6000836000836004811115612ae057634e487b7160e01b600052602160045260246000fd5b6004811115612aff57634e487b7160e01b600052602160045260246000fd5b8152602080820192909252604090810160009081206001600160a01b038716825290925290206002015460ff1690509392505050565b828054612b41906132bb565b90600052602060002090601f016020900481019282612b635760008555612ba9565b82601f10612b7c57805160ff1916838001178555612ba9565b82800160010185558215612ba9579182015b82811115612ba9578251825591602001919060010190612b8e565b50612bb5929150612bda565b5090565b5080546000825560040290600052602060002090810190611a919190612bef565b5b80821115612bb55760008155600101612bdb565b5b80821115612bb557600081556001810180546001600160a01b031990811690915560028201805490911690556003810180546001600160a81b0319169055600401612bf0565b80356001600160a01b0381168114612c4d57600080fd5b919050565b600082601f830112612c62578081fd5b813567ffffffffffffffff811115612c7c57612c7c613327565b612c8f601f8201601f19166020016131fb565b818152846020838601011115612ca3578283fd5b816020850160208301379081016020019190915292915050565b803560ff81168114612c4d57600080fd5b600060208284031215612cdf578081fd5b612ce882612c36565b9392505050565b60008060408385031215612d01578081fd5b612d0a83612c36565b9150612d1860208401612cbd565b90509250929050565b60006020808385031215612d33578182fd5b823567ffffffffffffffff80821115612d4a578384fd5b818501915085601f830112612d5d578384fd5b8135612d70612d6b8261322c565b6131fb565b80828252858201915085850189878560051b8801011115612d8f578788fd5b875b84811015612dc857813586811115612da757898afd5b612db58c8a838b0101612c52565b8552509287019290870190600101612d91565b50909998505050505050505050565b600060208284031215612de8578081fd5b81518015158114612ce8578182fd5b600060208284031215612e08578081fd5b813560058110612ce8578182fd5b600060208284031215612e27578081fd5b813560038110612ce8578182fd5b600060208284031215612e46578081fd5b813567ffffffffffffffff811115612e5c578182fd5b612e6884828501612c52565b949350505050565b60008060408385031215612e82578182fd5b823567ffffffffffffffff80821115612e99578384fd5b612ea586838701612c52565b93506020850135915080821115612eba578283fd5b50612ec785828601612c52565b9150509250929050565b600060208284031215612ee2578081fd5b5035919050565b600060208284031215612efa578081fd5b5051919050565b60008060408385031215612f13578182fd5b82359150612d1860208401612c36565b60008060408385031215612f35578182fd5b8235915060208084013567ffffffffffffffff811115612f53578283fd5b8401601f81018613612f63578283fd5b8035612f71612d6b8261322c565b80828252848201915084840189868560051b8701011115612f90578687fd5b8694505b83851015612fb2578035835260019490940193918501918501612f94565b5080955050505050509250929050565b60008060408385031215612fd4578182fd5b50508035926020909101359150565b600060208284031215612ff4578081fd5b612ce882612cbd565b6000806040838503121561300f578182fd5b61301883612cbd565b946020939093013593505050565b6000815180845260208085019450808401835b838110156130ab57815180518852838101516001600160a01b03908116858a01526040808301518216908a015260608083015190911690890152608090810151906003821061309657634e487b7160e01b87526021600452602487fd5b88015260a09096019590820190600101613039565b509495945050505050565b600081518084526130ce81602086016020860161328f565b601f01601f19169290920160200192915050565b600083516130f481846020880161328f565b9190910191825250602001919050565b602081526000612ce86020830184613026565b60408152600061312a60408301856130b6565b828103602084015261313c81856130b6565b95945050505050565b60208082526010908201526f496e76616c69642063617465676f727960801b604082015260600190565b6020808252600790820152661a5b9d985b1a5960ca1b604082015260600190565b6020815263ffffffff8251166020820152602082015160408201526040820151151560608201526060820151151560808201526000608083015160c060a08401526131de60e0840182613026565b905060a0840151601f198483030160c085015261313c82826130b6565b604051601f8201601f1916810167ffffffffffffffff8111828210171561322457613224613327565b604052919050565b600067ffffffffffffffff82111561324657613246613327565b5060051b60200190565b60008261326b57634e487b7160e01b81526012600452602481fd5b500490565b600081600019048311821515161561328a5761328a613311565b500290565b60005b838110156132aa578181015183820152602001613292565b83811115610e8d5750506000910152565b600181811c908216806132cf57607f821691505b602082108114156132f057634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561330a5761330a613311565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052604160045260246000fdfea26469706673582212201052264b80de3126c34d9ed1f016758fa69133745d6ad06078cfb6f3aa2bc91464736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x1CC JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x93051D95 GT PUSH2 0xF7 JUMPI DUP1 PUSH4 0xC3864CCE GT PUSH2 0x95 JUMPI DUP1 PUSH4 0xF2FDE38B GT PUSH2 0x64 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x52C JUMPI DUP1 PUSH4 0xF9404506 EQ PUSH2 0x54C JUMPI DUP1 PUSH4 0xFC0C546A EQ PUSH2 0x562 JUMPI DUP1 PUSH4 0xFFC2105C EQ PUSH2 0x582 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xC3864CCE EQ PUSH2 0x4B9 JUMPI DUP1 PUSH4 0xC437A2F0 EQ PUSH2 0x4D9 JUMPI DUP1 PUSH4 0xE47C294D EQ PUSH2 0x4EC JUMPI DUP1 PUSH4 0xF2D03E15 EQ PUSH2 0x50C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0xA741C0DF GT PUSH2 0xD1 JUMPI DUP1 PUSH4 0xA741C0DF EQ PUSH2 0x422 JUMPI DUP1 PUSH4 0xB7588280 EQ PUSH2 0x44F JUMPI DUP1 PUSH4 0xBF5E6B6D EQ PUSH2 0x46F JUMPI DUP1 PUSH4 0xC2F0C279 EQ PUSH2 0x477 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x93051D95 EQ PUSH2 0x3CC JUMPI DUP1 PUSH4 0x955EF11A EQ PUSH2 0x3EC JUMPI DUP1 PUSH4 0xA035B1FE EQ PUSH2 0x40C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD97927 GT PUSH2 0x16F JUMPI DUP1 PUSH4 0x885C7B38 GT PUSH2 0x13E JUMPI DUP1 PUSH4 0x885C7B38 EQ PUSH2 0x336 JUMPI DUP1 PUSH4 0x8C6AA3F5 EQ PUSH2 0x36E JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x38E JUMPI DUP1 PUSH4 0x91B7F5ED EQ PUSH2 0x3AC JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x3FD97927 EQ PUSH2 0x2B4 JUMPI DUP1 PUSH4 0x41311BC3 EQ PUSH2 0x2E1 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x301 JUMPI DUP1 PUSH4 0x72938A14 EQ PUSH2 0x316 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x1F2A4A3F GT PUSH2 0x1AB JUMPI DUP1 PUSH4 0x1F2A4A3F EQ PUSH2 0x253 JUMPI DUP1 PUSH4 0x235EB9F5 EQ PUSH2 0x269 JUMPI DUP1 PUSH4 0x31B59ED7 EQ PUSH2 0x27F JUMPI DUP1 PUSH4 0x3CCFD60B EQ PUSH2 0x29F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH3 0x95DB2D EQ PUSH2 0x1D1 JUMPI DUP1 PUSH4 0xB776241 EQ PUSH2 0x211 JUMPI DUP1 PUSH4 0xBDD7063 EQ PUSH2 0x233 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x1DD JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH2 0x1EC CALLDATASIZE PUSH1 0x4 PUSH2 0x2DF7 JUMP JUMPDEST PUSH1 0xB PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x21D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x22C CALLDATASIZE PUSH1 0x4 PUSH2 0x2E70 JUMP JUMPDEST PUSH2 0x598 JUMP JUMPDEST STOP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x23F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x24E CALLDATASIZE PUSH1 0x4 PUSH2 0x2F23 JUMP JUMPDEST PUSH2 0x6BB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x25F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x5 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x275 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x4 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x28B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x29A CALLDATASIZE PUSH1 0x4 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x798 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2AB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x7F4 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2C0 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x2D4 PUSH2 0x2CF CALLDATASIZE PUSH1 0x4 PUSH2 0x2F01 JUMP JUMPDEST PUSH2 0x93B JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x3190 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x2ED JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x2FC CALLDATASIZE PUSH1 0x4 PUSH2 0x2F23 JUMP JUMPDEST PUSH2 0xBFE JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x30D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0xCD2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x322 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x331 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0xCE6 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x342 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x356 PUSH2 0x351 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0xCF3 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x37A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x389 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FFD JUMP JUMPDEST PUSH2 0xD25 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x39A JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH2 0x356 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3B8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x3C7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0xDCB JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3D8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x3E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0xDD8 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x3F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x407 CALLDATASIZE PUSH1 0x4 PUSH2 0x2D21 JUMP JUMPDEST PUSH2 0xE93 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x418 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x6 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x42E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x442 PUSH2 0x43D CALLDATASIZE PUSH1 0x4 PUSH2 0x2FE3 JUMP JUMPDEST PUSH2 0xF6C JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x208 SWAP2 SWAP1 PUSH2 0x3104 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x45B JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x46A CALLDATASIZE PUSH1 0x4 PUSH2 0x2E35 JUMP JUMPDEST PUSH2 0x1110 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x11EA JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x483 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x4A7 PUSH2 0x492 CALLDATASIZE PUSH1 0x4 PUSH2 0x2E16 JUMP JUMPDEST PUSH1 0x8 PUSH1 0x20 MSTORE PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD PUSH1 0xFF AND DUP2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0xFF SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x208 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4C5 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x4D4 CALLDATASIZE PUSH1 0x4 PUSH2 0x2FC2 JUMP JUMPDEST PUSH2 0x1313 JUMP JUMPDEST PUSH2 0x231 PUSH2 0x4E7 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x1567 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x4F8 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x507 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CEF JUMP JUMPDEST PUSH2 0x19B7 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x518 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x527 CALLDATASIZE PUSH1 0x4 PUSH2 0x2ED1 JUMP JUMPDEST PUSH2 0x1A0E JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x538 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x231 PUSH2 0x547 CALLDATASIZE PUSH1 0x4 PUSH2 0x2CCE JUMP JUMPDEST PUSH2 0x1A1B JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x558 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x1 SLOAD DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x56E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x2 SLOAD PUSH2 0x356 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 JUMP JUMPDEST CALLVALUE DUP1 ISZERO PUSH2 0x58E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH2 0x1FE PUSH1 0x3 SLOAD DUP2 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x616 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x416C7265616479207369676E20757 PUSH1 0x8C SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x623 PUSH1 0xA CALLER DUP5 DUP5 PUSH2 0x1A94 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x95EA7B3 CALLER PUSH1 0x1 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP3 AND PUSH1 0x4 DUP4 ADD MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x67E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x692 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x6B6 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP POP POP JUMP JUMPDEST DUP1 PUSH2 0x6C4 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x32 SWAP1 ISZERO PUSH2 0x70D JUMPI DUP2 PUSH1 0xFF AND DUP4 MLOAD GT DUP1 ISZERO PUSH2 0x6EC JUMPI POP DUP1 PUSH1 0xFF AND DUP4 MLOAD GT ISZERO JUMPDEST PUSH2 0x708 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH2 0x740 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP5 MLOAD GT DUP1 ISZERO PUSH2 0x724 JUMPI POP DUP1 PUSH1 0xFF AND DUP5 MLOAD GT ISZERO JUMPDEST PUSH2 0x740 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH2 0x77D DUP8 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0x770 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1BDA JUMP JUMPDEST DUP1 PUSH2 0x787 DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x743 JUMP JUMPDEST POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x7A0 PUSH2 0x1E69 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 PUSH1 0xFF AND LT PUSH2 0x7C4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x3145 JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0xA DUP5 PUSH1 0x1 DUP6 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1EC3 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH4 0x6EB1769F PUSH1 0xE1 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE CALLER PUSH1 0x24 DUP3 ADD MSTORE SWAP1 MLOAD PUSH1 0x0 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP2 PUSH4 0xDD62ED3E SWAP2 PUSH1 0x44 DUP1 DUP4 ADD SWAP3 PUSH1 0x20 SWAP3 SWAP2 SWAP1 DUP3 SWAP1 SUB ADD DUP2 DUP7 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x845 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS STATICCALL ISZERO DUP1 ISZERO PUSH2 0x859 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x87D SWAP2 SWAP1 PUSH2 0x2EE9 JUMP JUMPDEST SWAP1 POP DUP1 PUSH2 0x89D JUMPI PUSH1 0x40 MLOAD PUSH4 0x686827B PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH4 0x23B872DD ADDRESS CALLER PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xE0 SHL SUB NOT PUSH1 0xE0 DUP6 SWAP1 SHL AND DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP3 DUP4 AND PUSH1 0x4 DUP3 ADD MSTORE SWAP2 AND PUSH1 0x24 DUP3 ADD MSTORE PUSH1 0x44 DUP2 ADD DUP5 SWAP1 MSTORE PUSH1 0x64 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x8FF JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x913 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x937 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x97E PUSH1 0x40 MLOAD DUP1 PUSH1 0xC0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP4 LT PUSH2 0x9B8 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x7 PUSH1 0x24 DUP3 ADD MSTORE PUSH7 0x125B9D985B1A59 PUSH1 0xCA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0xA PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9DC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x9FB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xA1A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE DUP4 MSTORE DUP2 DUP2 KECCAK256 DUP3 MLOAD PUSH1 0xC0 DUP2 ADD DUP5 MSTORE DUP2 SLOAD PUSH4 0xFFFFFFFF AND DUP2 MSTORE PUSH1 0x1 DUP3 ADD SLOAD DUP2 DUP7 ADD MSTORE PUSH1 0x2 DUP3 ADD SLOAD PUSH1 0xFF DUP1 DUP3 AND ISZERO ISZERO DUP4 DUP8 ADD MSTORE PUSH2 0x100 SWAP1 SWAP2 DIV AND ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x3 DUP3 ADD DUP1 SLOAD DUP6 MLOAD DUP2 DUP9 MUL DUP2 ADD DUP9 ADD SWAP1 SWAP7 MSTORE DUP1 DUP7 MSTORE SWAP2 SWAP6 SWAP3 SWAP5 PUSH1 0x80 DUP8 ADD SWAP5 SWAP1 SWAP4 SWAP2 SWAP3 SWAP2 DUP5 ADD JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xB5C JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0xB2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xB49 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xA9F JUMP JUMPDEST POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD DUP1 SLOAD PUSH2 0xB74 SWAP1 PUSH2 0x32BB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xBA0 SWAP1 PUSH2 0x32BB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xBED JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xBC2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xBED JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xBD0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 PUSH2 0xC07 PUSH2 0x1B7A JUMP JUMPDEST PUSH1 0x20 ADD MLOAD DUP1 MLOAD PUSH1 0x0 SWAP1 PUSH1 0x32 SWAP1 ISZERO PUSH2 0xC50 JUMPI DUP2 PUSH1 0xFF AND DUP4 MLOAD GT DUP1 ISZERO PUSH2 0xC2F JUMPI POP DUP1 PUSH1 0xFF AND DUP4 MLOAD GT ISZERO JUMPDEST PUSH2 0xC4B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH2 0xC83 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP5 MLOAD GT DUP1 ISZERO PUSH2 0xC67 JUMPI POP DUP1 PUSH1 0xFF AND DUP5 MLOAD GT ISZERO JUMPDEST PUSH2 0xC83 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0x78F JUMPI PUSH2 0xCC0 DUP8 DUP8 DUP4 DUP2 MLOAD DUP2 LT PUSH2 0xCB3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1313 JUMP JUMPDEST DUP1 PUSH2 0xCCA DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xC86 JUMP JUMPDEST PUSH2 0xCDA PUSH2 0x1E69 JUMP JUMPDEST PUSH2 0xCE4 PUSH1 0x0 PUSH2 0x201B JUMP JUMPDEST JUMP JUMPDEST PUSH2 0xCEE PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x4 SSTORE JUMP JUMPDEST PUSH1 0x7 DUP2 DUP2 SLOAD DUP2 LT PUSH2 0xD03 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 POP DUP2 JUMP JUMPDEST PUSH2 0xD2D PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x4 DUP3 PUSH1 0xFF AND LT PUSH2 0xD50 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x3145 JUMP JUMPDEST DUP1 PUSH1 0xB PUSH1 0x0 DUP5 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD78 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xD97 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0xDB6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SSTORE POP POP JUMP JUMPDEST PUSH2 0xDD3 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x6 SSTORE JUMP JUMPDEST PUSH1 0x3 CALLER PUSH2 0xDE5 DUP3 DUP3 PUSH2 0x206B JUMP JUMPDEST PUSH2 0xE02 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0xE0D DUP5 PUSH2 0x20E5 JUMP JUMPDEST SWAP1 POP PUSH2 0xE21 PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND EQ PUSH2 0xE82 JUMPI CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND EQ PUSH2 0xE82 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xE PUSH1 0x24 DUP3 ADD MSTORE PUSH14 0x139BDD08105D5D1A1BDC9A5E9959 PUSH1 0x92 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH2 0xE8D PUSH1 0x7 DUP6 PUSH2 0x212B JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH2 0xE9B PUSH2 0x1B7A JUMP JUMPDEST MLOAD DUP2 MLOAD DUP3 SWAP1 PUSH1 0x0 SWAP1 PUSH1 0x32 SWAP1 ISZERO PUSH2 0xEE3 JUMPI DUP2 PUSH1 0xFF AND DUP4 MLOAD GT DUP1 ISZERO PUSH2 0xEC2 JUMPI POP DUP1 PUSH1 0xFF AND DUP4 MLOAD GT ISZERO JUMPDEST PUSH2 0xEDE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH2 0xF16 JUMP JUMPDEST DUP2 PUSH1 0xFF AND DUP5 MLOAD GT DUP1 ISZERO PUSH2 0xEFA JUMPI POP DUP1 PUSH1 0xFF AND DUP5 MLOAD GT ISZERO JUMPDEST PUSH2 0xF16 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x316F JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP6 MLOAD DUP2 LT ISZERO PUSH2 0xF64 JUMPI PUSH2 0xF52 DUP7 DUP3 DUP2 MLOAD DUP2 LT PUSH2 0xF45 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH2 0x1110 JUMP JUMPDEST DUP1 PUSH2 0xF5C DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0xF19 JUMP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP3 PUSH1 0xFF AND LT PUSH2 0xFB5 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x11 PUSH1 0x24 DUP3 ADD MSTORE PUSH17 0x24B73B30B634B21039B2B632B1B2BA37B9 PUSH1 0x79 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x9 PUSH1 0x0 DUP4 PUSH1 0xFF AND PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFDC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0xFFB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x101A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1105 JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x10D3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x10F2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1048 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 CALLER PUSH2 0x111D DUP3 DUP3 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x113A JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 DUP1 SLOAD PUSH1 0x0 SWAP2 DUP3 PUSH2 0x114B DUP4 PUSH2 0x32F6 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x3 SLOAD PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD SWAP1 SWAP2 MSTORE PUSH2 0x11E3 SWAP1 PUSH1 0x9 SWAP1 DUP1 PUSH2 0x1174 DUP10 DUP7 PUSH1 0xC0 DUP5 ADD PUSH2 0x30E2 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP1 MLOAD SWAP1 PUSH1 0x20 ADD KECCAK256 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A6 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x0 PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x40 ADD DUP6 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x11DB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE DUP5 PUSH2 0x236C JUMP JUMPDEST POP POP POP POP POP JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA856840544DC26124927ADD067D799967EAC11BE13E14D82CC281EA46FA39759 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1266 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x12 PUSH1 0x24 DUP3 ADD MSTORE PUSH18 0x105B1C9958591E481C9959DA5CDD195C9959 PUSH1 0x72 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1273 PUSH1 0x7 CALLER PUSH2 0x24E6 JUMP JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0xA856840544DC26124927ADD067D799967EAC11BE13E14D82CC281EA46FA39759 PUSH1 0x20 MSTORE PUSH1 0x40 DUP2 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0xFF00 NOT AND PUSH2 0x100 OR SWAP1 SSTORE PUSH1 0x5 DUP1 SLOAD SWAP3 SWAP4 POP SWAP1 PUSH2 0x12C2 DUP4 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 SWAP1 POP SSTORE POP PUSH32 0x723B3A091C16D9EBE7FE55F416FB9EA16FE106C1094FB596B8FDAA98F2847FB DUP2 PUSH2 0x12F0 CALLER SWAP1 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD SWAP3 DUP4 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND PUSH1 0x20 DUP4 ADD MSTORE ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG1 POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x1320 DUP3 DUP3 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x133D JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x24B73B30B634B2103BB0B9BA32903837B4B73A32B9 PUSH1 0x59 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x0 SWAP1 PUSH2 0x137A JUMP JUMPDEST PUSH2 0x1458 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x139C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST EQ ISZERO PUSH2 0x1436 JUMPI PUSH1 0x9 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13C6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x13E5 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP2 ADD SWAP2 SWAP1 SWAP2 MSTORE PUSH1 0x40 ADD PUSH1 0x0 KECCAK256 SLOAD DUP4 LT PUSH2 0x1375 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xF PUSH1 0x24 DUP3 ADD MSTORE PUSH15 0x125B9D985B1A59081DD85CDD195259 PUSH1 0x8A SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x7 SLOAD DUP5 LT PUSH2 0x1458 JUMPI PUSH1 0x40 MLOAD PUSH4 0x83204183 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST CALLER PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH32 0x13DA86008BA1C6922DAEE3E07DB95305EF49EBCED9F5467A0B8613FCC6B343E3 PUSH1 0x20 MSTORE PUSH1 0x40 SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH2 0x100 SWAP1 DIV PUSH1 0xFF AND PUSH2 0x14CC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xB PUSH1 0x24 DUP3 ADD MSTORE PUSH11 0x139BDD08185B1B1BDDD959 PUSH1 0xAA SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0xEC8156718A8372B1DB44BB411437D0870F3E3790D4A08526D024CE1B0B668F6B SLOAD DUP9 LT PUSH2 0x153D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x14 PUSH1 0x24 DUP3 ADD MSTORE PUSH20 0x1DD85CDD195259081BDD5D081BD988189BDD5B99 PUSH1 0x62 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x154B PUSH1 0x9 DUP11 DUP5 PUSH2 0x2551 JUMP JUMPDEST SWAP1 POP PUSH2 0x155B PUSH1 0x7 DUP12 DUP4 PUSH1 0x1 PUSH2 0x2751 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x9 PUSH1 0x20 MSTORE PUSH32 0x6CDE3CEA4B3A3FB2488B2808BAE7556F4A405E50F65E1794383BC026131B13C3 SLOAD SWAP2 DUP3 ISZERO DUP1 ISZERO SWAP1 PUSH2 0x15A5 JUMPI POP DUP4 DUP4 LT ISZERO JUMPDEST PUSH2 0x15E1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0xD PUSH1 0x24 DUP3 ADD MSTORE PUSH13 0x4E6F7420617661696C61626C65 PUSH1 0x98 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x196B JUMPI PUSH1 0x0 PUSH1 0x9 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1612 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1631 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x165E JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x16E3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x1702 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE POP PUSH1 0x60 DUP2 ADD MLOAD SWAP1 SWAP2 POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND ISZERO PUSH2 0x1958 JUMPI DUP4 PUSH2 0x1725 DUP2 PUSH2 0x32F6 JUMP JUMPDEST PUSH1 0x4 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0xA PUSH1 0x20 MSTORE SWAP1 SWAP6 POP PUSH32 0xE1EB2B2161A492C07C5A334E48012567CBA93EC021043F53C1955516A3C5A841 SWAP2 POP CALLER PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x3 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x17ED JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 DUP3 ADD MLOAD SWAP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD DUP5 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 DUP5 AND SWAP2 SWAP1 SWAP7 AND SWAP1 DUP2 OR DUP7 SSTORE PUSH1 0x80 DUP6 ADD MLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x189D JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x9 PUSH1 0x0 DUP5 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18C8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x18E7 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x1914 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE JUMPDEST POP DUP1 PUSH2 0x1963 DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x15E4 JUMP JUMPDEST POP PUSH1 0x0 DUP3 PUSH1 0x6 SLOAD PUSH2 0x197C SWAP2 SWAP1 PUSH2 0x3270 JUMP JUMPDEST SWAP1 POP DUP1 CALLVALUE LT ISZERO PUSH2 0x11E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x6 PUSH1 0x24 DUP3 ADD MSTORE PUSH6 0x4956616C7565 PUSH1 0xD0 SHL PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH2 0x19BF PUSH2 0x1E69 JUMP JUMPDEST DUP1 PUSH1 0x4 DUP2 PUSH1 0xFF AND LT PUSH2 0x19E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x60D SWAP1 PUSH2 0x3145 JUMP JUMPDEST PUSH2 0x6B6 PUSH1 0xA DUP5 PUSH1 0x0 DUP6 PUSH1 0xFF AND PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x7EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x1A16 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x1 SSTORE JUMP JUMPDEST PUSH2 0x1A23 PUSH2 0x1E69 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x1A88 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x60D JUMP JUMPDEST PUSH2 0x1A91 DUP2 PUSH2 0x201B JUMP JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 DUP6 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP5 MSTORE DUP3 MSTORE DUP1 DUP4 KECCAK256 DUP1 SLOAD PUSH4 0xFFFFFFFF NOT AND TIMESTAMP PUSH4 0xFFFFFFFF AND OR DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP5 SWAP1 SSTORE PUSH1 0x2 ADD DUP1 SLOAD PUSH2 0x100 PUSH2 0xFFFF NOT SWAP1 SWAP2 AND OR SWAP1 SSTORE MLOAD PUSH2 0x1AEF SWAP2 DUP6 SWAP2 DUP6 SWAP2 ADD PUSH2 0x3117 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x20 DUP2 DUP4 SUB SUB DUP2 MSTORE SWAP1 PUSH1 0x40 MSTORE DUP6 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B21 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1B40 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 MSTORE DUP4 MSTORE KECCAK256 DUP3 MLOAD PUSH2 0xF64 SWAP4 PUSH1 0x4 SWAP1 SWAP3 ADD SWAP3 SWAP2 SWAP1 SWAP2 ADD SWAP1 PUSH2 0x2B35 JUMP JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD DUP3 MSTORE PUSH1 0x60 DUP1 DUP3 MSTORE PUSH1 0x20 DUP1 DUP4 ADD SWAP2 SWAP1 SWAP2 MSTORE DUP3 MLOAD PUSH1 0x0 DUP1 DUP3 MSTORE SWAP2 DUP2 ADD DUP3 DUP2 MSTORE DUP2 DUP6 ADD SWAP1 SWAP5 MSTORE SWAP2 SWAP3 DUP2 PUSH2 0x1BC1 JUMP JUMPDEST PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 SWAP1 SUB SWAP1 DUP2 PUSH2 0x1BAC JUMPI SWAP1 POP JUMPDEST POP PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE SWAP3 DUP4 MSTORE PUSH1 0x20 DUP4 ADD MSTORE POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x2 CALLER PUSH2 0x1BE7 DUP3 DUP3 PUSH2 0x206B JUMP JUMPDEST PUSH2 0x1C04 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x40 DUP1 MLOAD DUP1 DUP3 ADD SWAP1 SWAP2 MSTORE PUSH1 0x15 DUP2 MSTORE PUSH21 0x24B73B30B634B2103BB0B9BA32903837B4B73A32B9 PUSH1 0x59 SHL PUSH1 0x20 DUP3 ADD MSTORE DUP5 SWAP1 DUP5 SWAP1 PUSH1 0x1 SWAP1 PUSH1 0x7 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0x1C58 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SLOAD DUP4 LT PUSH2 0x1C88 JUMPI PUSH1 0x40 MLOAD PUSH4 0x7E849FFB PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH2 0x1C96 PUSH1 0x7 DUP11 DUP11 PUSH2 0x28AD JUMP JUMPDEST SWAP1 POP PUSH2 0x1CA5 PUSH1 0x9 DUP3 PUSH1 0x2 PUSH2 0x236C JUMP JUMPDEST PUSH1 0x4 SLOAD PUSH1 0x0 DUP1 DUP1 PUSH2 0x1CB7 PUSH1 0x8 DUP6 PUSH2 0x2A26 JUMP JUMPDEST PUSH1 0x2 SLOAD PUSH1 0x20 DUP10 ADD MLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP7 SWAP1 MSTORE SWAP5 SWAP8 POP SWAP3 SWAP6 POP SWAP1 SWAP4 POP AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1D25 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1D49 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 DUP7 DUP2 ADD MLOAD SWAP1 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP6 SWAP1 MSTORE SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1D9C JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1DB0 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1DD4 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP PUSH1 0x2 SLOAD PUSH1 0x40 MLOAD PUSH4 0x95EA7B3 PUSH1 0xE0 SHL DUP2 MSTORE ADDRESS PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP2 ADD DUP4 SWAP1 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND SWAP1 PUSH4 0x95EA7B3 SWAP1 PUSH1 0x44 ADD PUSH1 0x20 PUSH1 0x40 MLOAD DUP1 DUP4 SUB DUP2 PUSH1 0x0 DUP8 DUP1 EXTCODESIZE ISZERO DUP1 ISZERO PUSH2 0x1E21 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP GAS CALL ISZERO DUP1 ISZERO PUSH2 0x1E35 JUMPI RETURNDATASIZE PUSH1 0x0 DUP1 RETURNDATACOPY RETURNDATASIZE PUSH1 0x0 REVERT JUMPDEST POP POP POP POP PUSH1 0x40 MLOAD RETURNDATASIZE PUSH1 0x1F NOT PUSH1 0x1F DUP3 ADD AND DUP3 ADD DUP1 PUSH1 0x40 MSTORE POP DUP2 ADD SWAP1 PUSH2 0x1E59 SWAP2 SWAP1 PUSH2 0x2DD7 JUMP JUMPDEST POP POP POP POP POP POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0xCE4 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x60D JUMP JUMPDEST PUSH1 0x0 PUSH2 0x1ED0 DUP6 DUP6 DUP5 PUSH2 0x2ABB JUMP JUMPDEST SWAP1 POP DUP3 ISZERO PUSH2 0x1F78 JUMPI DUP1 ISZERO PUSH2 0x1EF7 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3EE20B69 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 DUP6 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F1C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1F3B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD PUSH1 0xFF NOT AND SWAP2 ISZERO ISZERO SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE PUSH2 0x11E3 JUMP JUMPDEST DUP1 PUSH2 0x1F96 JUMPI PUSH1 0x40 MLOAD PUSH4 0xAA6318D3 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP6 PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FBB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x1FDA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP10 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD DUP1 SLOAD SWAP2 ISZERO ISZERO PUSH1 0xFF NOT SWAP1 SWAP3 AND SWAP2 SWAP1 SWAP2 OR SWAP1 SSTORE POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR DUP5 SSTORE PUSH1 0x40 MLOAD SWAP2 SWAP1 SWAP3 AND SWAP3 DUP4 SWAP2 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP2 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xA PUSH1 0x0 DUP5 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2091 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x20B0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP7 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x7 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2108 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP1 SWAP2 KECCAK256 PUSH1 0x1 PUSH1 0x2 SWAP1 SWAP3 MUL ADD ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x0 SWAP1 DUP2 SWAP1 DUP5 DUP5 DUP3 DUP2 LT PUSH2 0x2151 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x224C JUMPI PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 SWAP1 DUP2 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 DUP7 MUL SWAP1 SWAP3 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x221A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2239 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x218F JUMP JUMPDEST POP POP POP SWAP1 DUP3 MSTORE POP PUSH1 0x1 SWAP2 SWAP1 SWAP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x20 SWAP1 SWAP2 ADD MSTORE DUP1 MLOAD MLOAD SWAP2 SWAP4 POP SWAP2 POP PUSH2 0x228E JUMPI PUSH1 0x40 MLOAD PUSH4 0x347682F5 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x2319 JUMPI PUSH1 0x2 DUP3 MLOAD DUP1 MLOAD DUP4 SWAP1 DUP2 LT PUSH2 0x22BD JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x20 MUL PUSH1 0x20 ADD ADD MLOAD PUSH1 0x80 ADD MLOAD PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x22E8 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST LT ISZERO PUSH2 0x2307 JUMPI PUSH1 0x40 MLOAD PUSH4 0x3F00676B PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x4 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH2 0x2311 DUP2 PUSH2 0x32F6 JUMP JUMPDEST SWAP2 POP POP PUSH2 0x2291 JUMP JUMPDEST POP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x233A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x2 SWAP1 SWAP2 MUL ADD SWAP1 PUSH2 0x2354 DUP3 DUP3 PUSH2 0x2BB9 JUMP JUMPDEST POP PUSH1 0x1 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT AND SWAP1 SSTORE POP POP POP POP JUMP JUMPDEST DUP3 PUSH1 0x0 DUP3 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x238F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x23AE JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x242A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 DUP3 ADD MLOAD SWAP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD DUP5 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 DUP5 AND SWAP2 SWAP1 SWAP7 AND SWAP1 DUP2 OR DUP7 SSTORE PUSH1 0x80 DUP6 ADD MLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x24DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP JUMP JUMPDEST DUP2 SLOAD PUSH1 0x1 DUP2 ADD DUP1 DUP5 SSTORE PUSH1 0x0 DUP5 SWAP1 MSTORE DUP3 SWAP1 DUP5 SWAP1 DUP4 SWAP1 DUP2 LT PUSH2 0x2516 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB MUL NOT AND SWAP1 DUP4 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND MUL OR SWAP1 SSTORE POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x2580 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x25A3 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x25C2 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x25EF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x2674 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x2693 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE POP SWAP1 POP DUP4 PUSH1 0x0 DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26BB JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x26DA JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2707 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 DUP3 KECCAK256 PUSH1 0x4 SWAP1 SWAP2 MUL ADD SWAP1 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x2771 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xA0 ADD PUSH1 0x40 MSTORE DUP1 DUP5 PUSH1 0x0 ADD MLOAD DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x20 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x40 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 PUSH1 0x60 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP2 MSTORE PUSH1 0x20 ADD DUP4 PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x27F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 MSTORE DUP2 SLOAD PUSH1 0x1 DUP1 DUP3 ADD DUP5 SSTORE PUSH1 0x0 SWAP4 DUP5 MSTORE PUSH1 0x20 SWAP4 DUP5 SWAP1 KECCAK256 DUP4 MLOAD PUSH1 0x4 SWAP1 SWAP4 MUL ADD SWAP2 DUP3 SSTORE SWAP3 DUP3 ADD MLOAD SWAP3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP6 DUP7 AND OR SWAP1 SWAP2 SSTORE PUSH1 0x40 DUP4 ADD MLOAD PUSH1 0x2 DUP1 DUP5 ADD DUP1 SLOAD DUP5 AND SWAP3 DUP8 AND SWAP3 SWAP1 SWAP3 OR SWAP1 SWAP2 SSTORE PUSH1 0x60 DUP5 ADD MLOAD PUSH1 0x3 DUP5 ADD DUP1 SLOAD SWAP4 DUP5 AND SWAP2 SWAP1 SWAP7 AND SWAP1 DUP2 OR DUP7 SSTORE PUSH1 0x80 DUP6 ADD MLOAD SWAP5 SWAP6 SWAP4 SWAP5 SWAP4 SWAP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND OR SWAP1 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 DUP5 SWAP1 DUP2 GT ISZERO PUSH2 0x28A0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x28DC PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x0 DUP1 DUP3 MSTORE PUSH1 0x20 DUP3 ADD DUP2 SWAP1 MSTORE SWAP2 DUP2 ADD DUP3 SWAP1 MSTORE PUSH1 0x60 DUP2 ADD DUP3 SWAP1 MSTORE SWAP1 PUSH1 0x80 DUP3 ADD MSTORE SWAP1 JUMP JUMPDEST DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x28FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x292C JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 SWAP2 DUP3 MSTORE PUSH1 0x20 SWAP2 DUP3 SWAP1 KECCAK256 PUSH1 0x40 DUP1 MLOAD PUSH1 0xA0 DUP2 ADD DUP3 MSTORE PUSH1 0x4 SWAP4 SWAP1 SWAP4 MUL SWAP1 SWAP2 ADD DUP1 SLOAD DUP4 MSTORE PUSH1 0x1 DUP2 ADD SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND SWAP5 DUP5 ADD SWAP5 SWAP1 SWAP5 MSTORE PUSH1 0x2 DUP1 DUP3 ADD SLOAD DUP6 AND SWAP3 DUP5 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x3 DUP2 ADD SLOAD SWAP4 DUP5 AND PUSH1 0x60 DUP5 ADD MSTORE SWAP2 SWAP3 PUSH1 0x80 DUP5 ADD SWAP2 PUSH1 0x1 PUSH1 0xA0 SHL SWAP1 SWAP2 DIV PUSH1 0xFF AND SWAP1 DUP2 GT ISZERO PUSH2 0x29B1 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x2 DUP2 GT ISZERO PUSH2 0x29D0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE POP POP SWAP1 POP DUP4 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x29F6 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x2 MUL ADD PUSH1 0x0 ADD DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x2707 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 DUP1 MSTORE PUSH1 0x20 DUP4 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 SLOAD DUP2 SWAP1 DUP2 SWAP1 PUSH1 0x64 SWAP1 PUSH2 0x2A4A SWAP1 DUP7 SWAP1 PUSH1 0xFF AND PUSH2 0x3270 JUMP JUMPDEST PUSH2 0x2A54 SWAP2 SWAP1 PUSH2 0x3250 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP4 POP PUSH1 0x64 SWAP1 PUSH2 0x2A79 SWAP1 DUP7 SWAP1 PUSH1 0xFF AND PUSH2 0x3270 JUMP JUMPDEST PUSH2 0x2A83 SWAP2 SWAP1 PUSH2 0x3250 JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP8 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 SWAP3 POP PUSH1 0x64 SWAP1 PUSH2 0x2AA8 SWAP1 DUP7 SWAP1 PUSH1 0xFF AND PUSH2 0x3270 JUMP JUMPDEST PUSH2 0x2AB2 SWAP2 SWAP1 PUSH2 0x3250 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH1 0x0 DUP4 PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AE0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x4 DUP2 GT ISZERO PUSH2 0x2AFF JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST DUP2 MSTORE PUSH1 0x20 DUP1 DUP3 ADD SWAP3 SWAP1 SWAP3 MSTORE PUSH1 0x40 SWAP1 DUP2 ADD PUSH1 0x0 SWAP1 DUP2 KECCAK256 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP8 AND DUP3 MSTORE SWAP1 SWAP3 MSTORE SWAP1 KECCAK256 PUSH1 0x2 ADD SLOAD PUSH1 0xFF AND SWAP1 POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH2 0x2B41 SWAP1 PUSH2 0x32BB JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH2 0x2B63 JUMPI PUSH1 0x0 DUP6 SSTORE PUSH2 0x2BA9 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH2 0x2B7C JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH2 0x2BA9 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH2 0x2BA9 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2BA9 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2B8E JUMP JUMPDEST POP PUSH2 0x2BB5 SWAP3 SWAP2 POP PUSH2 0x2BDA JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST POP DUP1 SLOAD PUSH1 0x0 DUP3 SSTORE PUSH1 0x4 MUL SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP1 PUSH2 0x1A91 SWAP2 SWAP1 PUSH2 0x2BEF JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BB5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH2 0x2BDB JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2BB5 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT SWAP1 DUP2 AND SWAP1 SWAP2 SSTORE PUSH1 0x2 DUP3 ADD DUP1 SLOAD SWAP1 SWAP2 AND SWAP1 SSTORE PUSH1 0x3 DUP2 ADD DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA8 SHL SUB NOT AND SWAP1 SSTORE PUSH1 0x4 ADD PUSH2 0x2BF0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x2C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2C62 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2C7C JUMPI PUSH2 0x2C7C PUSH2 0x3327 JUMP JUMPDEST PUSH2 0x2C8F PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND PUSH1 0x20 ADD PUSH2 0x31FB JUMP JUMPDEST DUP2 DUP2 MSTORE DUP5 PUSH1 0x20 DUP4 DUP7 ADD ADD GT ISZERO PUSH2 0x2CA3 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP2 PUSH1 0x20 DUP6 ADD PUSH1 0x20 DUP4 ADD CALLDATACOPY SWAP1 DUP2 ADD PUSH1 0x20 ADD SWAP2 SWAP1 SWAP2 MSTORE SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0xFF DUP2 AND DUP2 EQ PUSH2 0x2C4D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2CDF JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2CE8 DUP3 PUSH2 0x2C36 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D01 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2D0A DUP4 PUSH2 0x2C36 JUMP JUMPDEST SWAP2 POP PUSH2 0x2D18 PUSH1 0x20 DUP5 ADD PUSH2 0x2CBD JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2D33 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2D4A JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 DUP6 ADD SWAP2 POP DUP6 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x2D5D JUMPI DUP4 DUP5 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH2 0x2D70 PUSH2 0x2D6B DUP3 PUSH2 0x322C JUMP JUMPDEST PUSH2 0x31FB JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP6 DUP3 ADD SWAP2 POP DUP6 DUP6 ADD DUP10 DUP8 DUP6 PUSH1 0x5 SHL DUP9 ADD ADD GT ISZERO PUSH2 0x2D8F JUMPI DUP8 DUP9 REVERT JUMPDEST DUP8 JUMPDEST DUP5 DUP2 LT ISZERO PUSH2 0x2DC8 JUMPI DUP2 CALLDATALOAD DUP7 DUP2 GT ISZERO PUSH2 0x2DA7 JUMPI DUP10 DUP11 REVERT JUMPDEST PUSH2 0x2DB5 DUP13 DUP11 DUP4 DUP12 ADD ADD PUSH2 0x2C52 JUMP JUMPDEST DUP6 MSTORE POP SWAP3 DUP8 ADD SWAP3 SWAP1 DUP8 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x2D91 JUMP JUMPDEST POP SWAP1 SWAP10 SWAP9 POP POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2DE8 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD DUP1 ISZERO ISZERO DUP2 EQ PUSH2 0x2CE8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E08 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x5 DUP2 LT PUSH2 0x2CE8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E27 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH1 0x3 DUP2 LT PUSH2 0x2CE8 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2E46 JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2E5C JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x2E68 DUP5 DUP3 DUP6 ADD PUSH2 0x2C52 JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2E82 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP1 DUP3 GT ISZERO PUSH2 0x2E99 JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH2 0x2EA5 DUP7 DUP4 DUP8 ADD PUSH2 0x2C52 JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD CALLDATALOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH2 0x2EBA JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH2 0x2EC7 DUP6 DUP3 DUP7 ADD PUSH2 0x2C52 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EE2 JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2EFA JUMPI DUP1 DUP2 REVERT JUMPDEST POP MLOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F13 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH2 0x2D18 PUSH1 0x20 DUP5 ADD PUSH2 0x2C36 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2F35 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 CALLDATALOAD SWAP2 POP PUSH1 0x20 DUP1 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x2F53 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP5 ADD PUSH1 0x1F DUP2 ADD DUP7 SGT PUSH2 0x2F63 JUMPI DUP3 DUP4 REVERT JUMPDEST DUP1 CALLDATALOAD PUSH2 0x2F71 PUSH2 0x2D6B DUP3 PUSH2 0x322C JUMP JUMPDEST DUP1 DUP3 DUP3 MSTORE DUP5 DUP3 ADD SWAP2 POP DUP5 DUP5 ADD DUP10 DUP7 DUP6 PUSH1 0x5 SHL DUP8 ADD ADD GT ISZERO PUSH2 0x2F90 JUMPI DUP7 DUP8 REVERT JUMPDEST DUP7 SWAP5 POP JUMPDEST DUP4 DUP6 LT ISZERO PUSH2 0x2FB2 JUMPI DUP1 CALLDATALOAD DUP4 MSTORE PUSH1 0x1 SWAP5 SWAP1 SWAP5 ADD SWAP4 SWAP2 DUP6 ADD SWAP2 DUP6 ADD PUSH2 0x2F94 JUMP JUMPDEST POP DUP1 SWAP6 POP POP POP POP POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FD4 JUMPI DUP2 DUP3 REVERT JUMPDEST POP POP DUP1 CALLDATALOAD SWAP3 PUSH1 0x20 SWAP1 SWAP2 ADD CALLDATALOAD SWAP2 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x2FF4 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x2CE8 DUP3 PUSH2 0x2CBD JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x300F JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x3018 DUP4 PUSH2 0x2CBD JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH1 0x20 DUP1 DUP6 ADD SWAP5 POP DUP1 DUP5 ADD DUP4 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x30AB JUMPI DUP2 MLOAD DUP1 MLOAD DUP9 MSTORE DUP4 DUP2 ADD MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 DUP2 AND DUP6 DUP11 ADD MSTORE PUSH1 0x40 DUP1 DUP4 ADD MLOAD DUP3 AND SWAP1 DUP11 ADD MSTORE PUSH1 0x60 DUP1 DUP4 ADD MLOAD SWAP1 SWAP2 AND SWAP1 DUP10 ADD MSTORE PUSH1 0x80 SWAP1 DUP2 ADD MLOAD SWAP1 PUSH1 0x3 DUP3 LT PUSH2 0x3096 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP8 MSTORE PUSH1 0x21 PUSH1 0x4 MSTORE PUSH1 0x24 DUP8 REVERT JUMPDEST DUP9 ADD MSTORE PUSH1 0xA0 SWAP1 SWAP7 ADD SWAP6 SWAP1 DUP3 ADD SWAP1 PUSH1 0x1 ADD PUSH2 0x3039 JUMP JUMPDEST POP SWAP5 SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD DUP1 DUP5 MSTORE PUSH2 0x30CE DUP2 PUSH1 0x20 DUP7 ADD PUSH1 0x20 DUP7 ADD PUSH2 0x328F JUMP JUMPDEST PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x20 ADD SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 MLOAD PUSH2 0x30F4 DUP2 DUP5 PUSH1 0x20 DUP9 ADD PUSH2 0x328F JUMP JUMPDEST SWAP2 SWAP1 SWAP2 ADD SWAP2 DUP3 MSTORE POP PUSH1 0x20 ADD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH1 0x0 PUSH2 0x2CE8 PUSH1 0x20 DUP4 ADD DUP5 PUSH2 0x3026 JUMP JUMPDEST PUSH1 0x40 DUP2 MSTORE PUSH1 0x0 PUSH2 0x312A PUSH1 0x40 DUP4 ADD DUP6 PUSH2 0x30B6 JUMP JUMPDEST DUP3 DUP2 SUB PUSH1 0x20 DUP5 ADD MSTORE PUSH2 0x313C DUP2 DUP6 PUSH2 0x30B6 JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x10 SWAP1 DUP3 ADD MSTORE PUSH16 0x496E76616C69642063617465676F7279 PUSH1 0x80 SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP1 DUP3 MSTORE PUSH1 0x7 SWAP1 DUP3 ADD MSTORE PUSH7 0x1A5B9D985B1A59 PUSH1 0xCA SHL PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x60 ADD SWAP1 JUMP JUMPDEST PUSH1 0x20 DUP2 MSTORE PUSH4 0xFFFFFFFF DUP3 MLOAD AND PUSH1 0x20 DUP3 ADD MSTORE PUSH1 0x20 DUP3 ADD MLOAD PUSH1 0x40 DUP3 ADD MSTORE PUSH1 0x40 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x60 DUP3 ADD MSTORE PUSH1 0x60 DUP3 ADD MLOAD ISZERO ISZERO PUSH1 0x80 DUP3 ADD MSTORE PUSH1 0x0 PUSH1 0x80 DUP4 ADD MLOAD PUSH1 0xC0 PUSH1 0xA0 DUP5 ADD MSTORE PUSH2 0x31DE PUSH1 0xE0 DUP5 ADD DUP3 PUSH2 0x3026 JUMP JUMPDEST SWAP1 POP PUSH1 0xA0 DUP5 ADD MLOAD PUSH1 0x1F NOT DUP5 DUP4 SUB ADD PUSH1 0xC0 DUP6 ADD MSTORE PUSH2 0x313C DUP3 DUP3 PUSH2 0x30B6 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP3 ADD PUSH1 0x1F NOT AND DUP2 ADD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT DUP3 DUP3 LT OR ISZERO PUSH2 0x3224 JUMPI PUSH2 0x3224 PUSH2 0x3327 JUMP JUMPDEST PUSH1 0x40 MSTORE SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3246 JUMPI PUSH2 0x3246 PUSH2 0x3327 JUMP JUMPDEST POP PUSH1 0x5 SHL PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH2 0x326B JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP DIV SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP2 PUSH1 0x0 NOT DIV DUP4 GT DUP3 ISZERO ISZERO AND ISZERO PUSH2 0x328A JUMPI PUSH2 0x328A PUSH2 0x3311 JUMP JUMPDEST POP MUL SWAP1 JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x32AA JUMPI DUP2 DUP2 ADD MLOAD DUP4 DUP3 ADD MSTORE PUSH1 0x20 ADD PUSH2 0x3292 JUMP JUMPDEST DUP4 DUP2 GT ISZERO PUSH2 0xE8D JUMPI POP POP PUSH1 0x0 SWAP2 ADD MSTORE JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x32CF JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x32F0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x0 NOT DUP3 EQ ISZERO PUSH2 0x330A JUMPI PUSH2 0x330A PUSH2 0x3311 JUMP JUMPDEST POP PUSH1 0x1 ADD SWAP1 JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 LT MSTORE 0x26 0x4B DUP1 0xDE BALANCE 0x26 0xC3 0x4D SWAP15 0xD1 CREATE AND PUSH22 0x8FA69133745D6AD06078CFB6F3AA2BC91464736F6C63 NUMBER STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1777:12293:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3200:45;;;;;;;;;;-1:-1:-1;3200:45:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;16254:25:9;;;16242:2;16227:18;3200:45:0;;;;;;;;5061:332;;;;;;;;;;-1:-1:-1;5061:332:0;;;;;:::i;:::-;;:::i;:::-;;10655:226;;;;;;;;;;-1:-1:-1;10655:226:0;;;;;:::i;:::-;;:::i;2155:22::-;;;;;;;;;;;;;;;;2077:27;;;;;;;;;;;;;;;;7110:175;;;;;;;;;;-1:-1:-1;7110:175:0;;;;;:::i;:::-;;:::i;11023:247::-;;;;;;;;;;;;;:::i;5401:199::-;;;;;;;;;;-1:-1:-1;5401:199:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;12243:235::-;;;;;;;;;;-1:-1:-1;12243:235:0;;;;;:::i;:::-;;:::i;1884:103:6:-;;;;;;;;;;;;;:::i;13955:108:0:-;;;;;;;;;;-1:-1:-1;13955:108:0;;;;;:::i;:::-;;:::i;2443:21::-;;;;;;;;;;-1:-1:-1;2443:21:0;;;;;:::i;:::-;;:::i;:::-;;;-1:-1:-1;;;;;8664:32:9;;;8646:51;;8634:2;8619:18;2443:21:0;8601:102:9;7786:172:0;;;;;;;;;;-1:-1:-1;7786:172:0;;;;;:::i;:::-;;:::i;1236:87:6:-;;;;;;;;;;-1:-1:-1;1282:7:6;1309:6;-1:-1:-1;;;;;1309:6:6;1236:87;;13621:85:0;;;;;;;;;;-1:-1:-1;13621:85:0;;;;;:::i;:::-;;:::i;6201:278::-;;;;;;;;;;-1:-1:-1;6201:278:0;;;;;:::i;:::-;;:::i;9028:202::-;;;;;;;;;;-1:-1:-1;9028:202:0;;;;;:::i;:::-;;:::i;2223:17::-;;;;;;;;;;;;;;;;6615:189;;;;;;;;;;-1:-1:-1;6615:189:0;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;8223:530::-;;;;;;;;;;-1:-1:-1;8223:530:0;;;;;:::i;:::-;;:::i;5720:353::-;;;:::i;2477:37::-;;;;;;;;;;-1:-1:-1;2477:37:0;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;16741:4:9;16729:17;;;16711:36;;16699:2;16684:18;2477:37:0;16666:87:9;11615:555:0;;;;;;;;;;-1:-1:-1;11615:555:0;;;;;:::i;:::-;;:::i;12709:856::-;;;;;;:::i;:::-;;:::i;7432:175::-;;;;;;;;;;-1:-1:-1;7432:175:0;;;;;:::i;:::-;;:::i;13780:103::-;;;;;;;;;;-1:-1:-1;13780:103:0;;;;;:::i;:::-;;:::i;2142:201:6:-;;;;;;;;;;-1:-1:-1;2142:201:6;;;;;:::i;:::-;;:::i;1870:27:0:-;;;;;;;;;;;;;;;;1932:20;;;;;;;;;;-1:-1:-1;1932:20:0;;;;-1:-1:-1;;;;;1932:20:0;;;2004:34;;;;;;;;;;;;;;;;5061:332;736:10:2;5167:28:0;:42;;;:28;;:42;;;;:55;;;;;;;;5166:56;5158:84;;;;-1:-1:-1;;;5158:84:0;;10593:2:9;5158:84:0;;;10575:21:9;10632:2;10612:18;;;10605:30;-1:-1:-1;;;10651:18:9;;;10644:45;10706:18;;5158:84:0;;;;;;;;;5252:71;5280:8;736:10:2;5304:8:0;5314;5252:27;:71::i;:::-;5340:5;;-1:-1:-1;;;;;5340:5:0;5333:21;736:10:2;5369:15:0;;5333:52;;-1:-1:-1;;;;;;5333:52:0;;;;;;;-1:-1:-1;;;;;9589:32:9;;;5333:52:0;;;9571:51:9;9638:18;;;9631:34;9544:18;;5333:52:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;5061:332;;:::o;10655:226::-;10736:8;10746;:6;:8::i;:::-;:18;;;4422:16;;4379:9;;4408:2;;4422:21;:203;;4582:3;4563:22;;:9;:16;:22;:50;;;;;4609:4;4589:24;;:9;:16;:24;;4563:50;4555:70;;;;-1:-1:-1;;;4555:70:0;;;;;;;:::i;:::-;4422:203;;;4486:3;4468:21;;:8;:15;:21;:48;;;;;4512:4;4493:23;;:8;:15;:23;;4468:48;4446:106;;;;-1:-1:-1;;;4446:106:0;;;;;;;:::i;:::-;10782:6:::1;10777:97;10798:8;:15;10794:1;:19;10777:97;;;10835:27;10843:5;10850:8;10859:1;10850:11;;;;;;-1:-1:-1::0;;;10850:11:0::1;;;;;;;;;;;;;;;10835:7;:27::i;:::-;10815:3:::0;::::1;::::0;::::1;:::i;:::-;;;;10777:97;;;;10655:226:::0;;;;;;:::o;7110:175::-;1122:13:6;:11;:13::i;:::-;7196:8:0::1;4186:1;4180:3;:7;;;4172:36;;;;-1:-1:-1::0;;;4172:36:0::1;;;;;;;:::i;:::-;7217:60:::2;7237:8;7247:3;7252:4;7267:8;7258:18;;;;;;;;-1:-1:-1::0;;;7258:18:0::2;;;;;;;;;7217:19;:60::i;11023:247::-:0;11085:5;;11078:51;;;-1:-1:-1;;;11078:51:0;;11110:4;11078:51;;;8920:34:9;736:10:2;8970:18:9;;;8963:43;11078:51:0;;11061:14;;-1:-1:-1;;;;;11085:5:0;;11078:23;;8855:18:9;;;;;11078:51:0;;;;;;;;;11085:5;11078:51;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;11061:68;-1:-1:-1;11143:14:0;11140:45;;11166:19;;-1:-1:-1;;;11166:19:0;;;;;;;;;;;11140:45;11203:5;;-1:-1:-1;;;;;11203:5:0;11196:26;11231:4;736:10:2;11196:66:0;;-1:-1:-1;;;;;;11196:66:0;;;;;;;-1:-1:-1;;;;;9275:15:9;;;11196:66:0;;;9257:34:9;9327:15;;9307:18;;;9300:43;9359:18;;;9352:34;;;9192:18;;11196:66:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;11023:247;:::o;5401:199::-;5469:23;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:23:0;5524:1;5513:8;:12;5505:32;;;;-1:-1:-1;;;5505:32:0;;14100:2:9;5505:32:0;;;14082:21:9;14139:1;14119:18;;;14112:29;-1:-1:-1;;;14157:18:9;;;14150:37;14204:18;;5505:32:0;14072:156:9;5505:32:0;5559:8;:28;5577:8;5568:18;;;;;;-1:-1:-1;;;5568:18:0;;;;;;;;;5559:28;;;;;;-1:-1:-1;;;5559:28:0;;;;;;;;;;;;;;;-1:-1:-1;;;5559:28:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5559:28:0;;;-1:-1:-1;;;;;5559:33:0;;;;;;;;;5548:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5559:33;;5548:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;5548:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;5548:44:0;;;;;;;;;;;-1:-1:-1;;;5548:44:0;;;;;;;;;;;;;;;-1:-1:-1;;;5548:44:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5401:199;;;;:::o;12243:235::-;12329:8;12338;:6;:8::i;:::-;:18;;;4422:16;;4379:9;;4408:2;;4422:21;:203;;4582:3;4563:22;;:9;:16;:22;:50;;;;;4609:4;4589:24;;:9;:16;:24;;4563:50;4555:70;;;;-1:-1:-1;;;4555:70:0;;;;;;;:::i;:::-;4422:203;;;4486:3;4468:21;;:8;:15;:21;:48;;;;;4512:4;4493:23;;:8;:15;:23;;4468:48;4446:106;;;;-1:-1:-1;;;4446:106:0;;;;;;;:::i;:::-;12374:6:::1;12369:102;12390:8;:15;12386:1;:19;12369:102;;;12427:32;12440:5;12447:8;12456:1;12447:11;;;;;;-1:-1:-1::0;;;12447:11:0::1;;;;;;;;;;;;;;;12427:12;:32::i;:::-;12407:3:::0;::::1;::::0;::::1;:::i;:::-;;;;12369:102;;1884:103:6::0;1122:13;:11;:13::i;:::-;1949:30:::1;1976:1;1949:18;:30::i;:::-;1884:103::o:0;13955:108:0:-;1122:13:6;:11;:13::i;:::-;14028:15:0::1;:27:::0;13955:108::o;2443:21::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2443:21:0;;-1:-1:-1;2443:21:0;:::o;7786:172::-;1122:13:6;:11;:13::i;:::-;7878:1:0::1;7867:8;:12;;;7859:41;;;;-1:-1:-1::0;;;7859:41:0::1;;;;;;;:::i;:::-;7944:6;7911:10;:30;7931:8;7922:18;;;;;;;;-1:-1:-1::0;;;7922:18:0::1;;;;;;;;;7911:30;;;;;;-1:-1:-1::0;;;7911:30:0::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;7911:30:0::1;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;7911:30:0;:39;-1:-1:-1;;7786:172:0:o;13621:85::-;1122:13:6;:11;:13::i;:::-;13682:5:0::1;:16:::0;13621:85::o;6201:278::-;6250:17;736:10:2;4012:22:0;4025:3;4030;4012:12;:22::i;:::-;4008:56;;4043:21;;-1:-1:-1;;;4043:21:0;;;;;;;;;;;4008:56;6294:14:::1;6311:19;6324:5;6311:12;:19::i;:::-;6294:36;;6360:7;1282::6::0;1309:6;-1:-1:-1;;;;;1309:6:6;;1236:87;6360:7:0::1;-1:-1:-1::0;;;;;6344:23:0::1;736:10:2::0;-1:-1:-1;;;;;6344:23:0::1;;6341:77;;736:10:2::0;-1:-1:-1;;;;;6377:22:0;::::1;;6369:49;;;::::0;-1:-1:-1;;;6369:49:0;;11691:2:9;6369:49:0::1;::::0;::::1;11673:21:9::0;11730:2;11710:18;;;11703:30;-1:-1:-1;;;11749:18:9;;;11742:44;11803:18;;6369:49:0::1;11663:164:9::0;6369:49:0::1;6439:32;6459:4;6465:5;6439:19;:32::i;:::-;4075:1;6201:278:::0;;;:::o;9028:202::-;9101:8;:6;:8::i;:::-;:17;4422:16;;9120:4;;9101:17;;4408:2;;4422:21;:203;;4582:3;4563:22;;:9;:16;:22;:50;;;;;4609:4;4589:24;;:9;:16;:24;;4563:50;4555:70;;;;-1:-1:-1;;;4555:70:0;;;;;;;:::i;:::-;4422:203;;;4486:3;4468:21;;:8;:15;:21;:48;;;;;4512:4;4493:23;;:8;:15;:23;;4468:48;4446:106;;;;-1:-1:-1;;;4446:106:0;;;;;;;:::i;:::-;9142:6:::1;9137:86;9156:4;:11;9152:1;:15;9137:86;;;9189:22;9203:4;9208:1;9203:7;;;;;;-1:-1:-1::0;;;9203:7:0::1;;;;;;;;;;;;;;;9189:13;:22::i;:::-;9169:3:::0;::::1;::::0;::::1;:::i;:::-;;;;9137:86;;;;9028:202:::0;;;;;:::o;6615:189::-;6670:24;6727:1;6715:9;:13;;;6707:43;;;;-1:-1:-1;;;6707:43:0;;14784:2:9;6707:43:0;;;14766:21:9;14823:2;14803:18;;;14796:30;-1:-1:-1;;;14842:18:9;;;14835:47;14899:18;;6707:43:0;14756:167:9;6707:43:0;6769:9;:27;6785:9;6779:16;;;;;;;;-1:-1:-1;;;6779:16:0;;;;;;;;;6769:27;;;;;;-1:-1:-1;;;6769:27:0;;;;;;;;;;;;;;;-1:-1:-1;;;6769:27:0;;;;;;;;;;;;;;;;;;;;6761:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;6761:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6761:35:0;;;;;;;;;;;-1:-1:-1;;;6761:35:0;;;;;;;;;;;;;;;-1:-1:-1;;;6761:35:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6615:189;;;:::o;8223:530::-;8285:18;736:10:2;4012:22:0;4025:3;4030;4012:12;:22::i;:::-;4008:56;;4043:21;;-1:-1:-1;;;4043:21:0;;;;;;;;;;;4008:56;8370:19:::1;:22:::0;;8330:11:::1;::::0;;8370:22:::1;::::0;::::1;:::i;:::-;::::0;;;-1:-1:-1;;8416:19:0::1;::::0;8506:207:::1;::::0;;::::1;::::0;::::1;::::0;;;8446:299:::1;::::0;8480:9:::1;::::0;8506:207;8544:37:::1;8567:5:::0;8416:19;8544:37;;;::::1;:::i;:::-;;;;;;;;;;;;;8534:48;;;;;;8506:207;;;;8610:1;-1:-1:-1::0;;;;;8506:207:0::1;;;;;8632:12;736:10:2::0;;656:98;8632:12:0::1;-1:-1:-1::0;;;;;8506:207:0::1;::::0;;8672:1:::1;8506:207;::::0;::::1;::::0;;;8693:5;8506:207:::1;::::0;::::1;;;;-1:-1:-1::0;;;8506:207:0::1;;;;;;;;;::::0;;8729:5;8446:19:::1;:299::i;:::-;4075:1;;8223:530:::0;;;:::o;5720:353::-;5806:10;5778:27;:39;;;:27;;:39;:27;:39;;:52;;;;;;;;5777:53;5769:84;;;;-1:-1:-1;;;5769:84:0;;11344:2:9;5769:84:0;;;11326:21:9;11383:2;11363:18;;;11356:30;-1:-1:-1;;;11402:18:9;;;11395:48;11460:18;;5769:84:0;11316:168:9;5769:84:0;5864:10;5877:44;5902:4;736:10:2;5877:24:0;:44::i;:::-;5960:10;5932:27;:39;;;:27;;:39;:27;:39;;:52;;:59;;-1:-1:-1;;5932:59:0;;;;;6002:10;:13;;5864:57;;-1:-1:-1;6002:10:0;:13;;;:::i;:::-;;;;;;6031:34;6045:5;6052:12;736:10:2;;656:98;6052:12:0;6031:34;;;16464:25:9;;;-1:-1:-1;;;;;16525:32:9;;;16520:2;16505:18;;16498:60;16437:18;6031:34:0;;;;;;;5720:353;:::o;11615:555::-;11681:18;736:10:2;4012:22:0;4025:3;4030;4012:12;:22::i;:::-;4008:56;;4043:21;;-1:-1:-1;;;4043:21:0;;;;;;;;;;;4008:56;3326:584:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;3326:584:0::1;::::0;::::1;::::0;11731:5;;11738:7;;-1:-1:-1;;3429:319:0::1;::::0;3473:61:::1;3429:319;;;3564:15;3555:5;:24;;;;;;-1:-1:-1::0;;;3555:24:0::1;;;;;;;;;;3552:196;;;3614:9;:16;3624:5;3614:16;;;;;;-1:-1:-1::0;;;3614:16:0::1;;;;;;;;;;;;;;;-1:-1:-1::0;;;3614:16:0::1;;;;;;;;;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;3614:16:0;:23;3604:33;::::1;3596:61;;;::::0;-1:-1:-1;;;3596:61:0;;12034:2:9;3596:61:0::1;::::0;::::1;12016:21:9::0;12073:2;12053:18;;;12046:30;-1:-1:-1;;;12092:18:9;;;12085:45;12147:18;;3596:61:0::1;12006:165:9::0;3552:196:0::1;3702:4;:11:::0;3693:20;::::1;3690:46;;3722:14;;-1:-1:-1::0;;;3722:14:0::1;;;;;;;;;;;3690:46;736:10:2::0;11808:28:0::2;:42:::0;;;:28;::::2;:42:::0;;;;:55:::2;;::::0;::::2;::::0;::::2;;;11800:78;;;::::0;-1:-1:-1;;;11800:78:0;;12378:2:9;11800:78:0::2;::::0;::::2;12360:21:9::0;12417:2;12397:18;;;12390:30;-1:-1:-1;;;12436:18:9;;;12429:41;12487:18;;11800:78:0::2;12350:161:9::0;11800:78:0::2;11889:12;11938:17:::0;;;:9:::2;:17;::::0;;:24;:34;-1:-1:-1;11930:67:0::2;;;::::0;-1:-1:-1;;;11930:67:0;;14435:2:9;11930:67:0::2;::::0;::::2;14417:21:9::0;14474:2;14454:18;;;14447:30;-1:-1:-1;;;14493:18:9;;;14486:50;14553:18;;11930:67:0::2;14407:170:9::0;11930:67:0::2;12008:25;12036:52;12061:9;12072:7;12081:6;12036:24;:52::i;:::-;12008:80;;12099:61;12121:4;12127:5;12134:8;12144:15;12099:21;:61::i;:::-;3901:1;;4075::::1;;;;11615:555:::0;;;;:::o;12709:856::-;12790:14;12769:8;12780:25;;;:9;:25;;;:32;;12895:7;;;;;:24;;;12913:6;12906:3;:13;;12895:24;12887:50;;;;-1:-1:-1;;;12887:50:0;;13079:2:9;12887:50:0;;;13061:21:9;13118:2;13098:18;;;13091:30;-1:-1:-1;;;13137:18:9;;;13130:43;13190:18;;12887:50:0;13051:163:9;12887:50:0;12952:6;12948:501;12968:6;12964:1;:10;12948:501;;;12996:19;13018:9;:13;13028:2;13018:13;;;;;;-1:-1:-1;;;13018:13:0;;;;;;;;;;;;;;;-1:-1:-1;;;13018:13:0;;;;;;;;;;;;;;;;;;;;13032:1;13018:16;;;;;;-1:-1:-1;;;13018:16:0;;;;;;;;;;;;;;;;;;12996:38;;;;;;;;13018:16;;;;;;;;12996:38;;;;;;;;-1:-1:-1;;;;;12996:38:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;12996:38:0;;;;;;;;;;;-1:-1:-1;;;12996:38:0;;;;;;;;;;;;;;;-1:-1:-1;;;12996:38:0;;;;;;;;;;;-1:-1:-1;13052:11:0;;;;12996:38;;-1:-1:-1;;;;;;13052:25:0;;13049:389;;13098:15;;;;:::i;:::-;13141:13;13132:23;;;;:8;:23;;13098:15;;-1:-1:-1;13132:23:0;;-1:-1:-1;736:10:2;-1:-1:-1;;;;;13132:37:0;-1:-1:-1;;;;;13132:37:0;;;;;;;;;;;;:47;;13185:194;;;;;;;;13217:2;:8;;;13185:194;;;;13248:2;:12;;;-1:-1:-1;;;;;13185:194:0;;;;;13283:2;:12;;;-1:-1:-1;;;;;13185:194:0;;;;;13318:2;:11;;;-1:-1:-1;;;;;13185:194:0;;;;;13352:2;:8;;;13185:194;;;;;;-1:-1:-1;;;13185:194:0;;;;;;;;;;;13132:248;;;;;;;;-1:-1:-1;13132:248:0;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13132:248:0;;;-1:-1:-1;;;;;13132:248:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13132:248:0;;;-1:-1:-1;;;13132:248:0;;;;;;;;-1:-1:-1;;;13132:248:0;;;;;;;;;;;;;;;;13406:9;:13;13416:2;13406:13;;;;;;-1:-1:-1;;;13406:13:0;;;;;;;;;;;;;;;-1:-1:-1;;;13406:13:0;;;;;;;;;;;;;;;;;;;;13420:1;13406:16;;;;;;-1:-1:-1;;;13406:16:0;;;;;;;;;;;;;;;;;;;;;13399:23;;;;;;;;-1:-1:-1;;;;;;13399:23:0;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;13399:23:0;;;13049:389;-1:-1:-1;12976:3:0;;;;:::i;:::-;;;;12948:501;;;;13459:13;13483:12;13475:5;;:20;;;;:::i;:::-;13459:36;;13527:8;13514:9;:21;;13506:40;;;;-1:-1:-1;;;13506:40:0;;13766:2:9;13506:40:0;;;13748:21:9;13805:1;13785:18;;;13778:29;-1:-1:-1;;;13823:18:9;;;13816:36;13869:18;;13506:40:0;13738:155:9;7432:175:0;1122:13:6;:11;:13::i;:::-;7518:8:0::1;4186:1;4180:3;:7;;;4172:36;;;;-1:-1:-1::0;;;4172:36:0::1;;;;;;;:::i;:::-;7538:61:::2;7558:8;7568:3;7573:5;7589:8;7580:18;;;;;;;;-1:-1:-1::0;;;7580:18:0::2;;;;;;;;13780:103:::0;1122:13:6;:11;:13::i;:::-;13848:15:0::1;:27:::0;13780:103::o;2142:201:6:-;1122:13;:11;:13::i;:::-;-1:-1:-1;;;;;2231:22:6;::::1;2223:73;;;::::0;-1:-1:-1;;;2223:73:6;;10937:2:9;2223:73:6::1;::::0;::::1;10919:21:9::0;10976:2;10956:18;;;10949:30;11015:34;10995:18;;;10988:62;-1:-1:-1;;;11066:18:9;;;11059:36;11112:19;;2223:73:6::1;10909:228:9::0;2223:73:6::1;2307:28;2326:8;2307:18;:28::i;:::-;2142:201:::0;:::o;266:551:8:-;491:18;546:8;;;;;;;;;;;-1:-1:-1;;;;;546:22:8;;;;;;;;;:47;;-1:-1:-1;;546:47:8;4494:15;546:47;;;;;-1:-1:-1;602:33:8;;:37;;;648:31;;:39;;696:42;-1:-1:-1;;696:42:8;;;;;;781:30;;;792:8;;802;;781:30;;:::i;:::-;;;;;;;;;;;;;747:4;:8;752:2;747:8;;;;;;-1:-1:-1;;;747:8:8;;;;;;;;;;;;;;;-1:-1:-1;;;747:8:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;747:8:8;;;-1:-1:-1;;;;;747:22:8;;;;;;;:64;;;;:31;;;;;:64;;;;;;:::i;8761:216:0:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;8857:13:0;;-1:-1:-1;8857:13:0;;;;;;8909:15;;;;;;;;;-1:-1:-1;;;8909:15:0;;;;;;;;;;;;;;;;;;;-1:-1:-1;8943:26:0;;;;;;;;;;;;;;;;-1:-1:-1;8943:26:0;8761:216;-1:-1:-1;8761:216:0:o;9940:640::-;10003:17;736:10:2;4012:22:0;4025:3;4030;4012:12;:22::i;:::-;4008:56;;4043:21;;-1:-1:-1;;;4043:21:0;;;;;;;;;;;4008:56;3326:584:::1;::::0;;;;::::1;::::0;;;::::1;::::0;;-1:-1:-1;;;3326:584:0::1;::::0;::::1;::::0;10052:5;;10059:7;;10068:15:::1;::::0;3487:4:::1;3492:5;3487:11;;;;;;-1:-1:-1::0;;;3487:11:0::1;;;;;;;;;;::::0;;;::::1;::::0;;;::::1;::::0;;::::1;;:22:::0;3476:33;::::1;3473:61;;3518:16;;-1:-1:-1::0;;;3518:16:0::1;;;;;;;;;;;3473:61;10121:25:::2;10149:44;10172:4;10178:5;10185:7;10149:22;:44::i;:::-;10121:72;;10204:56;10224:9;10235:8;10245:14;10204:19;:56::i;:::-;10285:15;::::0;10271:11:::2;::::0;;10359:32:::2;10375:7;10285:15:::0;10359::::2;:32::i;:::-;10409:5;::::0;10424:18:::2;::::0;::::2;::::0;10402:52:::2;::::0;-1:-1:-1;;;10402:52:0;;-1:-1:-1;;;;;9589:32:9;;;10402:52:0::2;::::0;::::2;9571:51:9::0;9638:18;;;9631:34;;;10313:78:0;;-1:-1:-1;10313:78:0;;-1:-1:-1;10313:78:0;;-1:-1:-1;10409:5:0::2;::::0;10402:21:::2;::::0;9544:18:9;;10402:52:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;10472:5:0::2;::::0;10487:18:::2;::::0;;::::2;::::0;10465:52;;-1:-1:-1;;;10465:52:0;;-1:-1:-1;;;;;9589:32:9;;;10465:52:0::2;::::0;::::2;9571:51:9::0;9638:18;;;9631:34;;;10472:5:0;::::2;::::0;10465:21:::2;::::0;9544:18:9;;10465:52:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;10535:5:0::2;::::0;10528:42:::2;::::0;-1:-1:-1;;;10528:42:0;;10558:4:::2;10528:42;::::0;::::2;9571:51:9::0;9638:18;;;9631:34;;;-1:-1:-1;;;;;10535:5:0;;::::2;::::0;10528:21:::2;::::0;9544:18:9;;10528:42:0::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3901:1;;;;;4075::::1;;;;9940:640:::0;;;;:::o;1401:132:6:-;1282:7;1309:6;-1:-1:-1;;;;;1309:6:6;736:10:2;1465:23:6;1457:68;;;;-1:-1:-1;;;1457:68:6;;12718:2:9;1457:68:6;;;12700:21:9;;;12737:18;;;12730:30;12796:34;12776:18;;;12769:62;12848:18;;1457:68:6;12690:182:9;2521:443:8;2676:15;2694:31;2710:4;2716:3;2721;2694:15;:31::i;:::-;2676:49;;2735:5;2732:227;;;2754:10;2751:47;;;2773:25;;-1:-1:-1;;;2773:25:8;;;;;;;;;;;2751:47;2833:4;2807;:9;2812:3;2807:9;;;;;;-1:-1:-1;;;2807:9:8;;;;;;;;;;;;;;;-1:-1:-1;;;2807:9:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2807:9:8;;;-1:-1:-1;;;;;2807:14:8;;;;;;;;;:23;;:30;;-1:-1:-1;;2807:30:8;;;;;;;;;;2732:227;;;2864:10;2860:51;;2883:28;;-1:-1:-1;;;2883:28:8;;;;;;;;;;;2860:51;2946:5;2920:4;:9;2925:3;2920:9;;;;;;-1:-1:-1;;;2920:9:8;;;;;;;;;;;;;;;-1:-1:-1;;;2920:9:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2920:9:8;;;-1:-1:-1;;;;;2920:14:8;;;;;;;;;:23;;:31;;;;;-1:-1:-1;;2920:31:8;;;;;;;;;2521:443;;;;;:::o;2503:191:6:-;2577:16;2596:6;;-1:-1:-1;;;;;2613:17:6;;;-1:-1:-1;;;;;;2613:17:6;;;;;;2646:40;;2596:6;;;;;;;2646:40;;2577:16;2646:40;2503:191;;:::o;9402:130:0:-;9473:4;9497:8;:13;9506:3;9497:13;;;;;;-1:-1:-1;;;9497:13:0;;;;;;;;;;;;;;;-1:-1:-1;;;9497:13:0;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9497:13:0;;;-1:-1:-1;;;;;9497:18:0;;;;;;;;;:27;;;;;;-1:-1:-1;9402:130:0;;;;:::o;6856:107::-;6911:7;6938:4;6943:5;6938:11;;;;;;-1:-1:-1;;;6938:11:0;;;;;;;;;;;;;;;;;:17;:11;;;;;:17;;-1:-1:-1;;;;;6938:17:0;;6856:107;-1:-1:-1;;6856:107:0:o;3684:409:8:-;3809:11;;3763:8;;;;3809:4;3827:5;3822:11;;;;;-1:-1:-1;;;3822:11:8;;;;;;;;;;;;;;;;;;;3762:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;3762:72:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3762:72:8;;;;;;;;;;;-1:-1:-1;;;3762:72:8;;;;;;;;;;;;;;;-1:-1:-1;;;3762:72:8;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3762:72:8;;;-1:-1:-1;3762:72:8;;;;;;-1:-1:-1;;;;;3762:72:8;;;;;;3844:12;;:19;3762:72;;-1:-1:-1;3762:72:8;-1:-1:-1;3841:53:8;;3877:17;;-1:-1:-1;;;3877:17:8;;;;;;;;;;;3841:53;3905:6;3901:161;3921:3;3917:1;:7;3901:161;;;3967:21;3943:12;;:15;;3956:1;;3943:15;;;;-1:-1:-1;;;3943:15:8;;;;;;;;;;;;;;;:21;;;:45;;;;;;-1:-1:-1;;;3943:45:8;;;;;;;;;;3940:115;;;4008:37;;-1:-1:-1;;;4008:37:8;;;;;;;;;;;3940:115;3926:3;;;;:::i;:::-;;;;3901:161;;;;4076:4;4081:5;4076:11;;;;;;-1:-1:-1;;;4076:11:8;;;;;;;;;;;;;;;;;;;;;;4069:18;4076:11;;4069:18;:::i;:::-;-1:-1:-1;4069:18:8;;;;-1:-1:-1;;;;;;4069:18:8;;;-1:-1:-1;;;;3684:409:8:o;939:344::-;1105:4;:11;1110:5;1105:11;;;;;;-1:-1:-1;;;1105:11:8;;;;;;;;;;;;;;;-1:-1:-1;;;1105:11:8;;;;;;;;;;;;;;;;;;;;1122:148;;;;;;;;1149:7;:13;;;1122:148;;;;1173:7;:17;;;-1:-1:-1;;;;;1122:148:8;;;;;1201:7;:17;;;-1:-1:-1;;;;;1122:148:8;;;;;1229:7;:16;;;-1:-1:-1;;;;;1122:148:8;;;;;1256:5;1122:148;;;;;;-1:-1:-1;;;1122:148:8;;;;;;;;;;;1105:172;;;;;;;;-1:-1:-1;1105:172:8;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1105:172:8;;;-1:-1:-1;;;;;1105:172:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1105:172:8;;;-1:-1:-1;;;1105:172:8;;;;;;;;-1:-1:-1;;;1105:172:8;;;;;;;;;;;;;;;;939:344;;;:::o;3322:181::-;3436:11;;3454;;;;;;3409:10;3454:11;;;3492:5;;3436:4;;:11;;3472;;;;-1:-1:-1;;;3472:11:8;;;;;;;;;;;;;;;;;;;:17;;;:25;;;;;-1:-1:-1;;;;;3472:25:8;;;;;-1:-1:-1;;;;;3472:25:8;;;;;;3322:181;;;;:::o;1717:240::-;1849:30;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1849:30:8;1897:4;:11;1902:5;1897:11;;;;;;-1:-1:-1;;;1897:11:8;;;;;;;;;;;;;;;-1:-1:-1;;;1897:11:8;;;;;;;;;;;;;;;;;;;;1909:7;1897:20;;;;;;-1:-1:-1;;;1897:20:8;;;;;;;;;;;;;;;;;;1888:29;;;;;;;;1897:20;;;;;;;;1888:29;;;;;;;;-1:-1:-1;;;;;1888:29:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1888:29:8;;;;;;;;;;;-1:-1:-1;;;1888:29:8;;;;;;;;;;;;;;;-1:-1:-1;;;1888:29:8;;;;;;;;;;;-1:-1:-1;1888:29:8;-1:-1:-1;1931:4:8;:11;1936:5;1931:11;;;;;;-1:-1:-1;;;1931:11:8;;;;;;;;;;;;;;;-1:-1:-1;;;1931:11:8;;;;;;;;;;;;;;;;;;;;1943:7;1931:20;;;;;;-1:-1:-1;;;1931:20:8;;;;;;;;;;;;;;;;;;;;;1924:27;;;;;;;;-1:-1:-1;;;;;;1924:27:8;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1924:27:8;;;1717:240;;-1:-1:-1;;;1717:240:8:o;1319:303::-;1452:4;1457:5;1452:11;;;;;;-1:-1:-1;;;1452:11:8;;;;;;;;;;;;;;;;;;;:15;;1473:136;;;;;;;;1498:7;:13;;;1473:136;;;;1520:7;:17;;;-1:-1:-1;;;;;1473:136:8;;;;;1546:7;:17;;;-1:-1:-1;;;;;1473:136:8;;;;;1572:7;:16;;;-1:-1:-1;;;;;1473:136:8;;;;;1597:5;1473:136;;;;;;-1:-1:-1;;;1473:136:8;;;;;;;;;;;1452:164;;;;;;;;-1:-1:-1;1452:164:8;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1452:164:8;;;-1:-1:-1;;;;;1452:164:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;1452:164:8;;;-1:-1:-1;;;1452:164:8;;;;;;;;-1:-1:-1;;;1452:164:8;;;;;;;;;;;;;;;;1319:303;;;;:::o;2041:212::-;2137:30;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2137:30:8;2185:4;2190:5;2185:11;;;;;;-1:-1:-1;;;2185:11:8;;;;;;;;;;;;;;;;;;;:15;;2201:7;2185:24;;;;;;-1:-1:-1;;;2185:24:8;;;;;;;;;;;;;;;;;;2176:33;;;;;;;;2185:24;;;;;;;;2176:33;;;;;;;;-1:-1:-1;;;;;2176:33:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;2176:33:8;;;;;;;;;;;-1:-1:-1;;;2176:33:8;;;;;;;;;;;;;;;-1:-1:-1;;;2176:33:8;;;;;;;;;;;;;;;2223:4;2228:5;2223:11;;;;;;-1:-1:-1;;;2223:11:8;;;;;;;;;;;;;;;;;;;:15;;2239:7;2223:24;;;;;;-1:-1:-1;;;2223:24:8;;;;;;;;4099:327;4193:14;4256:28;;;;;;;;;;;4193:14;;;;4297:3;;4256:37;;4287:6;;4256:28;;:37;:::i;:::-;4255:45;;;;:::i;:::-;4325:22;4320:28;;;;;;;;;;;;4243:57;;-1:-1:-1;4361:3:8;;4320:37;;4351:6;;4320:28;;:37;:::i;:::-;4319:45;;;;:::i;:::-;4384:17;4379:23;;;;;;;;;;;;4307:57;;-1:-1:-1;4415:3:8;;4379:32;;4405:6;;4379:23;;:32;:::i;:::-;4378:40;;;;:::i;:::-;4371:47;;4099:327;;;;;:::o;2970:203::-;3124:4;3144;:9;3149:3;3144:9;;;;;;-1:-1:-1;;;3144:9:8;;;;;;;;;;;;;;;-1:-1:-1;;;3144:9:8;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3144:9:8;;;-1:-1:-1;;;;;3144:14:8;;;;;;;;;:23;;;;;;-1:-1:-1;2970:203:8;;;;;:::o;-1:-1:-1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:173:9;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:551::-;235:5;288:3;281:4;273:6;269:17;265:27;255:2;;310:5;303;296:20;255:2;350:6;337:20;376:18;372:2;369:26;366:2;;;398:18;;:::i;:::-;442:55;485:2;466:13;;-1:-1:-1;;462:27:9;491:4;458:38;442:55;:::i;:::-;522:2;513:7;506:19;568:3;561:4;556:2;548:6;544:15;540:26;537:35;534:2;;;589:5;582;575:20;534:2;658;651:4;643:6;639:17;632:4;623:7;619:18;606:55;681:16;;;699:4;677:27;670:42;;;;685:7;245:498;-1:-1:-1;;245:498:9:o;748:156::-;814:20;;874:4;863:16;;853:27;;843:2;;894:1;891;884:12;909:196;968:6;1021:2;1009:9;1000:7;996:23;992:32;989:2;;;1042:6;1034;1027:22;989:2;1070:29;1089:9;1070:29;:::i;:::-;1060:39;979:126;-1:-1:-1;;;979:126:9:o;1110:266::-;1176:6;1184;1237:2;1225:9;1216:7;1212:23;1208:32;1205:2;;;1258:6;1250;1243:22;1205:2;1286:29;1305:9;1286:29;:::i;:::-;1276:39;;1334:36;1366:2;1355:9;1351:18;1334:36;:::i;:::-;1324:46;;1195:181;;;;;:::o;1381:1128::-;1475:6;1506:2;1549;1537:9;1528:7;1524:23;1520:32;1517:2;;;1570:6;1562;1555:22;1517:2;1615:9;1602:23;1644:18;1685:2;1677:6;1674:14;1671:2;;;1706:6;1698;1691:22;1671:2;1749:6;1738:9;1734:22;1724:32;;1794:7;1787:4;1783:2;1779:13;1775:27;1765:2;;1821:6;1813;1806:22;1765:2;1862;1849:16;1885:59;1901:42;1940:2;1901:42;:::i;:::-;1885:59;:::i;:::-;1966:3;1990:2;1985:3;1978:15;2018:2;2013:3;2009:12;2002:19;;2049:2;2045;2041:11;2097:7;2092:2;2086;2083:1;2079:10;2075:2;2071:19;2067:28;2064:41;2061:2;;;2123:6;2115;2108:22;2061:2;2150:6;2165:314;2179:2;2176:1;2173:9;2165:314;;;2256:3;2243:17;2292:2;2279:11;2276:19;2273:2;;;2313:6;2305;2298:22;2273:2;2347:57;2396:7;2391:2;2377:11;2373:2;2369:20;2365:29;2347:57;:::i;:::-;2335:70;;-1:-1:-1;2425:12:9;;;;2457;;;;2197:1;2190:9;2165:314;;;-1:-1:-1;2498:5:9;;1486:1023;-1:-1:-1;;;;;;;;;1486:1023:9:o;2514:297::-;2581:6;2634:2;2622:9;2613:7;2609:23;2605:32;2602:2;;;2655:6;2647;2640:22;2602:2;2692:9;2686:16;2745:5;2738:13;2731:21;2724:5;2721:32;2711:2;;2772:6;2764;2757:22;2816:289;2888:6;2941:2;2929:9;2920:7;2916:23;2912:32;2909:2;;;2962:6;2954;2947:22;2909:2;3006:9;2993:23;3045:1;3038:5;3035:12;3025:2;;3066:6;3058;3051:22;3110:286;3179:6;3232:2;3220:9;3211:7;3207:23;3203:32;3200:2;;;3253:6;3245;3238:22;3200:2;3297:9;3284:23;3336:1;3329:5;3326:12;3316:2;;3357:6;3349;3342:22;3401:342;3470:6;3523:2;3511:9;3502:7;3498:23;3494:32;3491:2;;;3544:6;3536;3529:22;3491:2;3589:9;3576:23;3622:18;3614:6;3611:30;3608:2;;;3659:6;3651;3644:22;3608:2;3687:50;3729:7;3720:6;3709:9;3705:22;3687:50;:::i;:::-;3677:60;3481:262;-1:-1:-1;;;;3481:262:9:o;3748:573::-;3836:6;3844;3897:2;3885:9;3876:7;3872:23;3868:32;3865:2;;;3918:6;3910;3903:22;3865:2;3963:9;3950:23;3992:18;4033:2;4025:6;4022:14;4019:2;;;4054:6;4046;4039:22;4019:2;4082:50;4124:7;4115:6;4104:9;4100:22;4082:50;:::i;:::-;4072:60;;4185:2;4174:9;4170:18;4157:32;4141:48;;4214:2;4204:8;4201:16;4198:2;;;4235:6;4227;4220:22;4198:2;;4263:52;4307:7;4296:8;4285:9;4281:24;4263:52;:::i;:::-;4253:62;;;3855:466;;;;;:::o;4326:190::-;4385:6;4438:2;4426:9;4417:7;4413:23;4409:32;4406:2;;;4459:6;4451;4444:22;4406:2;-1:-1:-1;4487:23:9;;4396:120;-1:-1:-1;4396:120:9:o;4521:194::-;4591:6;4644:2;4632:9;4623:7;4619:23;4615:32;4612:2;;;4665:6;4657;4650:22;4612:2;-1:-1:-1;4693:16:9;;4602:113;-1:-1:-1;4602:113:9:o;4720:264::-;4788:6;4796;4849:2;4837:9;4828:7;4824:23;4820:32;4817:2;;;4870:6;4862;4855:22;4817:2;4911:9;4898:23;4888:33;;4940:38;4974:2;4963:9;4959:18;4940:38;:::i;4989:1014::-;5082:6;5090;5143:2;5131:9;5122:7;5118:23;5114:32;5111:2;;;5164:6;5156;5149:22;5111:2;5205:9;5192:23;5182:33;;5234:2;5287;5276:9;5272:18;5259:32;5314:18;5306:6;5303:30;5300:2;;;5351:6;5343;5336:22;5300:2;5379:22;;5432:4;5424:13;;5420:27;-1:-1:-1;5410:2:9;;5466:6;5458;5451:22;5410:2;5507;5494:16;5530:59;5546:42;5585:2;5546:42;:::i;5530:59::-;5611:3;5635:2;5630:3;5623:15;5663:2;5658:3;5654:12;5647:19;;5694:2;5690;5686:11;5742:7;5737:2;5731;5728:1;5724:10;5720:2;5716:19;5712:28;5709:41;5706:2;;;5768:6;5760;5753:22;5706:2;5795:6;5786:15;;5810:163;5824:2;5821:1;5818:9;5810:163;;;5881:17;;5869:30;;5842:1;5835:9;;;;;5919:12;;;;5951;;5810:163;;;5814:3;5992:5;5982:15;;;;;;;5101:902;;;;;:::o;6008:258::-;6076:6;6084;6137:2;6125:9;6116:7;6112:23;6108:32;6105:2;;;6158:6;6150;6143:22;6105:2;-1:-1:-1;;6186:23:9;;;6256:2;6241:18;;;6228:32;;-1:-1:-1;6095:171:9:o;6271:192::-;6328:6;6381:2;6369:9;6360:7;6356:23;6352:32;6349:2;;;6402:6;6394;6387:22;6349:2;6430:27;6447:9;6430:27;:::i;6468:260::-;6534:6;6542;6595:2;6583:9;6574:7;6570:23;6566:32;6563:2;;;6616:6;6608;6601:22;6563:2;6644:27;6661:9;6644:27;:::i;:::-;6634:37;6718:2;6703:18;;;;6690:32;;-1:-1:-1;;;6553:175:9:o;6733:1125::-;6795:3;6833:5;6827:12;6860:6;6855:3;6848:19;6886:4;6915:2;6910:3;6906:12;6899:19;;6952:2;6945:5;6941:14;6973:3;6985:848;6999:6;6996:1;6993:13;6985:848;;;7058:13;;7096:9;;7084:22;;7145:11;;;7139:18;-1:-1:-1;;;;;7233:21:9;;;7219:12;;;7212:43;7278:4;7326:11;;;7320:18;7316:27;;7302:12;;;7295:49;7367:4;7415:11;;;7409:18;7405:27;;;7391:12;;;7384:49;7456:4;7501:11;;;7495:18;;7555:1;7536:21;;7526:2;;-1:-1:-1;;;7589:33:9;;7649:4;7646:1;7639:15;7683:4;7596:3;7671:17;7526:2;7722:12;;7715:36;7780:4;7771:14;;;;7808:15;;;;7021:1;7014:9;6985:848;;;-1:-1:-1;7849:3:9;;6803:1055;-1:-1:-1;;;;;6803:1055:9:o;7863:257::-;7904:3;7942:5;7936:12;7969:6;7964:3;7957:19;7985:63;8041:6;8034:4;8029:3;8025:14;8018:4;8011:5;8007:16;7985:63;:::i;:::-;8102:2;8081:15;-1:-1:-1;;8077:29:9;8068:39;;;;8109:4;8064:50;;7912:208;-1:-1:-1;;7912:208:9:o;8125:370::-;8282:3;8320:6;8314:13;8336:53;8382:6;8377:3;8370:4;8362:6;8358:17;8336:53;:::i;:::-;8411:16;;;;8436:21;;;-1:-1:-1;8484:4:9;8473:16;;8290:205;-1:-1:-1;8290:205:9:o;9676:324::-;9909:2;9898:9;9891:21;9872:4;9929:65;9990:2;9979:9;9975:18;9967:6;9929:65;:::i;10005:381::-;10202:2;10191:9;10184:21;10165:4;10228:44;10268:2;10257:9;10253:18;10245:6;10228:44;:::i;:::-;10320:9;10312:6;10308:22;10303:2;10292:9;10288:18;10281:50;10348:32;10373:6;10365;10348:32;:::i;:::-;10340:40;10174:212;-1:-1:-1;;;;;10174:212:9:o;13219:340::-;13421:2;13403:21;;;13460:2;13440:18;;;13433:30;-1:-1:-1;;;13494:2:9;13479:18;;13472:46;13550:2;13535:18;;13393:166::o;14928:330::-;15130:2;15112:21;;;15169:1;15149:18;;;15142:29;-1:-1:-1;;;15202:2:9;15187:18;;15180:37;15249:2;15234:18;;15102:156::o;15263:840::-;15442:2;15431:9;15424:21;15500:10;15491:6;15485:13;15481:30;15476:2;15465:9;15461:18;15454:58;15566:2;15558:6;15554:15;15548:22;15543:2;15532:9;15528:18;15521:50;15639:2;15631:6;15627:15;15621:22;15614:30;15607:38;15602:2;15591:9;15587:18;15580:66;15715:2;15707:6;15703:15;15697:22;15690:30;15683:38;15677:3;15666:9;15662:19;15655:67;15405:4;15769:3;15761:6;15757:16;15751:23;15811:4;15805:3;15794:9;15790:19;15783:33;15839:72;15906:3;15895:9;15891:19;15877:12;15839:72;:::i;:::-;15825:86;;15960:3;15952:6;15948:16;15942:23;16035:2;16031:7;16019:9;16011:6;16007:22;16003:36;15996:4;15985:9;15981:20;15974:66;16057:40;16090:6;16074:14;16057:40;:::i;16758:275::-;16829:2;16823:9;16894:2;16875:13;;-1:-1:-1;;16871:27:9;16859:40;;16929:18;16914:34;;16950:22;;;16911:62;16908:2;;;16976:18;;:::i;:::-;17012:2;17005:22;16803:230;;-1:-1:-1;16803:230:9:o;17038:182::-;17097:4;17130:18;17122:6;17119:30;17116:2;;;17152:18;;:::i;:::-;-1:-1:-1;17197:1:9;17193:14;17209:4;17189:25;;17106:114::o;17225:217::-;17265:1;17291;17281:2;;-1:-1:-1;;;17316:31:9;;17370:4;17367:1;17360:15;17398:4;17323:1;17388:15;17281:2;-1:-1:-1;17427:9:9;;17271:171::o;17447:168::-;17487:7;17553:1;17549;17545:6;17541:14;17538:1;17535:21;17530:1;17523:9;17516:17;17512:45;17509:2;;;17560:18;;:::i;:::-;-1:-1:-1;17600:9:9;;17499:116::o;17620:258::-;17692:1;17702:113;17716:6;17713:1;17710:13;17702:113;;;17792:11;;;17786:18;17773:11;;;17766:39;17738:2;17731:10;17702:113;;;17833:6;17830:1;17827:13;17824:2;;;-1:-1:-1;;17868:1:9;17850:16;;17843:27;17673:205::o;17883:380::-;17962:1;17958:12;;;;18005;;;18026:2;;18080:4;18072:6;18068:17;18058:27;;18026:2;18133;18125:6;18122:14;18102:18;18099:38;18096:2;;;18179:10;18174:3;18170:20;18167:1;18160:31;18214:4;18211:1;18204:15;18242:4;18239:1;18232:15;18096:2;;17938:325;;;:::o;18268:135::-;18307:3;-1:-1:-1;;18328:17:9;;18325:2;;;18348:18;;:::i;:::-;-1:-1:-1;18395:1:9;18384:13;;18315:88::o;18408:127::-;18469:10;18464:3;18460:20;18457:1;18450:31;18500:4;18497:1;18490:15;18524:4;18521:1;18514:15;18540:127;18601:10;18596:3;18592:20;18589:1;18582:31;18632:4;18629:1;18622:15;18656:4;18653:1;18646:15"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "2634200",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "binCounter()": "1030",
                "bins(uint256)": "2079",
                "blacklistUser(address,uint8)": "infinite",
                "buyRecycled(uint256)": "infinite",
                "collectMultipleWaste(uint256,uint256[])": "infinite",
                "collectWaste(uint256,uint256)": "202335",
                "collectorReward()": "1052",
                "formula(uint8)": "1292",
                "garbages(uint8)": "infinite",
                "generateMultipleWaste(string[])": "infinite",
                "generateWaste(string)": "infinite",
                "getProfile(uint256,address)": "infinite",
                "newSignUpReward()": "1050",
                "owner()": "1120",
                "price()": "1074",
                "recycleMultiple(uint256,uint256[])": "infinite",
                "registerBin()": "86152",
                "removeBin(uint256)": "infinite",
                "renounceOwnership()": "infinite",
                "setCollectorUpReward(uint256)": "21200",
                "setFee(uint8,uint256)": "21449",
                "setPrice(uint256)": "21199",
                "setSignUpReward(uint256)": "21199",
                "signUpAsWasteCollector(string,string)": "infinite",
                "signUpFees(uint8)": "1202",
                "token()": "1125",
                "totalWasteGenerated()": "1094",
                "transferOwnership(address)": "23677",
                "whitelistuser(address,uint8)": "infinite",
                "withdraw()": "infinite"
              },
              "internal": {
                "_empty()": "infinite",
                "_getApproval(enum Common.Category,address)": "1080",
                "_getBinOwner(uint256)": "1752",
                "recycle(uint256,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "binCounter()": "1f2a4a3f",
              "bins(uint256)": "885c7b38",
              "blacklistUser(address,uint8)": "e47c294d",
              "buyRecycled(uint256)": "c437a2f0",
              "collectMultipleWaste(uint256,uint256[])": "41311bc3",
              "collectWaste(uint256,uint256)": "c3864cce",
              "collectorReward()": "235eb9f5",
              "formula(uint8)": "c2f0c279",
              "garbages(uint8)": "a741c0df",
              "generateMultipleWaste(string[])": "955ef11a",
              "generateWaste(string)": "b7588280",
              "getProfile(uint256,address)": "3fd97927",
              "newSignUpReward()": "f9404506",
              "owner()": "8da5cb5b",
              "price()": "a035b1fe",
              "recycleMultiple(uint256,uint256[])": "0bdd7063",
              "registerBin()": "bf5e6b6d",
              "removeBin(uint256)": "93051d95",
              "renounceOwnership()": "715018a6",
              "setCollectorUpReward(uint256)": "72938a14",
              "setFee(uint8,uint256)": "8c6aa3f5",
              "setPrice(uint256)": "91b7f5ed",
              "setSignUpReward(uint256)": "f2d03e15",
              "signUpAsWasteCollector(string,string)": "0b776241",
              "signUpFees(uint8)": "0095db2d",
              "token()": "fc0c546a",
              "totalWasteGenerated()": "ffc2105c",
              "transferOwnership(address)": "f2fde38b",
              "whitelistuser(address,uint8)": "31b59ed7",
              "withdraw()": "3ccfd60b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CannotDeleteBinInEngagedMode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyBin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBinID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWasteId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxWasteTransportExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"binId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"RegisteredBin\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"binCounter\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"bins\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"}],\"name\":\"blacklistUser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"volume\",\"type\":\"uint256\"}],\"name\":\"buyRecycled\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"binId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"wasteIds\",\"type\":\"uint256[]\"}],\"name\":\"collectMultipleWaste\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"binId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"wasteId\",\"type\":\"uint256\"}],\"name\":\"collectWaste\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"collectorReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Common.Share\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"formula\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"_category\",\"type\":\"uint8\"}],\"name\":\"garbages\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"generator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recycler\",\"type\":\"address\"},{\"internalType\":\"enum Common.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct Common.WasteData[]\",\"name\":\"_data\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string[]\",\"name\":\"data\",\"type\":\"string[]\"}],\"name\":\"generateMultipleWaste\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_data\",\"type\":\"string\"}],\"name\":\"generateWaste\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"category\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"}],\"name\":\"getProfile\",\"outputs\":[{\"components\":[{\"internalType\":\"uint32\",\"name\":\"transactionTime\",\"type\":\"uint32\"},{\"internalType\":\"uint256\",\"name\":\"wasteCount\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"approval\",\"type\":\"bool\"},{\"internalType\":\"bool\",\"name\":\"isRegistered\",\"type\":\"bool\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"value\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"collector\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"generator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recycler\",\"type\":\"address\"},{\"internalType\":\"enum Common.State\",\"name\":\"state\",\"type\":\"uint8\"}],\"internalType\":\"struct Common.WasteData[]\",\"name\":\"purchased\",\"type\":\"tuple[]\"},{\"internalType\":\"bytes\",\"name\":\"metadata\",\"type\":\"bytes\"}],\"internalType\":\"struct Common.Profile\",\"name\":\"_profile\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"newSignUpReward\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"price\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"binId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"wasteIds\",\"type\":\"uint256[]\"}],\"name\":\"recycleMultiple\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"registerBin\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"binId\",\"type\":\"uint256\"}],\"name\":\"removeBin\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newReward\",\"type\":\"uint256\"}],\"name\":\"setCollectorUpReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"newFee\",\"type\":\"uint256\"}],\"name\":\"setFee\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPrice\",\"type\":\"uint256\"}],\"name\":\"setPrice\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newReward\",\"type\":\"uint256\"}],\"name\":\"setSignUpReward\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"location\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_address\",\"type\":\"string\"}],\"name\":\"signUpAsWasteCollector\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"enum Common.Category\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"signUpFees\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalWasteGenerated\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"who\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"category\",\"type\":\"uint8\"}],\"name\":\"whitelistuser\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Bobeu: https://github.com/bobeu A smart contract that will tokenize the disposal and collection of waste.  Users get a token when they dispose of their waste in a waste bin, collectors  get token for collecting waste and taking them to the waste recyclers  The process of tokenization happens when the waste drops in the waste bin. Every waste bin has a unique wallet ID which will receive the token at the end of evacuation. The owners of the waste bin will have a DAO.  Wallet  Token (iBoola token) which would be paired against either Avalanche, Celo or Polygon  New users get 10 $IBT after sign up  Community of waste bins will have a DAO  Waste generators get 10% collectors get 65 while the iBoola team gets 25%  Decimals: use standard 18 decimals  Mintable: not mintable Ownership privilege :  30% locked for 5 years, 20% for dev team 45% for  initial circulation,  5% for presale  PSEUDO ====== Parties: o Waste generators. o Collectors. o Recyclers. o When waste is disposed or evacuated, then reward collectors. o Each waste bin has a unique identifer and an owner. o On sign up, user gets 10 $IBT Token. o Waste collectors own a DAO. o Waste bin owners own a DAO. o Reward sharing formula Note - It is configurable. The owner account is able to  set each of these fields. - Waste generators 10%. - Collectors 65%. - Team 25%.\",\"kind\":\"dev\",\"methods\":{\"blacklistUser(address,uint8)\":{\"details\":\"Blacklist user Note Admin privilege. cat should reference the Category enum.\"},\"collectWaste(uint256,uint256)\":{\"details\":\"Collect waste for disposal.  Note: Caller must be an approved waste collector. must supply the following:\",\"params\":{\"binId\":\"- Location of bin to deposit collected waste. ie bin index\",\"wasteId\":\"- Identifier for waste collected.\"}},\"garbages(uint8)\":{\"details\":\"Returns list of wastes under each 'State' i.e Generated waste data, Collected waste data, ...rest\"},\"generateMultipleWaste(string[])\":{\"details\":\"Generates multiple waste data\"},\"generateWaste(string)\":{\"details\":\"Generates new waste. \"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"registerBin()\":{\"details\":\"Adds new bin.\"},\"removeBin(uint256)\":{\"details\":\"Removes bin at binId.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"setCollectorUpReward(uint256)\":{\"details\":\"Sets new sign up reward. Note With access modifier\"},\"setFee(uint8,uint256)\":{\"details\":\"Set new fee\"},\"setPrice(uint256)\":{\"details\":\"Sets new price for recycled waste.\"},\"setSignUpReward(uint256)\":{\"details\":\"Sets new sign up reward. Note With access modifier\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"whitelistuser(address,uint8)\":{\"details\":\"Whitelist user Note Admin privilege. cat should reference the Category enum.\"}},\"stateVariables\":{\"_garbages\":{\"details\":\"Mapping of Generated and Recycled Waste State -> binId (binCounter) -> WasteData Keys type:  o State o uint256 value: array of struct(s) \"},\"binCounter\":{\"details\":\"Total bin registered to date\"},\"bins\":{\"details\":\"Array of bins  { Contain bins which contain collected wastes which contains wastedata}\"},\"collectorReward\":{\"details\":\"Collector reward\"},\"newSignUpReward\":{\"details\":\"New sign up reward\"},\"price\":{\"details\":\"Price of recycled waste\"},\"profiles\":{\"details\":\"Mapping of Waste State -> user -> profile Keys type:  o State o address value: struct \"},\"signUpFees\":{\"details\":\"Sign up fees for different category.\"},\"token\":{\"details\":\"iBoola Token\"},\"totalWasteGenerated\":{\"details\":\"Total waste generated to date\"}},\"title\":\"IBoolaContract\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"bins(uint256)\":{\"notice\":\"Bins in this list are owned by addresses.\"},\"buyRecycled(uint256)\":{\"notice\":\"Buy recycled waste in form of manure NOTE: Only recycled waste can be bought. If available manure cannot cover requested volume, buyer simply  purchased available volume.\"},\"generateWaste(string)\":{\"notice\":\"Each waste is unique to another. Note To successfully generate waste, bin id must be provided. This represents the destination where wastes are dumped.\"},\"recycleMultiple(uint256,uint256[])\":{\"notice\":\"Can recycle wastes greater than 0 but less than 51\"},\"registerBin()\":{\"notice\":\"Caller must already be approves as BinOwner .\"},\"removeBin(uint256)\":{\"notice\":\"Caller must already be approves as BinOwner .\"},\"setFee(uint8,uint256)\":{\"notice\":\"To perfectly select the right category, category parameter should not be greater than 4.\"},\"signUpAsWasteCollector(string,string)\":{\"notice\":\"Sign up function.  o Caller must not already be a member. \"},\"signUpFees(uint8)\":{\"notice\":\"- It can be configured to suit any category.\"},\"withdraw()\":{\"notice\":\"Withdraw reward if any {IBoola Token} Note - Caller must have previous reward otherwise it fails.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBoolaContract.sol\":\"IBoolaContract\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBoolaContract.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./libraries/IBoolaLib.sol\\\";\\r\\nimport \\\"./deps/Context.sol\\\";\\r\\nimport \\\"./deps/Ownable.sol\\\";\\r\\nimport \\\"./deps/IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @title IBoolaContract\\r\\n * @author Bobeu: https://github.com/bobeu\\r\\n * A smart contract that will tokenize the disposal and collection of waste. \\r\\n    Users get a token when they dispose of their waste in a waste bin, collectors \\r\\n    get token for collecting waste and taking them to the waste recyclers \\r\\n\\r\\n    The process of tokenization happens when the waste drops in the waste bin. Every\\r\\n    waste bin has a unique wallet ID which will receive the token at the end of evacuation.\\r\\n    The owners of the waste bin will have a DAO. \\r\\n\\r\\n    *Wallet \\r\\n    *Token (iBoola token) which would be paired against either Avalanche, Celo or Polygon \\r\\n    *New users get 10 $IBT after sign up \\r\\n    *Community of waste bins will have a DAO \\r\\n    Waste generators get 10% collectors get 65 while the iBoola team gets 25% \\r\\n    Decimals: use standard 18 decimals \\r\\n\\r\\n    Mintable: not mintable\\r\\n\\r\\n    Ownership privilege :  30% locked for 5 years, 20% for dev team 45% for  initial circulation, \\r\\n    5% for presale \\r\\n\\r\\n    PSEUDO\\r\\n    ======\\r\\n    Parties:\\r\\n        o Waste generators.\\r\\n        o Collectors.\\r\\n        o Recyclers.\\r\\n\\r\\n    o When waste is disposed or evacuated, then reward collectors.\\r\\n    o Each waste bin has a unique identifer and an owner.\\r\\n    o On sign up, user gets 10 $IBT Token.\\r\\n    o Waste collectors own a DAO.\\r\\n    o Waste bin owners own a DAO.\\r\\n    o Reward sharing formula Note - It is configurable. The owner account is able to \\r\\n        set each of these fields.\\r\\n        - Waste generators 10%.\\r\\n        - Collectors 65%.\\r\\n        - Team 25%.\\r\\n */\\r\\ncontract IBoolaContract is Context, Common, Ownable {\\r\\n\\r\\n    ///@dev New sign up reward\\r\\n    uint public newSignUpReward;\\r\\n\\r\\n    ///@dev iBoola Token\\r\\n    address public token;\\r\\n\\r\\n    ///@dev Total waste generated to date\\r\\n    uint256 public totalWasteGenerated;\\r\\n\\r\\n    ///@dev Collector reward\\r\\n    uint public collectorReward;\\r\\n\\r\\n    ///@dev Total bin registered to date\\r\\n    uint public binCounter;\\r\\n\\r\\n    ///@dev Price of recycled waste\\r\\n    uint public price;\\r\\n\\r\\n    /**\\r\\n        @dev Array of bins \\r\\n            { Contain bins which contain collected wastes which contains wastedata}\\r\\n            @notice Bins in this list are owned by addresses.\\r\\n    */\\r\\n    BinData[] public bins;\\r\\n    \\r\\n    mapping (Share=>uint8) public formula;\\r\\n    \\r\\n\\r\\n    /**\\r\\n        @dev Mapping of Generated and Recycled Waste State -> binId (binCounter) -> WasteData\\r\\n        Keys type: \\r\\n            o State\\r\\n            o uint256\\r\\n\\r\\n        value:\\r\\n           array of struct(s) \\r\\n     */\\r\\n    mapping (State=>WasteData[]) private _garbages;\\r\\n    \\r\\n    /**\\r\\n        @dev Mapping of Waste State -> user -> profile\\r\\n        Keys type: \\r\\n            o State\\r\\n            o address\\r\\n\\r\\n        value:\\r\\n            struct \\r\\n     */\\r\\n    mapping (Category=>mapping(address=>Profile)) private profiles;\\r\\n\\r\\n    /**\\r\\n        @dev Sign up fees for different category.\\r\\n            @notice - It can be configured to suit any category.\\r\\n     */\\r\\n    mapping (Category=>uint256) public signUpFees;\\r\\n\\r\\n    ///@dev Rewards\\r\\n    // mapping(address=>uint) public rewards;\\r\\n\\r\\n\\r\\n    modifier validateWasteId(uint binId, uint wasteId, State state, string memory errorMessage) {\\r\\n        if(state == State.COLLECTED) {\\r\\n            if(wasteId >= bins[binId].bin.length) revert InvalidWasteId();\\r\\n        } else if(state == State.GENERATED) {\\r\\n            require(wasteId < _garbages[state].length, \\\"Invalid wasteId\\\");\\r\\n        } else {\\r\\n            if(binId >= bins.length) revert InvalidBinID();\\r\\n        }\\r\\n\\r\\n        // require(wasteId < bins[binId].bin.length, \\\"Errror\\\");\\r\\n        // require(bins[binId].bin[wasteId].state == state, errorMessage);\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    ///Checks user's existence\\r\\n    modifier isApproved(Category cat, address who) {\\r\\n        if(!_getApproval(cat, who)) revert UserAlreadyNotExist();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    ///@dev Validates category\\r\\n    modifier validateCategory(uint8 cat) {\\r\\n        require(cat < 4, \\\"Invalid category\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    //Checks that the size of wastes not greater than 50\\r\\n    modifier validateSize(uint[] memory wasteIDs, string[] memory wastedata) {\\r\\n        (uint8 low, uint8 high) = (0, 50);\\r\\n        wastedata.length == 0 ? require(\\r\\n            wasteIDs.length > low && wasteIDs.length <= high, \\r\\n            \\\"invalid\\\"\\r\\n        ) : require(wastedata.length > low && wastedata.length <= high, \\\"invalid\\\");\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    constructor (address _token) { \\r\\n        token = _token;\\r\\n        newSignUpReward = 10 * (10 ** 18);\\r\\n        profiles[Category.BINOWNER][_msgSender()].approval = true;\\r\\n        formula[Share.COLLECTOR] = 65;\\r\\n        formula[Share.GENERATOR] = 10;\\r\\n        formula[Share.TEAM] = 25;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @notice Sign up function. \\r\\n                o Caller must not already be a member. \\r\\n    */\\r\\n    function signUpAsWasteCollector(string memory location, string memory _address) public {\\r\\n       require(!profiles[Category.COLLECTOR][_msgSender()].isRegistered, \\\"Already sign up\\\");\\r\\n       IBoolaLib.registerCollector(profiles, _msgSender(), location, _address);\\r\\n       IERC20(token).approve(_msgSender(), newSignUpReward);\\r\\n    }\\r\\n\\r\\n    function getProfile(uint category, address who) public view returns(Profile memory _profile) {\\r\\n        require(category < 5, \\\"Invalid\\\");\\r\\n        _profile = profiles[Category(category)][who];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev Adds new bin.\\r\\n            @notice Caller must already be approves as BinOwner .\\r\\n    */\\r\\n    function registerBin() public payable {\\r\\n        require(!profiles[Category.BINOWNER][msg.sender].isRegistered, \\\"Already registered\\\");\\r\\n        uint binId = IBoolaLib.registerNewBin(bins, _msgSender());\\r\\n        profiles[Category.BINOWNER][msg.sender].isRegistered = true;\\r\\n        binCounter ++;\\r\\n        emit RegisteredBin(binId, _msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev Removes bin at binId.\\r\\n            @notice Caller must already be approves as BinOwner .\\r\\n    */\\r\\n    function removeBin(uint binId) public isApproved(Category.BINOWNER, _msgSender()) {\\r\\n        address _owner = _getBinOwner(binId);\\r\\n        if(_msgSender() != owner()) require(_msgSender() == _owner, \\\"Not Authorized\\\");\\r\\n        \\r\\n        IBoolaLib.removeBin(bins, binId);\\r\\n    }\\r\\n\\r\\n    /**@dev Returns list of wastes under each 'State'\\r\\n        i.e Generated waste data, Collected waste data, ...rest\\r\\n    */\\r\\n    function garbages(uint8 _category) public view returns(WasteData[] memory _data) {\\r\\n        require(_category < 3, \\\"Invalid selecetor\\\");\\r\\n        _data = _garbages[State(_category)];\\r\\n    }\\r\\n\\r\\n    ///@dev Return owner of bin at binId. \\r\\n    function _getBinOwner(uint binId) private view returns(address) {\\r\\n        return bins[binId].owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev Whitelist user\\r\\n            Note Admin privilege.\\r\\n                cat should reference the Category enum.\\r\\n     */\\r\\n    function whitelistuser(address who, uint8 category) public onlyOwner validateCategory(category) {\\r\\n        IBoolaLib.setStatus(profiles, who, true, Category(category));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev Blacklist user\\r\\n            Note Admin privilege.\\r\\n                cat should reference the Category enum.\\r\\n     */\\r\\n    function blacklistUser(address who, uint8 category) public onlyOwner validateCategory(category){\\r\\n        IBoolaLib.setStatus(profiles, who, false, Category(category));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev Set new fee\\r\\n            @notice To perfectly select the right category,\\r\\n                category parameter should not be greater than 4.\\r\\n     */\\r\\n    function setFee(uint8 category, uint newFee) public onlyOwner {\\r\\n        require(category < 4, \\\"Invalid category\\\");\\r\\n        signUpFees[Category(category)] = newFee;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev Generates new waste. \\r\\n        @notice Each waste is unique to another.\\r\\n            Note To successfully generate waste, bin id must be provided.\\r\\n                    This represents the destination where wastes are dumped.\\r\\n     */\\r\\n    function generateWaste(string memory _data) public isApproved(Category.GENERATOR, _msgSender()) {\\r\\n        State state = State.GENERATED;\\r\\n        totalWasteGenerated ++;\\r\\n        uint nonce = totalWasteGenerated;\\r\\n        IBoolaLib.portToMap(\\r\\n            _garbages, \\r\\n             WasteData(\\r\\n                keccak256(abi.encodePacked(bytes(_data), nonce)), \\r\\n                address(0), \\r\\n                _msgSender(), \\r\\n                address(0),\\r\\n                state\\r\\n            ), \\r\\n            state\\r\\n        );\\r\\n    }\\r\\n\\r\\n    function _empty() internal pure returns(Empty memory empty) {\\r\\n        uint[] memory wasteIds = new uint[](0);\\r\\n        string[] memory wastedata = new string[](0);\\r\\n        empty = Empty(wasteIds, wastedata);\\r\\n    }\\r\\n\\r\\n    ///@dev Generates multiple waste data\\r\\n    function generateMultipleWaste(string[] memory data) public validateSize(_empty().wasteIds, data) {\\r\\n        for (uint i=0; i < data.length; i++) {\\r\\n            generateWaste(data[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev Gets approval for user 'who'\\r\\n            @param cat - Category of user e.g COLLECTOR etc\\r\\n            @param who - Address of user.\\r\\n    */\\r\\n    function _getApproval(Category cat, address who) internal view returns(bool) {\\r\\n        return profiles[cat][who].approval;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev Collect waste.\\r\\n            Note : Only generated waste can be collected\\r\\n            @param binId - Bin where the waste is located.\\r\\n            @param wasteId - Which waste to collect.\\r\\n                    Note - Every waste is unique to another.\\r\\n                            To make purchase of manure easy, wastes are recycled\\r\\n                            in 50s.\\r\\n     */\\r\\n    function recycle(uint binId, uint wasteId) internal isApproved(Category.RECYCLER, _msgSender()) validateWasteId(binId, wasteId, State.COLLECTED, \\\"Invalid waste pointer\\\") {\\r\\n        WasteData memory outWaste = IBoolaLib.popFromArray(bins, binId, wasteId);\\r\\n        IBoolaLib.portToMap(_garbages, outWaste, State.RECYCLED);\\r\\n        uint amount = collectorReward;\\r\\n\\r\\n        (uint collector, uint generator, uint team) = IBoolaLib.split(formula, amount);\\r\\n        IERC20(token).approve(outWaste.collector, collector);\\r\\n        IERC20(token).approve(outWaste.generator, generator);\\r\\n        IERC20(token).approve(address(this), team);\\r\\n\\r\\n    }\\r\\n\\r\\n    ///@notice Can recycle wastes greater than 0 but less than 51\\r\\n    function recycleMultiple(uint binId, uint[] memory wasteIds) public validateSize(wasteIds, _empty().wastedata) {\\r\\n        for (uint i = 0; i < wasteIds.length; i++) {\\r\\n            recycle(binId, wasteIds[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n\\r\\n    /**@notice Withdraw reward if any {IBoola Token}\\r\\n        Note - Caller must have previous reward otherwise it fails.\\r\\n     */\\r\\n    function withdraw() public {\\r\\n        uint rewardBal = IERC20(token).allowance(address(this),_msgSender());\\r\\n        if(rewardBal == 0) revert NothingToWithdraw();\\r\\n        IERC20(token).transferFrom(address(this), _msgSender(), rewardBal);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n        @dev Collect waste for disposal. \\r\\n            Note: Caller must be an approved waste collector.\\r\\n                must supply the following:\\r\\n                    o @param binId - Location of bin to deposit collected waste. ie bin index\\r\\n                    o @param wasteId - Identifier for waste collected.\\r\\n     */\\r\\n\\r\\n    function collectWaste(uint binId, uint wasteId) public isApproved(Category.COLLECTOR, _msgSender()) validateWasteId(binId, wasteId, State.GENERATED, \\\"Invalid waste pointer\\\") {\\r\\n        require(profiles[Category.COLLECTOR][_msgSender()].isRegistered,\\\"Not allowed\\\");\\r\\n        State _state = State.GENERATED;\\r\\n        require(_garbages[_state].length > wasteId, \\\"wasteId out of bound\\\");\\r\\n        WasteData memory outWaste = IBoolaLib.popFromMapping(_garbages, wasteId, _state);\\r\\n        IBoolaLib.portToArray(bins, binId, outWaste, State.COLLECTED);\\r\\n\\r\\n    }\\r\\n\\r\\n    //See `collectWaste()` except that this runs mulitple time.\\r\\n    function collectMultipleWaste(uint binId, uint[] memory wasteIds) public validateSize(wasteIds,_empty().wastedata) {\\r\\n        for (uint i = 0; i < wasteIds.length; i++) {\\r\\n            collectWaste(binId, wasteIds[i]);\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**@notice Buy recycled waste in form of manure\\r\\n        NOTE: Only recycled waste can be bought.\\r\\n        If available manure cannot cover requested volume, buyer simply \\r\\n        purchased available volume.\\r\\n     */\\r\\n    function buyRecycled(uint volume) public payable {\\r\\n        uint len = _garbages[State.RECYCLED].length;\\r\\n        uint actualVolume;\\r\\n        State _s = State.RECYCLED;\\r\\n        require(len > 0 && len >= volume, \\\"Not available\\\");\\r\\n        for(uint i = 0; i < volume; i++) {\\r\\n            WasteData memory wd = _garbages[_s][i];\\r\\n            if(wd.recycler != address(0)) {\\r\\n                actualVolume ++;\\r\\n                profiles[Category.SOLD][_msgSender()].purchased.push(WasteData(\\r\\n                    wd.value,\\r\\n                    wd.collector,\\r\\n                    wd.generator,\\r\\n                    wd.recycler,\\r\\n                    wd.state\\r\\n                ));\\r\\n                delete _garbages[_s][i];\\r\\n            }\\r\\n        }\\r\\n        uint amtToPay = price * actualVolume;\\r\\n        require(msg.value >= amtToPay, \\\"IValue\\\");\\r\\n        \\r\\n     }\\r\\n\\r\\n    ///@dev Sets new price for recycled waste.\\r\\n    function setPrice(uint newPrice) public onlyOwner {\\r\\n        price = newPrice;\\r\\n    }\\r\\n\\r\\n\\r\\n    ///@dev Sets new sign up reward. Note With access modifier\\r\\n    function setSignUpReward(uint newReward) public onlyOwner{\\r\\n        newSignUpReward = newReward;\\r\\n    }\\r\\n\\r\\n    ///@dev Sets new sign up reward. Note With access modifier\\r\\n    function setCollectorUpReward(uint newReward) public onlyOwner{\\r\\n        collectorReward = newReward;\\r\\n    }\\r\\n\\r\\n\\r\\n}\\r\\n\",\"keccak256\":\"0x12be1f69a2286a0922b5405ea9672f0f0937309798e81f764b68c1a95747efff\",\"license\":\"GPL-3.0\"},\"contracts/deps/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\"},\"contracts/deps/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\"},\"contracts/deps/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _transferOwnership(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if the sender is not the owner.\\r\\n     */\\r\\n    function _checkOwner() internal view virtual {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Internal function without access restriction.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x420f5a52111e811b8e24fdaf4f863429d007b8410a7eedac170d4180607555f0\",\"license\":\"MIT\"},\"contracts/interfaces/Common.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface Common {\\r\\n  enum State { GENERATED, COLLECTED, RECYCLED }\\r\\n  enum Category { COLLECTOR, GENERATOR, RECYCLER, BINOWNER, SOLD }\\r\\n  enum Share { COLLECTOR, GENERATOR, TEAM }\\r\\n\\r\\n  error UserAlreadyExist();\\r\\n  error UserAlreadyNotExist();\\r\\n  error InvalidBinID();\\r\\n  error EmptyBin();\\r\\n  error CannotDeleteBinInEngagedMode();\\r\\n  error InvalidWasteId();\\r\\n  error NothingToWithdraw();\\r\\n  error MaxWasteTransportExceeded();\\r\\n\\r\\n  event RegisteredBin(uint binId, address msgSender);\\r\\n\\r\\n  struct WasteData {\\r\\n    bytes32 value;\\r\\n    address collector;\\r\\n    address generator;\\r\\n    address recycler;\\r\\n    State state;\\r\\n  }\\r\\n\\r\\n  struct Profile {\\r\\n    uint32 transactionTime;\\r\\n    uint wasteCount;\\r\\n    bool approval;\\r\\n    bool isRegistered;\\r\\n    WasteData[] purchased;\\r\\n    bytes metadata;\\r\\n  }\\r\\n\\r\\n  struct BinData {\\r\\n    WasteData[] bin;\\r\\n    address owner;\\r\\n  }\\r\\n\\r\\n  struct Empty {\\r\\n    uint[] wasteIds;\\r\\n    string[] wastedata;\\r\\n  }\\r\\n\\r\\n}\",\"keccak256\":\"0xb15c46fd891b97a6a2c789d1853d865fb8c5be26605d6f70702d1caef4fa2046\",\"license\":\"GPL-3.0\"},\"contracts/libraries/IBoolaLib.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"../interfaces/Common.sol\\\";\\r\\n\\r\\nlibrary IBoolaLib {\\r\\n  /**\\r\\n    @dev Sign up new collector\\r\\n      @param self - Storage\\r\\n      @param newCollector - Address of new Collector to add.\\r\\n   */\\r\\n\\r\\n  function registerCollector(\\r\\n    mapping (Common.Category=>mapping(address=>Common.Profile)) storage self, \\r\\n      address newCollector, \\r\\n      string memory location, \\r\\n      string memory _address\\r\\n    ) internal {\\r\\n      Common.Category _c = Common.Category.COLLECTOR;\\r\\n      self[_c][newCollector].transactionTime = _now();\\r\\n      self[_c][newCollector].wasteCount = 0;\\r\\n      self[_c][newCollector].approval = false;\\r\\n      self[_c][newCollector].isRegistered = true;\\r\\n      self[_c][newCollector].metadata = abi.encode(location, _address);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev Dual function: \\r\\n            o Recycles collected waste.\\r\\n            o Generate new waste.\\r\\n   */\\r\\n  function portToMap(\\r\\n    mapping (Common.State=>Common.WasteData[]) storage self, \\r\\n    Common.WasteData memory inWaste,\\r\\n    Common.State state\\r\\n  ) internal {\\r\\n    self[state].push(Common.WasteData(\\r\\n        inWaste.value,\\r\\n        inWaste.collector,\\r\\n        inWaste.generator,\\r\\n        inWaste.recycler,\\r\\n        state\\r\\n      )\\r\\n    );\\r\\n  }\\r\\n\\r\\n  ///@dev Moves waste to bin\\r\\n  function portToArray(Common.BinData[] storage self, uint binId, Common.WasteData memory inWaste, Common.State state) internal {\\r\\n    self[binId].bin.push(Common.WasteData(\\r\\n      inWaste.value,\\r\\n      inWaste.collector,\\r\\n      inWaste.generator,\\r\\n      inWaste.recycler,\\r\\n      state\\r\\n    )\\r\\n    );\\r\\n  }\\r\\n\\r\\n  ///@dev Removes waste at 'wasteId' from bin at 'binId' in bin array at hashmap 'self'\\r\\n  function popFromMapping(mapping (Common.State=>Common.WasteData[]) storage self, uint wasteId, Common.State state) internal returns(Common.WasteData memory _waste) {\\r\\n    _waste = self[state][wasteId];\\r\\n    delete self[state][wasteId];\\r\\n  }\\r\\n\\r\\n  ///@dev Removes waste at 'wasteId' from bin at 'binId' in bin array 'self'\\r\\n  function popFromArray(Common.BinData[] storage self, uint binId, uint wasteId) internal returns(Common.WasteData memory _waste) {\\r\\n    _waste = self[binId].bin[wasteId];\\r\\n    delete self[binId].bin[wasteId];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev Sets collectors status to either true or false\\r\\n    @param value - Value to set status to.\\r\\n    @param who - User to set status for.\\r\\n    @param self - storage.\\r\\n      Note : If value is true, collector's status must be false vice versa.\\r\\n   */\\r\\n  function setStatus(mapping (Common.Category=>mapping(address=>Common.Profile)) storage self, address who, bool value, Common.Category cat) internal {\\r\\n    bool prevStatus = _previousStatus(self, who, cat);\\r\\n    if(value) {\\r\\n      if(prevStatus) revert Common.UserAlreadyExist();\\r\\n      self[cat][who].approval = true;\\r\\n    } else {\\r\\n      if(!prevStatus) revert Common.UserAlreadyNotExist();\\r\\n      self[cat][who].approval = false;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function _previousStatus(mapping (Common.Category=>mapping(address=>Common.Profile)) storage self, address who, Common.Category cat) private view returns(bool) {\\r\\n    return self[cat][who].approval;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev Registers new bin with owner.\\r\\n        @param owner - Bin Owner\\r\\n        @param self - Storage\\r\\n        @return newId \\r\\n   */\\r\\n  function registerNewBin(Common.BinData[] storage self, address owner) internal returns(uint newId) {\\r\\n    newId = self.length;\\r\\n    self.push();\\r\\n    self[newId].owner = owner;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev Removes bin from bin array.\\r\\n      @notice binId must be less than the bin array at any time since arrays are zero-based.\\r\\n      @param self - Storage\\r\\n   */\\r\\n  function removeBin(Common.BinData[] storage self, uint binId) internal {\\r\\n    (uint len, Common.BinData memory wasteBin)  = (self.length, self[binId]);\\r\\n    if(wasteBin.bin.length == 0) revert Common.EmptyBin();\\r\\n    for(uint i = 0; i < len; i++) {\\r\\n      if(wasteBin.bin[i].state < Common.State.RECYCLED) {\\r\\n        revert Common.CannotDeleteBinInEngagedMode();\\r\\n      }\\r\\n    } \\r\\n    delete self[binId];\\r\\n  }\\r\\n\\r\\n  function split(mapping (Common.Share=>uint8) storage self, uint amount) internal view returns(uint collector, uint generator, uint team) {\\r\\n    collector = (self[Common.Share.COLLECTOR] * amount) / 100;\\r\\n    generator = (self[Common.Share.GENERATOR] * amount) / 100;\\r\\n    team = (self[Common.Share.TEAM] * amount) / 100;\\r\\n\\r\\n  }\\r\\n\\r\\n  function _now() internal view returns(uint32) { return uint32(block.timestamp); }\\r\\n\\r\\n}\",\"keccak256\":\"0x7e4a0c6eec77642dd13e4e0fcaf34da6f40ee8ab1142726d257c7f5b635082fe\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1861,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              },
              {
                "astId": 15,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "newSignUpReward",
                "offset": 0,
                "slot": "1",
                "type": "t_uint256"
              },
              {
                "astId": 18,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "token",
                "offset": 0,
                "slot": "2",
                "type": "t_address"
              },
              {
                "astId": 21,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "totalWasteGenerated",
                "offset": 0,
                "slot": "3",
                "type": "t_uint256"
              },
              {
                "astId": 24,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "collectorReward",
                "offset": 0,
                "slot": "4",
                "type": "t_uint256"
              },
              {
                "astId": 27,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "binCounter",
                "offset": 0,
                "slot": "5",
                "type": "t_uint256"
              },
              {
                "astId": 30,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "price",
                "offset": 0,
                "slot": "6",
                "type": "t_uint256"
              },
              {
                "astId": 35,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "bins",
                "offset": 0,
                "slot": "7",
                "type": "t_array(t_struct(BinData)2038_storage)dyn_storage"
              },
              {
                "astId": 40,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "formula",
                "offset": 0,
                "slot": "8",
                "type": "t_mapping(t_enum(Share)1982,t_uint8)"
              },
              {
                "astId": 48,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "_garbages",
                "offset": 0,
                "slot": "9",
                "type": "t_mapping(t_enum(State)1972,t_array(t_struct(WasteData)2016_storage)dyn_storage)"
              },
              {
                "astId": 57,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "profiles",
                "offset": 0,
                "slot": "10",
                "type": "t_mapping(t_enum(Category)1978,t_mapping(t_address,t_struct(Profile)2031_storage))"
              },
              {
                "astId": 63,
                "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                "label": "signUpFees",
                "offset": 0,
                "slot": "11",
                "type": "t_mapping(t_enum(Category)1978,t_uint256)"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_array(t_struct(BinData)2038_storage)dyn_storage": {
                "base": "t_struct(BinData)2038_storage",
                "encoding": "dynamic_array",
                "label": "struct Common.BinData[]",
                "numberOfBytes": "32"
              },
              "t_array(t_struct(WasteData)2016_storage)dyn_storage": {
                "base": "t_struct(WasteData)2016_storage",
                "encoding": "dynamic_array",
                "label": "struct Common.WasteData[]",
                "numberOfBytes": "32"
              },
              "t_bool": {
                "encoding": "inplace",
                "label": "bool",
                "numberOfBytes": "1"
              },
              "t_bytes32": {
                "encoding": "inplace",
                "label": "bytes32",
                "numberOfBytes": "32"
              },
              "t_bytes_storage": {
                "encoding": "bytes",
                "label": "bytes",
                "numberOfBytes": "32"
              },
              "t_enum(Category)1978": {
                "encoding": "inplace",
                "label": "enum Common.Category",
                "numberOfBytes": "1"
              },
              "t_enum(Share)1982": {
                "encoding": "inplace",
                "label": "enum Common.Share",
                "numberOfBytes": "1"
              },
              "t_enum(State)1972": {
                "encoding": "inplace",
                "label": "enum Common.State",
                "numberOfBytes": "1"
              },
              "t_mapping(t_address,t_struct(Profile)2031_storage)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => struct Common.Profile)",
                "numberOfBytes": "32",
                "value": "t_struct(Profile)2031_storage"
              },
              "t_mapping(t_enum(Category)1978,t_mapping(t_address,t_struct(Profile)2031_storage))": {
                "encoding": "mapping",
                "key": "t_enum(Category)1978",
                "label": "mapping(enum Common.Category => mapping(address => struct Common.Profile))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_struct(Profile)2031_storage)"
              },
              "t_mapping(t_enum(Category)1978,t_uint256)": {
                "encoding": "mapping",
                "key": "t_enum(Category)1978",
                "label": "mapping(enum Common.Category => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_mapping(t_enum(Share)1982,t_uint8)": {
                "encoding": "mapping",
                "key": "t_enum(Share)1982",
                "label": "mapping(enum Common.Share => uint8)",
                "numberOfBytes": "32",
                "value": "t_uint8"
              },
              "t_mapping(t_enum(State)1972,t_array(t_struct(WasteData)2016_storage)dyn_storage)": {
                "encoding": "mapping",
                "key": "t_enum(State)1972",
                "label": "mapping(enum Common.State => struct Common.WasteData[])",
                "numberOfBytes": "32",
                "value": "t_array(t_struct(WasteData)2016_storage)dyn_storage"
              },
              "t_struct(BinData)2038_storage": {
                "encoding": "inplace",
                "label": "struct Common.BinData",
                "members": [
                  {
                    "astId": 2035,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "bin",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_array(t_struct(WasteData)2016_storage)dyn_storage"
                  },
                  {
                    "astId": 2037,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "owner",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_address"
                  }
                ],
                "numberOfBytes": "64"
              },
              "t_struct(Profile)2031_storage": {
                "encoding": "inplace",
                "label": "struct Common.Profile",
                "members": [
                  {
                    "astId": 2018,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "transactionTime",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_uint32"
                  },
                  {
                    "astId": 2020,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "wasteCount",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_uint256"
                  },
                  {
                    "astId": 2022,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "approval",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_bool"
                  },
                  {
                    "astId": 2024,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "isRegistered",
                    "offset": 1,
                    "slot": "2",
                    "type": "t_bool"
                  },
                  {
                    "astId": 2028,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "purchased",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_array(t_struct(WasteData)2016_storage)dyn_storage"
                  },
                  {
                    "astId": 2030,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "metadata",
                    "offset": 0,
                    "slot": "4",
                    "type": "t_bytes_storage"
                  }
                ],
                "numberOfBytes": "160"
              },
              "t_struct(WasteData)2016_storage": {
                "encoding": "inplace",
                "label": "struct Common.WasteData",
                "members": [
                  {
                    "astId": 2006,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "value",
                    "offset": 0,
                    "slot": "0",
                    "type": "t_bytes32"
                  },
                  {
                    "astId": 2008,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "collector",
                    "offset": 0,
                    "slot": "1",
                    "type": "t_address"
                  },
                  {
                    "astId": 2010,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "generator",
                    "offset": 0,
                    "slot": "2",
                    "type": "t_address"
                  },
                  {
                    "astId": 2012,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "recycler",
                    "offset": 0,
                    "slot": "3",
                    "type": "t_address"
                  },
                  {
                    "astId": 2015,
                    "contract": "contracts/IBoolaContract.sol:IBoolaContract",
                    "label": "state",
                    "offset": 20,
                    "slot": "3",
                    "type": "t_enum(State)1972"
                  }
                ],
                "numberOfBytes": "128"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              },
              "t_uint32": {
                "encoding": "inplace",
                "label": "uint32",
                "numberOfBytes": "4"
              },
              "t_uint8": {
                "encoding": "inplace",
                "label": "uint8",
                "numberOfBytes": "1"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {
              "bins(uint256)": {
                "notice": "Bins in this list are owned by addresses."
              },
              "buyRecycled(uint256)": {
                "notice": "Buy recycled waste in form of manure NOTE: Only recycled waste can be bought. If available manure cannot cover requested volume, buyer simply  purchased available volume."
              },
              "generateWaste(string)": {
                "notice": "Each waste is unique to another. Note To successfully generate waste, bin id must be provided. This represents the destination where wastes are dumped."
              },
              "recycleMultiple(uint256,uint256[])": {
                "notice": "Can recycle wastes greater than 0 but less than 51"
              },
              "registerBin()": {
                "notice": "Caller must already be approves as BinOwner ."
              },
              "removeBin(uint256)": {
                "notice": "Caller must already be approves as BinOwner ."
              },
              "setFee(uint8,uint256)": {
                "notice": "To perfectly select the right category, category parameter should not be greater than 4."
              },
              "signUpAsWasteCollector(string,string)": {
                "notice": "Sign up function.  o Caller must not already be a member. "
              },
              "signUpFees(uint8)": {
                "notice": "- It can be configured to suit any category."
              },
              "withdraw()": {
                "notice": "Withdraw reward if any {IBoola Token} Note - Caller must have previous reward otherwise it fails."
              }
            },
            "version": 1
          }
        }
      },
      "contracts/IBoolaToken.sol": {
        "IBoolaToken": {
          "abi": [
            {
              "inputs": [],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "burn",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "mint",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "See {IERC20-allowance}."
              },
              "approve(address,uint256)": {
                "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
              },
              "balanceOf(address)": {
                "details": "See {IERC20-balanceOf}."
              },
              "decimals()": {
                "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
              },
              "decreaseAllowance(address,uint256)": {
                "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
              },
              "increaseAllowance(address,uint256)": {
                "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "symbol()": {
                "details": "Returns the symbol of the token, usually a shorter version of the name."
              },
              "totalSupply()": {
                "details": "See {IERC20-totalSupply}."
              },
              "transfer(address,uint256)": {
                "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
              },
              "transferFrom(address,address,uint256)": {
                "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:1172:9",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:9",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "188:181:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "205:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "216:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "198:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "198:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "198:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "239:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "250:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "235:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "235:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "255:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "228:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "228:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "228:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "278:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "289:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "274:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "274:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "294:33:9",
                                    "type": "",
                                    "value": "ERC20: mint to the zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "267:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "267:61:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "267:61:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "337:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "349:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "360:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "345:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "345:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "337:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "165:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "179:4:9",
                            "type": ""
                          }
                        ],
                        "src": "14:355:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "475:76:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "485:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "497:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "508:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "493:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "493:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "485:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "527:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "538:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "520:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "520:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "520:25:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "444:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "455:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "466:4:9",
                            "type": ""
                          }
                        ],
                        "src": "374:177:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "604:181:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "639:115:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "sum",
                                          "nodeType": "YulIdentifier",
                                          "src": "660:3:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "669:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "674:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "665:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "665:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "653:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "653:33:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "653:33:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "706:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "709:4:9",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "699:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "699:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "699:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "sum",
                                          "nodeType": "YulIdentifier",
                                          "src": "734:3:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "739:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "727:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "727:17:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "727:17:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "620:1:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "627:1:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "623:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "623:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "617:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "617:13:9"
                              },
                              "nodeType": "YulIf",
                              "src": "614:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "763:16:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "774:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "777:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "770:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "770:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "763:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "587:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "590:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "596:3:9",
                            "type": ""
                          }
                        ],
                        "src": "556:229:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "845:325:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "855:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "869:1:9",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "872:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "865:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "865:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "855:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "886:38:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "916:4:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "922:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "912:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "912:12:9"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "890:18:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "963:31:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "965:27:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "979:6:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "987:4:9",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "975:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "975:17:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "965:6:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "943:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "936:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "936:26:9"
                              },
                              "nodeType": "YulIf",
                              "src": "933:2:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1053:111:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1074:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1081:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1086:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "1077:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1077:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1067:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1067:31:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1067:31:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1118:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1121:4:9",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1111:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1111:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1111:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1146:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1149:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1139:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1139:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1139:15:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "1009:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1032:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1040:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1029:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1029:14:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "1006:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1006:38:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1003:2:9"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "825:4:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "834:6:9",
                            "type": ""
                          }
                        ],
                        "src": "790:380:9"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0xC DUP2 MSTORE PUSH1 0x20 ADD PUSH12 0x34A137B7B630902A37B5B2B7 PUSH1 0xA1 SHL DUP2 MSTORE POP PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x3 DUP2 MSTORE PUSH1 0x20 ADD PUSH3 0x125095 PUSH1 0xEA SHL DUP2 MSTORE POP DUP2 PUSH1 0x3 SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH3 0x6B SWAP3 SWAP2 SWAP1 PUSH3 0x1FA JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x81 SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x1FA JUMP JUMPDEST POP POP POP PUSH3 0x9E PUSH3 0x98 PUSH3 0xBC PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0xC0 JUMP JUMPDEST PUSH3 0xB6 CALLER PUSH12 0x1363156BBEE3016D70000000 PUSH3 0x112 JUMP JUMPDEST PUSH3 0x302 JUMP JUMPDEST CALLER SWAP1 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH3 0x16D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH3 0x181 SWAP2 SWAP1 PUSH3 0x2A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH3 0x1B0 SWAP1 DUP5 SWAP1 PUSH3 0x2A0 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x208 SWAP1 PUSH3 0x2C5 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x22C JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0x277 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0x247 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0x277 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0x277 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0x277 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0x25A JUMP JUMPDEST POP PUSH3 0x285 SWAP3 SWAP2 POP PUSH3 0x289 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0x285 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0x28A JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH3 0x2C0 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x2DA JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x2FC JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xCEC DUP1 PUSH3 0x312 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x37C JUMP JUMPDEST PUSH2 0x136 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH2 0x136 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0x14A PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xC65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x290 SWAP1 PUSH2 0xC65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x4BA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x30D DUP6 DUP3 DUP6 PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x318 DUP6 DUP6 DUP6 PUSH2 0x659 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x336 DUP4 DUP4 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x340 SWAP2 SWAP1 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x34D PUSH2 0x827 JUMP JUMPDEST PUSH2 0x357 DUP3 DUP3 PUSH2 0x881 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x365 CALLER DUP3 PUSH2 0x960 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x370 PUSH2 0x827 JUMP JUMPDEST PUSH2 0x37A PUSH1 0x0 PUSH2 0xAA6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x399 DUP3 DUP7 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x365 DUP2 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP5 DUP5 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x653 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x653 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4BA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7CE SWAP1 DUP5 SWAP1 PUSH2 0xC36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x81A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0xC36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x916 SWAP1 DUP5 SWAP1 PUSH2 0xC36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA63 SWAP1 DUP5 SWAP1 PUSH2 0xC4E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB25 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB2E DUP3 PUSH2 0xAF8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB47 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB50 DUP4 PUSH2 0xAF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xB5E PUSH1 0x20 DUP5 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB7B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB84 DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP3 POP PUSH2 0xB92 PUSH1 0x20 DUP6 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xBBD DUP4 PUSH2 0xAF8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDC JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC0F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBF3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC20 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC49 JUMPI PUSH2 0xC49 PUSH2 0xCA0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC60 JUMPI PUSH2 0xC60 PUSH2 0xCA0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC79 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC9A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x61341EBB2F GASLIMIT CHAINID 0xC4 0xE1 POP TIMESTAMP PUSH16 0xF250E1F0F76625088E9C31EACD414B89 0xB1 0xBB 0x2E PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "221:408:1:-:0;;;267:171;;;;;;;;;;2010:116:3;;;;;;;;;;;;;-1:-1:-1;;;2010:116:3;;;;;;;;;;;;;;;;-1:-1:-1;;;2010:116:3;;;2085:5;2077;:13;;;;;;;;;;;;:::i;:::-;-1:-1:-1;2101:17:3;;;;:7;;:17;;;;;:::i;:::-;;2010:116;;957:32:6;976:12;:10;;;:12;;:::i;:::-;957:18;:32::i;:::-;383:47:1::1;736:10:2::0;403:26:1::1;383:5;:47::i;:::-;221:408:::0;;656:98:2;736:10;;656:98::o;2503:191:6:-;2596:6;;;-1:-1:-1;;;;;2613:17:6;;;-1:-1:-1;;;;;;2613:17:6;;;;;;;2646:40;;2596:6;;;2613:17;2596:6;;2646:40;;2577:16;;2646:40;2503:191;;:::o;8637:399:3:-;-1:-1:-1;;;;;8721:21:3;;8713:65;;;;-1:-1:-1;;;8713:65:3;;216:2:9;8713:65:3;;;198:21:9;255:2;235:18;;;228:30;294:33;274:18;;;267:61;345:18;;8713:65:3;;;;;;;;8869:6;8853:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8886:18:3;;:9;:18;;;;;;;;;;:28;;8908:6;;8886:9;:28;;8908:6;;8886:28;:::i;:::-;;;;-1:-1:-1;;8930:37:3;;520:25:9;;;-1:-1:-1;;;;;8930:37:3;;;8947:1;;8930:37;;508:2:9;493:18;8930:37:3;;;;;;;8637:399;;:::o;221:408:1:-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;221:408:1;;;-1:-1:-1;221:408:1;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;556:229:9;596:3;627:1;623:6;620:1;617:13;614:2;;;-1:-1:-1;;;653:33:9;;709:4;706:1;699:15;739:4;660:3;727:17;614:2;-1:-1:-1;770:9:9;;604:181::o;790:380::-;869:1;865:12;;;;912;;;933:2;;987:4;979:6;975:17;965:27;;933:2;1040;1032:6;1029:14;1009:18;1006:38;1003:2;;;1086:10;1081:3;1077:20;1074:1;1067:31;1121:4;1118:1;1111:15;1149:4;1146:1;1139:15;1003:2;;845:325;;;:::o;:::-;221:408:1;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:8353:9",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:9",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:124:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "150:3:9",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "155:1:9",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "146:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "146:11:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "142:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "142:19:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:31:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:42:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:50:9"
                              },
                              "nodeType": "YulIf",
                              "src": "111:2:9"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:9",
                            "type": ""
                          }
                        ],
                        "src": "14:173:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "262:126:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "308:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "317:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "325:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "310:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "310:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "310:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "283:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "292:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "279:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "279:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "304:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "275:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "275:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "272:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "343:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "372:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "353:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "343:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "228:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "239:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "251:6:9",
                            "type": ""
                          }
                        ],
                        "src": "192:196:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "480:183:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "526:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "535:6:9"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "543:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "528:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "528:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "528:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "501:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "510:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "497:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "522:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "493:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "493:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "490:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "561:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "590:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "571:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "571:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "561:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "609:48:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "642:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "653:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "638:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "638:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "619:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "619:38:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "609:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "438:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "449:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "461:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "469:6:9",
                            "type": ""
                          }
                        ],
                        "src": "393:270:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "772:234:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "818:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "827:6:9"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "835:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "820:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "820:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "820:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "793:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "802:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "789:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "789:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "814:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "785:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "785:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "782:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "853:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "882:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "863:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "863:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "853:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "901:48:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "934:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "945:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "930:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "930:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "911:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "911:38:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "901:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "958:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "985:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "996:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "981:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "981:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "968:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "968:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "958:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "722:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "733:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "745:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "753:6:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "761:6:9",
                            "type": ""
                          }
                        ],
                        "src": "668:338:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1098:177:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1144:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1153:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1161:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1146:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1146:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1146:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1119:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1128:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1115:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1115:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1140:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1111:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1111:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1108:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1179:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1208:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1189:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1189:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1179:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1227:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1254:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1265:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1250:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1250:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1237:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1237:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1227:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1056:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1067:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1079:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1087:6:9",
                            "type": ""
                          }
                        ],
                        "src": "1011:264:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1350:120:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1396:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1405:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1413:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1398:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1398:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1398:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1371:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1380:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1367:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1367:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1392:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1363:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1363:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1360:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1431:33:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1454:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1441:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1441:23:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1431:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1316:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1327:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1339:6:9",
                            "type": ""
                          }
                        ],
                        "src": "1280:190:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1576:102:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1586:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1598:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1609:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1594:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1594:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1586:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1628:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "1643:6:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1659:3:9",
                                                "type": "",
                                                "value": "160"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "1664:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "shl",
                                              "nodeType": "YulIdentifier",
                                              "src": "1655:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "1655:11:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "1668:1:9",
                                            "type": "",
                                            "value": "1"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "sub",
                                          "nodeType": "YulIdentifier",
                                          "src": "1651:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1651:19:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "1639:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1639:32:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1621:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1621:51:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1621:51:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1545:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1556:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1567:4:9",
                            "type": ""
                          }
                        ],
                        "src": "1475:203:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1778:92:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1788:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1800:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1811:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1796:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1796:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1788:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1830:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1855:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1848:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1848:14:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1841:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1841:22:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1823:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1823:41:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1823:41:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1747:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1758:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1769:4:9",
                            "type": ""
                          }
                        ],
                        "src": "1683:187:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1996:482:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2006:12:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2016:2:9",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "2010:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2034:9:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "2045:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2027:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2027:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2027:21:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2057:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "2077:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "2071:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2071:13:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "2061:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2104:9:9"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "2115:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2100:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2100:18:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2120:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2093:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2093:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2093:34:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "2136:13:9",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "2145:4:9"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "2140:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2208:90:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2237:9:9"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2248:1:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2233:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2233:17:9"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2252:2:9",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2229:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2229:26:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2271:6:9"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "2279:1:9"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "2267:3:9"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "2267:14:9"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2283:2:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2263:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2263:23:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "2257:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2257:30:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2222:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2222:66:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2222:66:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2169:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2172:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2166:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2166:13:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "2180:19:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "2182:15:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "2191:1:9"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "2194:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "2187:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2187:10:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "2182:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "2162:3:9",
                                "statements": []
                              },
                              "src": "2158:140:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "2332:69:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2361:9:9"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "2372:6:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "2357:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "2357:22:9"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "2381:2:9",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "2353:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "2353:31:9"
                                        },
                                        {
                                          "name": "tail",
                                          "nodeType": "YulIdentifier",
                                          "src": "2386:4:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "2346:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "2346:45:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "2346:45:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "2313:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "2316:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "2310:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2310:13:9"
                              },
                              "nodeType": "YulIf",
                              "src": "2307:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2410:62:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2426:9:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "2445:6:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2453:2:9",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2441:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2441:15:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2462:2:9",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "2458:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2458:7:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2437:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2437:29:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2422:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2422:45:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2469:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2418:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2418:54:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2410:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1965:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1976:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1987:4:9",
                            "type": ""
                          }
                        ],
                        "src": "1875:603:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2657:225:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2674:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2685:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2667:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2667:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2667:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2708:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2719:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2704:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2704:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2724:2:9",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2697:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2697:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2697:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2747:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2758:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2743:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2743:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2763:34:9",
                                    "type": "",
                                    "value": "ERC20: transfer to the zero addr"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2736:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2736:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2736:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2818:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2829:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2814:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2814:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2834:5:9",
                                    "type": "",
                                    "value": "ess"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2807:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2807:33:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2807:33:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2849:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2861:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2872:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2857:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2857:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2849:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2634:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2648:4:9",
                            "type": ""
                          }
                        ],
                        "src": "2483:399:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3061:224:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3078:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3089:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3071:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3071:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3071:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3112:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3123:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3108:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3108:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3128:2:9",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3101:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3101:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3101:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3151:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3162:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3147:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3147:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3167:34:9",
                                    "type": "",
                                    "value": "ERC20: burn amount exceeds balan"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3140:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3140:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3140:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3222:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3233:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3218:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3218:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3238:4:9",
                                    "type": "",
                                    "value": "ce"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3211:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3211:32:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3211:32:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3252:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3264:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3275:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3260:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3260:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3252:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3038:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3052:4:9",
                            "type": ""
                          }
                        ],
                        "src": "2887:398:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3464:228:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3481:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3492:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3474:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3474:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3474:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3515:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3526:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3511:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3511:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3531:2:9",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3504:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3504:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3504:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3554:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3565:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3550:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3550:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3570:34:9",
                                    "type": "",
                                    "value": "Ownable: new owner is the zero a"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3543:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3543:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3543:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3625:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3636:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3621:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3621:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3641:8:9",
                                    "type": "",
                                    "value": "ddress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3614:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3614:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3614:36:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3659:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3671:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3682:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3667:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3667:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3659:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3441:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3455:4:9",
                            "type": ""
                          }
                        ],
                        "src": "3290:402:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3871:224:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3888:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3899:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3881:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3881:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3881:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3922:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3933:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3918:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3918:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3938:2:9",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3911:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3911:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3911:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3961:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3972:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3957:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3957:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3977:34:9",
                                    "type": "",
                                    "value": "ERC20: approve to the zero addre"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3950:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3950:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3950:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4032:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4043:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4028:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4028:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4048:4:9",
                                    "type": "",
                                    "value": "ss"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4021:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4021:32:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4021:32:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4062:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4074:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4085:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4070:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4070:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4062:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3848:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3862:4:9",
                            "type": ""
                          }
                        ],
                        "src": "3697:398:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4274:179:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4291:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4302:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4284:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4284:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4284:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4325:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4336:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4321:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4321:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4341:2:9",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4314:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4314:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4314:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4364:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4375:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4360:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4360:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4380:31:9",
                                    "type": "",
                                    "value": "ERC20: insufficient allowance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4353:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4353:59:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4353:59:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4421:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4433:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4444:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4429:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4429:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4421:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4251:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4265:4:9",
                            "type": ""
                          }
                        ],
                        "src": "4100:353:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4632:228:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4649:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4660:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4642:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4642:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4642:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4683:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4694:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4679:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4679:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4699:2:9",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4672:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4672:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4672:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4722:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4733:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4718:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4718:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4738:34:9",
                                    "type": "",
                                    "value": "ERC20: transfer amount exceeds b"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4711:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4711:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4711:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4793:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4804:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4789:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4789:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4809:8:9",
                                    "type": "",
                                    "value": "alance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4782:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4782:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4782:36:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4827:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4839:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4850:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4835:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4835:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4827:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4609:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4623:4:9",
                            "type": ""
                          }
                        ],
                        "src": "4458:402:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5039:182:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5056:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5067:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5049:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5049:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5049:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5090:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5101:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5086:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5086:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5106:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5079:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5079:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5079:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5129:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5140:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5125:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5125:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5145:34:9",
                                    "type": "",
                                    "value": "Ownable: caller is not the owner"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5118:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5118:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5118:62:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5189:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5201:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5212:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5197:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5197:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5189:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5016:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5030:4:9",
                            "type": ""
                          }
                        ],
                        "src": "4865:356:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5400:223:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5417:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5428:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5410:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5410:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5410:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5451:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5462:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5447:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5447:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5467:2:9",
                                    "type": "",
                                    "value": "33"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5440:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5440:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5440:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5490:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5501:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5486:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5486:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5506:34:9",
                                    "type": "",
                                    "value": "ERC20: burn from the zero addres"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5479:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5479:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5479:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5561:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5572:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5557:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5557:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5577:3:9",
                                    "type": "",
                                    "value": "s"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5550:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5550:31:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5550:31:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5590:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5602:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5613:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5598:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5598:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5590:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5377:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5391:4:9",
                            "type": ""
                          }
                        ],
                        "src": "5226:397:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5802:227:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5819:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5830:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5812:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5812:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5812:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5853:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5864:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5849:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5849:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5869:2:9",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5842:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5842:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5842:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5892:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5903:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5888:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5888:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5908:34:9",
                                    "type": "",
                                    "value": "ERC20: transfer from the zero ad"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5881:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5881:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5881:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "5963:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5974:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "5959:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5959:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "5979:7:9",
                                    "type": "",
                                    "value": "dress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5952:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5952:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5952:35:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5996:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6008:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6019:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6004:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6004:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5996:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5779:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5793:4:9",
                            "type": ""
                          }
                        ],
                        "src": "5628:401:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6208:226:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6225:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6236:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6218:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6218:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6218:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6259:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6270:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6255:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6255:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6275:2:9",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6248:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6248:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6248:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6298:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6309:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6294:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6294:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6314:34:9",
                                    "type": "",
                                    "value": "ERC20: approve from the zero add"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6287:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6287:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6287:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6369:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6380:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6365:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6365:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6385:6:9",
                                    "type": "",
                                    "value": "ress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6358:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6358:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6358:34:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6401:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6413:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6424:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6409:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6409:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6401:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6185:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6199:4:9",
                            "type": ""
                          }
                        ],
                        "src": "6034:400:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "6613:227:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6630:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6641:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6623:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6623:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6623:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6664:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6675:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6660:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6660:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6680:2:9",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6653:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6653:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6653:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6703:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6714:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6699:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6699:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6719:34:9",
                                    "type": "",
                                    "value": "ERC20: decreased allowance below"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6692:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6692:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6692:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "6774:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "6785:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "6770:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "6770:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "6790:7:9",
                                    "type": "",
                                    "value": " zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "6763:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6763:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "6763:35:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "6807:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "6819:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "6830:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "6815:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "6815:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "6807:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6590:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "6604:4:9",
                            "type": ""
                          }
                        ],
                        "src": "6439:401:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7019:181:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7036:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7047:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7029:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7029:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7029:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7070:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7081:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7066:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7066:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7086:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7059:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7059:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7059:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "7109:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7120:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "7105:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7105:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "7125:33:9",
                                    "type": "",
                                    "value": "ERC20: mint to the zero address"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7098:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7098:61:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7098:61:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7168:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7180:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7191:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7176:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7176:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7168:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "6996:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7010:4:9",
                            "type": ""
                          }
                        ],
                        "src": "6845:355:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7306:76:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7316:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7328:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7339:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7324:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7324:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7316:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7358:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "7369:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7351:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7351:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7351:25:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7275:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7286:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7297:4:9",
                            "type": ""
                          }
                        ],
                        "src": "7205:177:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7484:87:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7494:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7506:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7517:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7502:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7502:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "7494:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "7536:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "7551:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "7559:4:9",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "7547:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7547:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "7529:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7529:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "7529:36:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "7453:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "7464:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "7475:4:9",
                            "type": ""
                          }
                        ],
                        "src": "7387:184:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7624:80:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7651:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7653:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7653:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7653:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7640:1:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "7647:1:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "7643:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "7643:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7637:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7637:13:9"
                              },
                              "nodeType": "YulIf",
                              "src": "7634:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7682:16:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7693:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7696:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "7689:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7689:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "7682:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "7607:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "7610:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "7616:3:9",
                            "type": ""
                          }
                        ],
                        "src": "7576:128:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7758:76:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "7780:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x11",
                                        "nodeType": "YulIdentifier",
                                        "src": "7782:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "7782:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "7782:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7774:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7777:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "7771:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7771:8:9"
                              },
                              "nodeType": "YulIf",
                              "src": "7768:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "7811:17:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "7823:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "7826:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "7819:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7819:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "diff",
                                  "nodeType": "YulIdentifier",
                                  "src": "7811:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_sub_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "7740:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "7743:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "diff",
                            "nodeType": "YulTypedName",
                            "src": "7749:4:9",
                            "type": ""
                          }
                        ],
                        "src": "7709:125:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "7894:325:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "7904:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7918:1:9",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "7921:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "7914:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7914:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "7904:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "7935:38:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "7965:4:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "7971:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "7961:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7961:12:9"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "7939:18:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8012:31:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "8014:27:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "8028:6:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8036:4:9",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "8024:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8024:17:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "8014:6:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "7992:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "7985:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "7985:26:9"
                              },
                              "nodeType": "YulIf",
                              "src": "7982:2:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "8102:111:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8123:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "8130:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "8135:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "8126:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "8126:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8116:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8116:31:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8116:31:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8167:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8170:4:9",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "8160:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8160:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8160:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8195:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "8198:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "8188:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "8188:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "8188:15:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "8058:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "8081:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8089:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "8078:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8078:14:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "8055:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8055:38:9"
                              },
                              "nodeType": "YulIf",
                              "src": "8052:2:9"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "7874:4:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "7883:6:9",
                            "type": ""
                          }
                        ],
                        "src": "7839:380:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "8256:95:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8273:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8280:3:9",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "8285:10:9",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "8276:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "8276:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8266:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8266:31:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8266:31:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8313:1:9",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8316:4:9",
                                    "type": "",
                                    "value": "0x11"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "8306:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8306:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8306:15:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8337:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "8340:4:9",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "8330:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "8330:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "8330:15:9"
                            }
                          ]
                        },
                        "name": "panic_error_0x11",
                        "nodeType": "YulFunctionDefinition",
                        "src": "8224:127:9"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: burn amount exceeds balan\")\n        mstore(add(headStart, 96), \"ce\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"Ownable: new owner is the zero a\")\n        mstore(add(headStart, 96), \"ddress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 32)\n        mstore(add(headStart, 64), \"Ownable: caller is not the owner\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 33)\n        mstore(add(headStart, 64), \"ERC20: burn from the zero addres\")\n        mstore(add(headStart, 96), \"s\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 31)\n        mstore(add(headStart, 64), \"ERC20: mint to the zero address\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y)) { panic_error_0x11() }\n        sum := add(x, y)\n    }\n    function checked_sub_t_uint256(x, y) -> diff\n    {\n        if lt(x, y) { panic_error_0x11() }\n        diff := sub(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x11()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n}",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a457c2d711610066578063a457c2d714610209578063a9059cbb1461021c578063dd62ed3e1461022f578063f2fde38b1461024257600080fd5b806370a08231146101b5578063715018a6146101de5780638da5cb5b146101e657806395d89b411461020157600080fd5b8063313ce567116100d3578063313ce5671461016b578063395093511461017a57806340c10f191461018d57806342966c68146101a257600080fd5b806306fdde0314610105578063095ea7b31461012357806318160ddd1461014657806323b872dd14610158575b600080fd5b61010d610255565b60405161011a9190610be3565b60405180910390f35b610136610131366004610ba2565b6102e7565b604051901515815260200161011a565b6002545b60405190815260200161011a565b610136610166366004610b67565b6102ff565b6040516012815260200161011a565b610136610188366004610ba2565b610323565b6101a061019b366004610ba2565b610345565b005b6101a06101b0366004610bcb565b61035b565b61014a6101c3366004610b14565b6001600160a01b031660009081526020819052604090205490565b6101a0610368565b6005546040516001600160a01b03909116815260200161011a565b61010d61037c565b610136610217366004610ba2565b61038b565b61013661022a366004610ba2565b61040b565b61014a61023d366004610b35565b610419565b6101a0610250366004610b14565b610444565b60606003805461026490610c65565b80601f016020809104026020016040519081016040528092919081815260200182805461029090610c65565b80156102dd5780601f106102b2576101008083540402835291602001916102dd565b820191906000526020600020905b8154815290600101906020018083116102c057829003601f168201915b5050505050905090565b6000336102f58185856104ba565b5060019392505050565b60003361030d8582856105df565b610318858585610659565b506001949350505050565b6000336102f58185856103368383610419565b6103409190610c36565b6104ba565b61034d610827565b6103578282610881565b5050565b6103653382610960565b50565b610370610827565b61037a6000610aa6565b565b60606004805461026490610c65565b600033816103998286610419565b9050838110156103fe5760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b61031882868684036104ba565b6000336102f5818585610659565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b61044c610827565b6001600160a01b0381166104b15760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103f5565b61036581610aa6565b6001600160a01b03831661051c5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103f5565b6001600160a01b03821661057d5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103f5565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006105eb8484610419565b9050600019811461065357818110156106465760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016103f5565b61065384848484036104ba565b50505050565b6001600160a01b0383166106bd5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103f5565b6001600160a01b03821661071f5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103f5565b6001600160a01b038316600090815260208190526040902054818110156107975760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103f5565b6001600160a01b038085166000908152602081905260408082208585039055918516815290812080548492906107ce908490610c36565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef8460405161081a91815260200190565b60405180910390a3610653565b6005546001600160a01b0316331461037a5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016103f5565b6001600160a01b0382166108d75760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103f5565b80600260008282546108e99190610c36565b90915550506001600160a01b03821660009081526020819052604081208054839290610916908490610c36565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b0382166109c05760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016103f5565b6001600160a01b03821660009081526020819052604090205481811015610a345760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016103f5565b6001600160a01b0383166000908152602081905260408120838303905560028054849290610a63908490610c4e565b90915550506040518281526000906001600160a01b038516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016105d2565b600580546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b80356001600160a01b0381168114610b0f57600080fd5b919050565b600060208284031215610b25578081fd5b610b2e82610af8565b9392505050565b60008060408385031215610b47578081fd5b610b5083610af8565b9150610b5e60208401610af8565b90509250929050565b600080600060608486031215610b7b578081fd5b610b8484610af8565b9250610b9260208501610af8565b9150604084013590509250925092565b60008060408385031215610bb4578182fd5b610bbd83610af8565b946020939093013593505050565b600060208284031215610bdc578081fd5b5035919050565b6000602080835283518082850152825b81811015610c0f57858101830151858201604001528201610bf3565b81811115610c205783604083870101525b50601f01601f1916929092016040019392505050565b60008219821115610c4957610c49610ca0565b500190565b600082821015610c6057610c60610ca0565b500390565b600181811c90821680610c7957607f821691505b60208210811415610c9a57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212206461341ebb2f4546c4e150426ff250e1f0f76625088e9c31eacd414b89b1bb2e64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0x100 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x70A08231 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xA457C2D7 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x209 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x21C JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x22F JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x242 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x70A08231 EQ PUSH2 0x1B5 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1DE JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x1E6 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x201 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x313CE567 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x16B JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0x40C10F19 EQ PUSH2 0x18D JUMPI DUP1 PUSH4 0x42966C68 EQ PUSH2 0x1A2 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0x105 JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0x146 JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x158 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x10D PUSH2 0x255 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x11A SWAP2 SWAP1 PUSH2 0xBE3 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x136 PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x2E7 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x166 CALLDATASIZE PUSH1 0x4 PUSH2 0xB67 JUMP JUMPDEST PUSH2 0x2FF JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x136 PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x323 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x345 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1A0 PUSH2 0x1B0 CALLDATASIZE PUSH1 0x4 PUSH2 0xBCB JUMP JUMPDEST PUSH2 0x35B JUMP JUMPDEST PUSH2 0x14A PUSH2 0x1C3 CALLDATASIZE PUSH1 0x4 PUSH2 0xB14 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x368 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x40 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP1 SWAP2 AND DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x11A JUMP JUMPDEST PUSH2 0x10D PUSH2 0x37C JUMP JUMPDEST PUSH2 0x136 PUSH2 0x217 CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x38B JUMP JUMPDEST PUSH2 0x136 PUSH2 0x22A CALLDATASIZE PUSH1 0x4 PUSH2 0xBA2 JUMP JUMPDEST PUSH2 0x40B JUMP JUMPDEST PUSH2 0x14A PUSH2 0x23D CALLDATASIZE PUSH1 0x4 PUSH2 0xB35 JUMP JUMPDEST PUSH2 0x419 JUMP JUMPDEST PUSH2 0x1A0 PUSH2 0x250 CALLDATASIZE PUSH1 0x4 PUSH2 0xB14 JUMP JUMPDEST PUSH2 0x444 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xC65 JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x290 SWAP1 PUSH2 0xC65 JUMP JUMPDEST DUP1 ISZERO PUSH2 0x2DD JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x2B2 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x2DD JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x2C0 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x4BA JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x30D DUP6 DUP3 DUP6 PUSH2 0x5DF JUMP JUMPDEST PUSH2 0x318 DUP6 DUP6 DUP6 PUSH2 0x659 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x336 DUP4 DUP4 PUSH2 0x419 JUMP JUMPDEST PUSH2 0x340 SWAP2 SWAP1 PUSH2 0xC36 JUMP JUMPDEST PUSH2 0x4BA JUMP JUMPDEST PUSH2 0x34D PUSH2 0x827 JUMP JUMPDEST PUSH2 0x357 DUP3 DUP3 PUSH2 0x881 JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH2 0x365 CALLER DUP3 PUSH2 0x960 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x370 PUSH2 0x827 JUMP JUMPDEST PUSH2 0x37A PUSH1 0x0 PUSH2 0xAA6 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x264 SWAP1 PUSH2 0xC65 JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x399 DUP3 DUP7 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x3FE JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x318 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x4BA JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x2F5 DUP2 DUP6 DUP6 PUSH2 0x659 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0x44C PUSH2 0x827 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND PUSH2 0x4B1 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x646472657373 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x365 DUP2 PUSH2 0xAA6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x51C JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x57D JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x5EB DUP5 DUP5 PUSH2 0x419 JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x653 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x646 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH2 0x653 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x4BA JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x6BD JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x71F JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x797 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x7CE SWAP1 DUP5 SWAP1 PUSH2 0xC36 JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x81A SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x653 JUMP JUMPDEST PUSH1 0x5 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND CALLER EQ PUSH2 0x37A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD DUP2 SWAP1 MSTORE PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x8D7 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1F PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206D696E7420746F20746865207A65726F206164647265737300 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x3F5 JUMP JUMPDEST DUP1 PUSH1 0x2 PUSH1 0x0 DUP3 DUP3 SLOAD PUSH2 0x8E9 SWAP2 SWAP1 PUSH2 0xC36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP1 SLOAD DUP4 SWAP3 SWAP1 PUSH2 0x916 SWAP1 DUP5 SWAP1 PUSH2 0xC36 JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND SWAP1 PUSH1 0x0 SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x21 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E2066726F6D20746865207A65726F20616464726573 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x73 PUSH1 0xF8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0xA34 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A206275726E20616D6F756E7420657863656564732062616C616E PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x6365 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x3F5 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP2 KECCAK256 DUP4 DUP4 SUB SWAP1 SSTORE PUSH1 0x2 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0xA63 SWAP1 DUP5 SWAP1 PUSH2 0xC4E JUMP JUMPDEST SWAP1 SWAP2 SSTORE POP POP PUSH1 0x40 MLOAD DUP3 DUP2 MSTORE PUSH1 0x0 SWAP1 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP6 AND SWAP1 PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF SWAP1 PUSH1 0x20 ADD PUSH2 0x5D2 JUMP JUMPDEST PUSH1 0x5 DUP1 SLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB NOT DUP4 AND DUP2 OR SWAP1 SWAP4 SSTORE PUSH1 0x40 MLOAD SWAP2 AND SWAP2 SWAP1 DUP3 SWAP1 PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 SWAP1 PUSH1 0x0 SWAP1 LOG3 POP POP JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0xB0F JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xB25 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB2E DUP3 PUSH2 0xAF8 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xB47 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB50 DUP4 PUSH2 0xAF8 JUMP JUMPDEST SWAP2 POP PUSH2 0xB5E PUSH1 0x20 DUP5 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0xB7B JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0xB84 DUP5 PUSH2 0xAF8 JUMP JUMPDEST SWAP3 POP PUSH2 0xB92 PUSH1 0x20 DUP6 ADD PUSH2 0xAF8 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0xBB4 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0xBBD DUP4 PUSH2 0xAF8 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xBDC JUMPI DUP1 DUP2 REVERT JUMPDEST POP CALLDATALOAD SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0xC0F JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0xBF3 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0xC20 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0xC49 JUMPI PUSH2 0xC49 PUSH2 0xCA0 JUMP JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 LT ISZERO PUSH2 0xC60 JUMPI PUSH2 0xC60 PUSH2 0xCA0 JUMP JUMPDEST POP SUB SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0xC79 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0xC9A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 PUSH5 0x61341EBB2F GASLIMIT CHAINID 0xC4 0xE1 POP TIMESTAMP PUSH16 0xF250E1F0F76625088E9C31EACD414B89 0xB1 0xBB 0x2E PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "221:408:1:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:100:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4547:201;;;;;;:::i;:::-;;:::i;:::-;;;1848:14:9;;1841:22;1823:41;;1811:2;1796:18;4547:201:3;1778:92:9;3316:108:3;3404:12;;3316:108;;;7351:25:9;;;7339:2;7324:18;3316:108:3;7306:76:9;5328:295:3;;;;;;:::i;:::-;;:::i;3158:93::-;;;3241:2;7529:36:9;;7517:2;7502:18;3158:93:3;7484:87:9;6032:238:3;;;;;;:::i;:::-;;:::i;446:92:1:-;;;;;;:::i;:::-;;:::i;:::-;;546:80;;;;;;:::i;:::-;;:::i;3487:127:3:-;;;;;;:::i;:::-;-1:-1:-1;;;;;3588:18:3;3561:7;3588:18;;;;;;;;;;;;3487:127;1884:103:6;;;:::i;1236:87::-;1309:6;;1236:87;;-1:-1:-1;;;;;1309:6:6;;;1621:51:9;;1609:2;1594:18;1236:87:6;1576:102:9;2415:104:3;;;:::i;6773:436::-;;;;;;:::i;:::-;;:::i;3820:193::-;;;;;;:::i;:::-;;:::i;4076:151::-;;;;;;:::i;:::-;;:::i;2142:201:6:-;;;;;;:::i;:::-;;:::i;2196:100:3:-;2250:13;2283:5;2276:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:100;:::o;4547:201::-;4630:4;736:10:2;4686:32:3;736:10:2;4702:7:3;4711:6;4686:8;:32::i;:::-;-1:-1:-1;4736:4:3;;4547:201;-1:-1:-1;;;4547:201:3:o;5328:295::-;5459:4;736:10:2;5517:38:3;5533:4;736:10:2;5548:6:3;5517:15;:38::i;:::-;5566:27;5576:4;5582:2;5586:6;5566:9;:27::i;:::-;-1:-1:-1;5611:4:3;;5328:295;-1:-1:-1;;;;5328:295:3:o;6032:238::-;6120:4;736:10:2;6176:64:3;736:10:2;6192:7:3;6229:10;6201:25;736:10:2;6192:7:3;6201:9;:25::i;:::-;:38;;;;:::i;:::-;6176:8;:64::i;446:92:1:-;1122:13:6;:11;:13::i;:::-;513:17:1::1;519:2;523:6;513:5;:17::i;:::-;446:92:::0;;:::o;546:80::-;591:27;736:10:2;611:6:1;591:5;:27::i;:::-;546:80;:::o;1884:103:6:-;1122:13;:11;:13::i;:::-;1949:30:::1;1976:1;1949:18;:30::i;:::-;1884:103::o:0;2415:104:3:-;2471:13;2504:7;2497:14;;;;;:::i;6773:436::-;6866:4;736:10:2;6866:4:3;6949:25;736:10:2;6966:7:3;6949:9;:25::i;:::-;6922:52;;7013:15;6993:16;:35;;6985:85;;;;-1:-1:-1;;;6985:85:3;;6641:2:9;6985:85:3;;;6623:21:9;6680:2;6660:18;;;6653:30;6719:34;6699:18;;;6692:62;-1:-1:-1;;;6770:18:9;;;6763:35;6815:19;;6985:85:3;;;;;;;;;7106:60;7115:5;7122:7;7150:15;7131:16;:34;7106:8;:60::i;3820:193::-;3899:4;736:10:2;3955:28:3;736:10:2;3972:2:3;3976:6;3955:9;:28::i;4076:151::-;-1:-1:-1;;;;;4192:18:3;;;4165:7;4192:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4076:151::o;2142:201:6:-;1122:13;:11;:13::i;:::-;-1:-1:-1;;;;;2231:22:6;::::1;2223:73;;;::::0;-1:-1:-1;;;2223:73:6;;3492:2:9;2223:73:6::1;::::0;::::1;3474:21:9::0;3531:2;3511:18;;;3504:30;3570:34;3550:18;;;3543:62;-1:-1:-1;;;3621:18:9;;;3614:36;3667:19;;2223:73:6::1;3464:228:9::0;2223:73:6::1;2307:28;2326:8;2307:18;:28::i;10398:380:3:-:0;-1:-1:-1;;;;;10534:19:3;;10526:68;;;;-1:-1:-1;;;10526:68:3;;6236:2:9;10526:68:3;;;6218:21:9;6275:2;6255:18;;;6248:30;6314:34;6294:18;;;6287:62;-1:-1:-1;;;6365:18:9;;;6358:34;6409:19;;10526:68:3;6208:226:9;10526:68:3;-1:-1:-1;;;;;10613:21:3;;10605:68;;;;-1:-1:-1;;;10605:68:3;;3899:2:9;10605:68:3;;;3881:21:9;3938:2;3918:18;;;3911:30;3977:34;3957:18;;;3950:62;-1:-1:-1;;;4028:18:9;;;4021:32;4070:19;;10605:68:3;3871:224:9;10605:68:3;-1:-1:-1;;;;;10686:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10738:32;;7351:25:9;;;10738:32:3;;7324:18:9;10738:32:3;;;;;;;;10398:380;;;:::o;11069:453::-;11204:24;11231:25;11241:5;11248:7;11231:9;:25::i;:::-;11204:52;;-1:-1:-1;;11271:16:3;:37;11267:248;;11353:6;11333:16;:26;;11325:68;;;;-1:-1:-1;;;11325:68:3;;4302:2:9;11325:68:3;;;4284:21:9;4341:2;4321:18;;;4314:30;4380:31;4360:18;;;4353:59;4429:18;;11325:68:3;4274:179:9;11325:68:3;11437:51;11446:5;11453:7;11481:6;11462:16;:25;11437:8;:51::i;:::-;11069:453;;;;:::o;7679:671::-;-1:-1:-1;;;;;7810:18:3;;7802:68;;;;-1:-1:-1;;;7802:68:3;;5830:2:9;7802:68:3;;;5812:21:9;5869:2;5849:18;;;5842:30;5908:34;5888:18;;;5881:62;-1:-1:-1;;;5959:18:9;;;5952:35;6004:19;;7802:68:3;5802:227:9;7802:68:3;-1:-1:-1;;;;;7889:16:3;;7881:64;;;;-1:-1:-1;;;7881:64:3;;2685:2:9;7881:64:3;;;2667:21:9;2724:2;2704:18;;;2697:30;2763:34;2743:18;;;2736:62;-1:-1:-1;;;2814:18:9;;;2807:33;2857:19;;7881:64:3;2657:225:9;7881:64:3;-1:-1:-1;;;;;8031:15:3;;8009:19;8031:15;;;;;;;;;;;8065:21;;;;8057:72;;;;-1:-1:-1;;;8057:72:3;;4660:2:9;8057:72:3;;;4642:21:9;4699:2;4679:18;;;4672:30;4738:34;4718:18;;;4711:62;-1:-1:-1;;;4789:18:9;;;4782:36;4835:19;;8057:72:3;4632:228:9;8057:72:3;-1:-1:-1;;;;;8165:15:3;;;:9;:15;;;;;;;;;;;8183:20;;;8165:38;;8225:13;;;;;;;;:23;;8197:6;;8165:9;8225:23;;8197:6;;8225:23;:::i;:::-;;;;;;;;8281:2;-1:-1:-1;;;;;8266:26:3;8275:4;-1:-1:-1;;;;;8266:26:3;;8285:6;8266:26;;;;7351:25:9;;7339:2;7324:18;;7306:76;8266:26:3;;;;;;;;8305:37;9369:591;1401:132:6;1309:6;;-1:-1:-1;;;;;1309:6:6;736:10:2;1465:23:6;1457:68;;;;-1:-1:-1;;;1457:68:6;;5067:2:9;1457:68:6;;;5049:21:9;;;5086:18;;;5079:30;5145:34;5125:18;;;5118:62;5197:18;;1457:68:6;5039:182:9;8637:399:3;-1:-1:-1;;;;;8721:21:3;;8713:65;;;;-1:-1:-1;;;8713:65:3;;7047:2:9;8713:65:3;;;7029:21:9;7086:2;7066:18;;;7059:30;7125:33;7105:18;;;7098:61;7176:18;;8713:65:3;7019:181:9;8713:65:3;8869:6;8853:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;;;;;;8886:18:3;;:9;:18;;;;;;;;;;:28;;8908:6;;8886:9;:28;;8908:6;;8886:28;:::i;:::-;;;;-1:-1:-1;;8930:37:3;;7351:25:9;;;-1:-1:-1;;;;;8930:37:3;;;8947:1;;8930:37;;7339:2:9;7324:18;8930:37:3;;;;;;;446:92:1;;:::o;9369:591:3:-;-1:-1:-1;;;;;9453:21:3;;9445:67;;;;-1:-1:-1;;;9445:67:3;;5428:2:9;9445:67:3;;;5410:21:9;5467:2;5447:18;;;5440:30;5506:34;5486:18;;;5479:62;-1:-1:-1;;;5557:18:9;;;5550:31;5598:19;;9445:67:3;5400:223:9;9445:67:3;-1:-1:-1;;;;;9612:18:3;;9587:22;9612:18;;;;;;;;;;;9649:24;;;;9641:71;;;;-1:-1:-1;;;9641:71:3;;3089:2:9;9641:71:3;;;3071:21:9;3128:2;3108:18;;;3101:30;3167:34;3147:18;;;3140:62;-1:-1:-1;;;3218:18:9;;;3211:32;3260:19;;9641:71:3;3061:224:9;9641:71:3;-1:-1:-1;;;;;9748:18:3;;:9;:18;;;;;;;;;;9769:23;;;9748:44;;9814:12;:22;;9786:6;;9748:9;9814:22;;9786:6;;9814:22;:::i;:::-;;;;-1:-1:-1;;9854:37:3;;7351:25:9;;;9880:1:3;;-1:-1:-1;;;;;9854:37:3;;;;;7339:2:9;7324:18;9854:37:3;7306:76:9;2503:191:6;2596:6;;;-1:-1:-1;;;;;2613:17:6;;;-1:-1:-1;;;;;;2613:17:6;;;;;;;2646:40;;2596:6;;;2613:17;2596:6;;2646:40;;2577:16;;2646:40;2503:191;;:::o;14:173:9:-;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:9:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:9:o;1280:190::-;1339:6;1392:2;1380:9;1371:7;1367:23;1363:32;1360:2;;;1413:6;1405;1398:22;1360:2;-1:-1:-1;1441:23:9;;1350:120;-1:-1:-1;1350:120:9:o;1875:603::-;1987:4;2016:2;2045;2034:9;2027:21;2077:6;2071:13;2120:6;2115:2;2104:9;2100:18;2093:34;2145:4;2158:140;2172:6;2169:1;2166:13;2158:140;;;2267:14;;;2263:23;;2257:30;2233:17;;;2252:2;2229:26;2222:66;2187:10;;2158:140;;;2316:6;2313:1;2310:13;2307:2;;;2386:4;2381:2;2372:6;2361:9;2357:22;2353:31;2346:45;2307:2;-1:-1:-1;2462:2:9;2441:15;-1:-1:-1;;2437:29:9;2422:45;;;;2469:2;2418:54;;1996:482;-1:-1:-1;;;1996:482:9:o;7576:128::-;7616:3;7647:1;7643:6;7640:1;7637:13;7634:2;;;7653:18;;:::i;:::-;-1:-1:-1;7689:9:9;;7624:80::o;7709:125::-;7749:4;7777:1;7774;7771:8;7768:2;;;7782:18;;:::i;:::-;-1:-1:-1;7819:9:9;;7758:76::o;7839:380::-;7918:1;7914:12;;;;7961;;;7982:2;;8036:4;8028:6;8024:17;8014:27;;7982:2;8089;8081:6;8078:14;8058:18;8055:38;8052:2;;;8135:10;8130:3;8126:20;8123:1;8116:31;8170:4;8167:1;8160:15;8198:4;8195:1;8188:15;8052:2;;7894:325;;;:::o;8224:127::-;8285:10;8280:3;8276:20;8273:1;8266:31;8316:4;8313:1;8306:15;8340:4;8337:1;8330:15"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "661600",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "allowance(address,address)": "infinite",
                "approve(address,uint256)": "22548",
                "balanceOf(address)": "1263",
                "burn(uint256)": "44150",
                "decimals()": "200",
                "decreaseAllowance(address,uint256)": "23573",
                "increaseAllowance(address,uint256)": "23624",
                "mint(address,uint256)": "infinite",
                "name()": "infinite",
                "owner()": "1068",
                "renounceOwnership()": "infinite",
                "symbol()": "infinite",
                "totalSupply()": "1049",
                "transfer(address,uint256)": "44426",
                "transferFrom(address,address,uint256)": "infinite",
                "transferOwnership(address)": "23724"
              }
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "burn(uint256)": "42966c68",
              "decimals()": "313ce567",
              "decreaseAllowance(address,uint256)": "a457c2d7",
              "increaseAllowance(address,uint256)": "39509351",
              "mint(address,uint256)": "40c10f19",
              "name()": "06fdde03",
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"A simple ERC20 Token implementation that also accepts donation for the project\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IBoolaToken.sol\":\"IBoolaToken\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/IBoolaToken.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./deps/ERC20.sol\\\";\\r\\nimport \\\"./deps/Ownable.sol\\\";\\r\\n\\r\\n/**\\r\\n * @notice A simple ERC20 Token implementation that also accepts donation for the project\\r\\n */\\r\\ncontract IBoolaToken is ERC20, Ownable {\\r\\n    constructor() ERC20(\\\"iBoola Token\\\", \\\"IBT\\\") {\\r\\n        \\r\\n        /// @notice mint 10000 tokens to the owner\\r\\n        _mint(_msgSender(), 6_000_000_000 * (10 ** 18));\\r\\n    }\\r\\n\\r\\n    function mint(address to, uint amount) public onlyOwner {\\r\\n        _mint(to, amount);\\r\\n    }\\r\\n\\r\\n    function burn(uint amount) public {\\r\\n        _burn(_msgSender(), amount);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0xb18c26f0518742f046e15e1f0789d7b6e9205c369181be575d95efd78e29d785\",\"license\":\"MIT\"},\"contracts/deps/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\"},\"contracts/deps/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\nimport \\\"./IERC20Metadata.sol\\\";\\r\\nimport \\\"./Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[from] = fromBalance - amount;\\r\\n        }\\r\\n        _balances[to] += amount;\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply += amount;\\r\\n        _balances[account] += amount;\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = accountBalance - amount;\\r\\n        }\\r\\n        _totalSupply -= amount;\\r\\n\\r\\n        emit Transfer(account, address(0), amount);\\r\\n\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\r\\n            unchecked {\\r\\n                _approve(owner, spender, currentAllowance - amount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0xedc5941d3d9eeee01b54be21aed23d8e6b94849be4fc0ad6f65a6a8bb8abada2\",\"license\":\"MIT\"},\"contracts/deps/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\"},\"contracts/deps/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0x94dc88716e92464d240916e16167a8a900f88a2a954fb23cd2ac7f8f96d4d1b4\",\"license\":\"MIT\"},\"contracts/deps/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _transferOwnership(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if the sender is not the owner.\\r\\n     */\\r\\n    function _checkOwner() internal view virtual {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Internal function without access restriction.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x420f5a52111e811b8e24fdaf4f863429d007b8410a7eedac170d4180607555f0\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1180,
                "contract": "contracts/IBoolaToken.sol:IBoolaToken",
                "label": "_balances",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1186,
                "contract": "contracts/IBoolaToken.sol:IBoolaToken",
                "label": "_allowances",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 1188,
                "contract": "contracts/IBoolaToken.sol:IBoolaToken",
                "label": "_totalSupply",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 1190,
                "contract": "contracts/IBoolaToken.sol:IBoolaToken",
                "label": "_name",
                "offset": 0,
                "slot": "3",
                "type": "t_string_storage"
              },
              {
                "astId": 1192,
                "contract": "contracts/IBoolaToken.sol:IBoolaToken",
                "label": "_symbol",
                "offset": 0,
                "slot": "4",
                "type": "t_string_storage"
              },
              {
                "astId": 1861,
                "contract": "contracts/IBoolaToken.sol:IBoolaToken",
                "label": "_owner",
                "offset": 0,
                "slot": "5",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "notice": "A simple ERC20 Token implementation that also accepts donation for the project",
            "version": 1
          }
        }
      },
      "contracts/deps/Context.sol": {
        "Context": {
          "abi": [],
          "devdoc": {
            "details": "Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.",
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deps/Context.sol\":\"Context\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deps/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/deps/ERC20.sol": {
        "ERC20": {
          "abi": [
            {
              "inputs": [
                {
                  "internalType": "string",
                  "name": "name_",
                  "type": "string"
                },
                {
                  "internalType": "string",
                  "name": "symbol_",
                  "type": "string"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "constructor"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "subtractedValue",
                  "type": "uint256"
                }
              ],
              "name": "decreaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "addedValue",
                  "type": "uint256"
                }
              ],
              "name": "increaseAllowance",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.",
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "See {IERC20-allowance}."
              },
              "approve(address,uint256)": {
                "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
              },
              "balanceOf(address)": {
                "details": "See {IERC20-balanceOf}."
              },
              "constructor": {
                "details": "Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction."
              },
              "decimals()": {
                "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
              },
              "decreaseAllowance(address,uint256)": {
                "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
              },
              "increaseAllowance(address,uint256)": {
                "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "symbol()": {
                "details": "Returns the symbol of the token, usually a shorter version of the name."
              },
              "totalSupply()": {
                "details": "See {IERC20-totalSupply}."
              },
              "transfer(address,uint256)": {
                "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
              },
              "transferFrom(address,address,uint256)": {
                "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:2039:9",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:9",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "78:845:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "127:24:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "136:5:9"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "143:5:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "129:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "129:20:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "129:20:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "106:6:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "114:4:9",
                                            "type": "",
                                            "value": "0x1f"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "102:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "102:17:9"
                                      },
                                      {
                                        "name": "end",
                                        "nodeType": "YulIdentifier",
                                        "src": "121:3:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "slt",
                                      "nodeType": "YulIdentifier",
                                      "src": "98:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "98:27:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "91:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "91:35:9"
                              },
                              "nodeType": "YulIf",
                              "src": "88:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "160:23:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "176:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "170:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "170:13:9"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "164:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "192:28:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "210:2:9",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "214:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "206:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "206:10:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "218:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "202:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "202:18:9"
                              },
                              "variables": [
                                {
                                  "name": "_2",
                                  "nodeType": "YulTypedName",
                                  "src": "196:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "243:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "245:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "245:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "245:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "235:2:9"
                                  },
                                  {
                                    "name": "_2",
                                    "nodeType": "YulIdentifier",
                                    "src": "239:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "232:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "232:10:9"
                              },
                              "nodeType": "YulIf",
                              "src": "229:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "274:17:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "288:2:9",
                                    "type": "",
                                    "value": "31"
                                  }
                                ],
                                "functionName": {
                                  "name": "not",
                                  "nodeType": "YulIdentifier",
                                  "src": "284:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "284:7:9"
                              },
                              "variables": [
                                {
                                  "name": "_3",
                                  "nodeType": "YulTypedName",
                                  "src": "278:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "300:23:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "320:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "314:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "314:9:9"
                              },
                              "variables": [
                                {
                                  "name": "memPtr",
                                  "nodeType": "YulTypedName",
                                  "src": "304:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "332:71:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "354:6:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "name": "_1",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "378:2:9"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "382:4:9",
                                                    "type": "",
                                                    "value": "0x1f"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "add",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "374:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "374:13:9"
                                              },
                                              {
                                                "name": "_3",
                                                "nodeType": "YulIdentifier",
                                                "src": "389:2:9"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "and",
                                              "nodeType": "YulIdentifier",
                                              "src": "370:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "370:22:9"
                                          },
                                          {
                                            "kind": "number",
                                            "nodeType": "YulLiteral",
                                            "src": "394:2:9",
                                            "type": "",
                                            "value": "63"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "366:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "366:31:9"
                                      },
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "399:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "362:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "362:40:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "350:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "350:53:9"
                              },
                              "variables": [
                                {
                                  "name": "newFreePtr",
                                  "nodeType": "YulTypedName",
                                  "src": "336:10:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "462:22:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [],
                                      "functionName": {
                                        "name": "panic_error_0x41",
                                        "nodeType": "YulIdentifier",
                                        "src": "464:16:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "464:18:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "464:18:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "421:10:9"
                                      },
                                      {
                                        "name": "_2",
                                        "nodeType": "YulIdentifier",
                                        "src": "433:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "gt",
                                      "nodeType": "YulIdentifier",
                                      "src": "418:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "418:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "newFreePtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "441:10:9"
                                      },
                                      {
                                        "name": "memPtr",
                                        "nodeType": "YulIdentifier",
                                        "src": "453:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "438:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "438:22:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "or",
                                  "nodeType": "YulIdentifier",
                                  "src": "415:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "415:46:9"
                              },
                              "nodeType": "YulIf",
                              "src": "412:2:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "500:2:9",
                                    "type": "",
                                    "value": "64"
                                  },
                                  {
                                    "name": "newFreePtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "504:10:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "493:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "493:22:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "493:22:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "memPtr",
                                    "nodeType": "YulIdentifier",
                                    "src": "531:6:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "539:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "524:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "524:18:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "524:18:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "551:14:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "561:4:9",
                                "type": "",
                                "value": "0x20"
                              },
                              "variables": [
                                {
                                  "name": "_4",
                                  "nodeType": "YulTypedName",
                                  "src": "555:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "611:24:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "620:5:9"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "627:5:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "613:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "613:20:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "613:20:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "offset",
                                            "nodeType": "YulIdentifier",
                                            "src": "588:6:9"
                                          },
                                          {
                                            "name": "_1",
                                            "nodeType": "YulIdentifier",
                                            "src": "596:2:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "add",
                                          "nodeType": "YulIdentifier",
                                          "src": "584:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "584:15:9"
                                      },
                                      {
                                        "name": "_4",
                                        "nodeType": "YulIdentifier",
                                        "src": "601:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "580:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "580:24:9"
                                  },
                                  {
                                    "name": "end",
                                    "nodeType": "YulIdentifier",
                                    "src": "606:3:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "577:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "577:33:9"
                              },
                              "nodeType": "YulIf",
                              "src": "574:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "644:14:9",
                              "value": {
                                "name": "array",
                                "nodeType": "YulIdentifier",
                                "src": "653:5:9"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "648:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "713:87:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "memPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "742:6:9"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "750:1:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "738:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "738:14:9"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "754:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "734:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "734:23:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "offset",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "773:6:9"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "781:1:9"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "769:3:9"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "769:14:9"
                                                },
                                                {
                                                  "name": "_4",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "785:2:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "765:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "765:23:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "759:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "759:30:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "727:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "727:63:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "727:63:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "678:1:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "681:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "675:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "675:9:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "685:19:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "687:15:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "696:1:9"
                                        },
                                        {
                                          "name": "_4",
                                          "nodeType": "YulIdentifier",
                                          "src": "699:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "692:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "692:10:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "687:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "671:3:9",
                                "statements": []
                              },
                              "src": "667:133:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "830:63:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "memPtr",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "859:6:9"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "867:2:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "855:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "855:15:9"
                                            },
                                            {
                                              "name": "_4",
                                              "nodeType": "YulIdentifier",
                                              "src": "872:2:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "851:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "851:24:9"
                                        },
                                        {
                                          "name": "array",
                                          "nodeType": "YulIdentifier",
                                          "src": "877:5:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "844:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "844:39:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "844:39:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "815:1:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "818:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "812:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "812:9:9"
                              },
                              "nodeType": "YulIf",
                              "src": "809:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "902:15:9",
                              "value": {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "911:6:9"
                              },
                              "variableNames": [
                                {
                                  "name": "array",
                                  "nodeType": "YulIdentifier",
                                  "src": "902:5:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_string_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "52:6:9",
                            "type": ""
                          },
                          {
                            "name": "end",
                            "nodeType": "YulTypedName",
                            "src": "60:3:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "array",
                            "nodeType": "YulTypedName",
                            "src": "68:5:9",
                            "type": ""
                          }
                        ],
                        "src": "14:909:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1046:474:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1092:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1101:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1109:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1094:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1094:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1094:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1067:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1076:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1063:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1063:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1088:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1059:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1059:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1056:2:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1127:30:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1147:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1141:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1141:16:9"
                              },
                              "variables": [
                                {
                                  "name": "offset",
                                  "nodeType": "YulTypedName",
                                  "src": "1131:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1166:28:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1184:2:9",
                                        "type": "",
                                        "value": "64"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1188:1:9",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1180:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1180:10:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1192:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "1176:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1176:18:9"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1170:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1221:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1230:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1238:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1223:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1223:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1223:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "1209:6:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1217:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1206:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1206:14:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1203:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1256:71:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1299:9:9"
                                      },
                                      {
                                        "name": "offset",
                                        "nodeType": "YulIdentifier",
                                        "src": "1310:6:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1295:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1295:22:9"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1319:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1266:28:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1266:61:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1256:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1336:41:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1362:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1373:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1358:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1358:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1352:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1352:25:9"
                              },
                              "variables": [
                                {
                                  "name": "offset_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1340:8:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1406:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1415:6:9"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1423:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1408:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1408:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1408:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "offset_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1392:8:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1402:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1389:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1389:16:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1386:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1441:73:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1484:9:9"
                                      },
                                      {
                                        "name": "offset_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1495:8:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1480:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1480:24:9"
                                  },
                                  {
                                    "name": "dataEnd",
                                    "nodeType": "YulIdentifier",
                                    "src": "1506:7:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_string_fromMemory",
                                  "nodeType": "YulIdentifier",
                                  "src": "1451:28:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1451:63:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1441:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1004:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1015:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1027:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1035:6:9",
                            "type": ""
                          }
                        ],
                        "src": "928:592:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1580:325:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1590:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1604:1:9",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "1607:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "1600:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1600:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "1590:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1621:38:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "1651:4:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1657:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1647:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1647:12:9"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "1625:18:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1698:31:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1700:27:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "1714:6:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1722:4:9",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "1710:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1710:17:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1700:6:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "1678:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "1671:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1671:26:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1668:2:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1788:111:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1809:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1816:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1821:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "1812:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1812:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1802:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1802:31:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1802:31:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1853:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1856:4:9",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1846:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1846:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1846:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1881:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "1884:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1874:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1874:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1874:15:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "1744:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "1767:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1775:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "1764:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1764:14:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "1741:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1741:38:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1738:2:9"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "1560:4:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "1569:6:9",
                            "type": ""
                          }
                        ],
                        "src": "1525:380:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1942:95:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1959:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1966:3:9",
                                        "type": "",
                                        "value": "224"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1971:10:9",
                                        "type": "",
                                        "value": "0x4e487b71"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "1962:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1962:20:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1952:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1952:31:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1952:31:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1999:1:9",
                                    "type": "",
                                    "value": "4"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2002:4:9",
                                    "type": "",
                                    "value": "0x41"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1992:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1992:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1992:15:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2023:1:9",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2026:4:9",
                                    "type": "",
                                    "value": "0x24"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2016:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2016:15:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2016:15:9"
                            }
                          ]
                        },
                        "name": "panic_error_0x41",
                        "nodeType": "YulFunctionDefinition",
                        "src": "1910:127:9"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_string_fromMemory(offset, end) -> array\n    {\n        if iszero(slt(add(offset, 0x1f), end)) { revert(array, array) }\n        let _1 := mload(offset)\n        let _2 := sub(shl(64, 1), 1)\n        if gt(_1, _2) { panic_error_0x41() }\n        let _3 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_1, 0x1f), _3), 63), _3))\n        if or(gt(newFreePtr, _2), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _1)\n        let _4 := 0x20\n        if gt(add(add(offset, _1), _4), end) { revert(array, array) }\n        let i := array\n        for { } lt(i, _1) { i := add(i, _4) }\n        {\n            mstore(add(add(memPtr, i), _4), mload(add(add(offset, i), _4)))\n        }\n        if gt(i, _1)\n        {\n            mstore(add(add(memPtr, _1), _4), array)\n        }\n        array := memPtr\n    }\n    function abi_decode_tuple_t_string_memory_ptrt_string_memory_ptr_fromMemory(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        let offset := mload(headStart)\n        let _1 := sub(shl(64, 1), 1)\n        if gt(offset, _1) { revert(value0, value0) }\n        value0 := abi_decode_string_fromMemory(add(headStart, offset), dataEnd)\n        let offset_1 := mload(add(headStart, 32))\n        if gt(offset_1, _1) { revert(value1, value1) }\n        value1 := abi_decode_string_fromMemory(add(headStart, offset_1), dataEnd)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n}",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "linkReferences": {},
              "object": "60806040523480156200001157600080fd5b5060405162000b0a38038062000b0a8339810160408190526200003491620001c1565b81516200004990600390602085019062000068565b5080516200005f90600490602084019062000068565b5050506200027b565b828054620000769062000228565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200011f578081fd5b81516001600160401b03808211156200013c576200013c62000265565b604051601f8301601f19908116603f0116810190828211818310171562000167576200016762000265565b8160405283815260209250868385880101111562000183578485fd5b8491505b83821015620001a6578582018301518183018401529082019062000187565b83821115620001b757848385830101525b9695505050505050565b60008060408385031215620001d4578182fd5b82516001600160401b0380821115620001eb578384fd5b620001f9868387016200010e565b935060208501519150808211156200020f578283fd5b506200021e858286016200010e565b9150509250929050565b600181811c908216806200023d57607f821691505b602082108114156200025f57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61087f806200028b6000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c39190610797565b60405180910390f35b6100df6100da36600461076e565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610733565b61024a565b604051601281526020016100c3565b6100df61013136600461076e565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461076e565b61029f565b6100df61018836600461076e565b61031f565b6100f361019b366004610701565b61032d565b6060600380546101af9061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101db9061080e565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107ea565b610358565b6060600480546101af9061080e565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107ea565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f1578081fd5b6106fa826106c4565b9392505050565b60008060408385031215610713578081fd5b61071c836106c4565b915061072a602084016106c4565b90509250929050565b600080600060608486031215610747578081fd5b610750846106c4565b925061075e602085016106c4565b9150604084013590509250925092565b60008060408385031215610780578182fd5b610789836106c4565b946020939093013593505050565b6000602080835283518082850152825b818110156107c3578581018301518582016040015282016107a7565b818111156107d45783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f2e55e8f1a044b72fe52d22efa75c85ab60de6c59f0e262e7040c48bef423d8c64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x40 MLOAD PUSH3 0xB0A CODESIZE SUB DUP1 PUSH3 0xB0A DUP4 CODECOPY DUP2 ADD PUSH1 0x40 DUP2 SWAP1 MSTORE PUSH3 0x34 SWAP2 PUSH3 0x1C1 JUMP JUMPDEST DUP2 MLOAD PUSH3 0x49 SWAP1 PUSH1 0x3 SWAP1 PUSH1 0x20 DUP6 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP DUP1 MLOAD PUSH3 0x5F SWAP1 PUSH1 0x4 SWAP1 PUSH1 0x20 DUP5 ADD SWAP1 PUSH3 0x68 JUMP JUMPDEST POP POP POP PUSH3 0x27B JUMP JUMPDEST DUP3 DUP1 SLOAD PUSH3 0x76 SWAP1 PUSH3 0x228 JUMP JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x1F ADD PUSH1 0x20 SWAP1 DIV DUP2 ADD SWAP3 DUP3 PUSH3 0x9A JUMPI PUSH1 0x0 DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 PUSH1 0x1F LT PUSH3 0xB5 JUMPI DUP1 MLOAD PUSH1 0xFF NOT AND DUP4 DUP1 ADD OR DUP6 SSTORE PUSH3 0xE5 JUMP JUMPDEST DUP3 DUP1 ADD PUSH1 0x1 ADD DUP6 SSTORE DUP3 ISZERO PUSH3 0xE5 JUMPI SWAP2 DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH3 0xE5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH3 0xC8 JUMP JUMPDEST POP PUSH3 0xF3 SWAP3 SWAP2 POP PUSH3 0xF7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH3 0xF3 JUMPI PUSH1 0x0 DUP2 SSTORE PUSH1 0x1 ADD PUSH3 0xF8 JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH3 0x11F JUMPI DUP1 DUP2 REVERT JUMPDEST DUP2 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x13C JUMPI PUSH3 0x13C PUSH3 0x265 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x1F DUP4 ADD PUSH1 0x1F NOT SWAP1 DUP2 AND PUSH1 0x3F ADD AND DUP2 ADD SWAP1 DUP3 DUP3 GT DUP2 DUP4 LT OR ISZERO PUSH3 0x167 JUMPI PUSH3 0x167 PUSH3 0x265 JUMP JUMPDEST DUP2 PUSH1 0x40 MSTORE DUP4 DUP2 MSTORE PUSH1 0x20 SWAP3 POP DUP7 DUP4 DUP6 DUP9 ADD ADD GT ISZERO PUSH3 0x183 JUMPI DUP5 DUP6 REVERT JUMPDEST DUP5 SWAP2 POP JUMPDEST DUP4 DUP3 LT ISZERO PUSH3 0x1A6 JUMPI DUP6 DUP3 ADD DUP4 ADD MLOAD DUP2 DUP4 ADD DUP5 ADD MSTORE SWAP1 DUP3 ADD SWAP1 PUSH3 0x187 JUMP JUMPDEST DUP4 DUP3 GT ISZERO PUSH3 0x1B7 JUMPI DUP5 DUP4 DUP6 DUP4 ADD ADD MSTORE JUMPDEST SWAP7 SWAP6 POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH3 0x1D4 JUMPI DUP2 DUP3 REVERT JUMPDEST DUP3 MLOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0x40 SHL SUB DUP1 DUP3 GT ISZERO PUSH3 0x1EB JUMPI DUP4 DUP5 REVERT JUMPDEST PUSH3 0x1F9 DUP7 DUP4 DUP8 ADD PUSH3 0x10E JUMP JUMPDEST SWAP4 POP PUSH1 0x20 DUP6 ADD MLOAD SWAP2 POP DUP1 DUP3 GT ISZERO PUSH3 0x20F JUMPI DUP3 DUP4 REVERT JUMPDEST POP PUSH3 0x21E DUP6 DUP3 DUP7 ADD PUSH3 0x10E JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH3 0x23D JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH3 0x25F JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x87F DUP1 PUSH3 0x28B PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x701 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6FA DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x713 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x71C DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72A PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x747 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x750 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x75E PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x780 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x789 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xE5 0x5E DUP16 BYTE DIV 0x4B PUSH19 0xFE52D22EFA75C85AB60DE6C59F0E262E7040C4 DUP12 0xEF TIMESTAMP RETURNDATASIZE DUP13 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1416:11562:3:-:0;;;2010:116;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2077:13;;;;:5;;:13;;;;;:::i;:::-;-1:-1:-1;2101:17:3;;;;:7;;:17;;;;;:::i;:::-;;2010:116;;1416:11562;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1416:11562:3;;;-1:-1:-1;1416:11562:3;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:909:9;68:5;121:3;114:4;106:6;102:17;98:27;88:2;;143:5;136;129:20;88:2;170:13;;-1:-1:-1;;;;;232:10:9;;;229:2;;;245:18;;:::i;:::-;320:2;314:9;288:2;374:13;;-1:-1:-1;;370:22:9;;;394:2;366:31;362:40;350:53;;;418:18;;;438:22;;;415:46;412:2;;;464:18;;:::i;:::-;504:10;500:2;493:22;539:2;531:6;524:18;561:4;551:14;;606:3;601:2;596;588:6;584:15;580:24;577:33;574:2;;;627:5;620;613:20;574:2;653:5;644:14;;667:133;681:2;678:1;675:9;667:133;;;769:14;;;765:23;;759:30;738:14;;;734:23;;727:63;692:10;;;;667:133;;;818:2;815:1;812:9;809:2;;;877:5;872:2;867;859:6;855:15;851:24;844:39;809:2;911:6;78:845;-1:-1:-1;;;;;;78:845:9:o;928:592::-;1027:6;1035;1088:2;1076:9;1067:7;1063:23;1059:32;1056:2;;;1109:6;1101;1094:22;1056:2;1141:16;;-1:-1:-1;;;;;1206:14:9;;;1203:2;;;1238:6;1230;1223:22;1203:2;1266:61;1319:7;1310:6;1299:9;1295:22;1266:61;:::i;:::-;1256:71;;1373:2;1362:9;1358:18;1352:25;1336:41;;1402:2;1392:8;1389:16;1386:2;;;1423:6;1415;1408:22;1386:2;;1451:63;1506:7;1495:8;1484:9;1480:24;1451:63;:::i;:::-;1441:73;;;1046:474;;;;;:::o;1525:380::-;1604:1;1600:12;;;;1647;;;1668:2;;1722:4;1714:6;1710:17;1700:27;;1668:2;1775;1767:6;1764:14;1744:18;1741:38;1738:2;;;1821:10;1816:3;1812:20;1809:1;1802:31;1856:4;1853:1;1846:15;1884:4;1881:1;1874:15;1738:2;;1580:325;;;:::o;1910:127::-;1971:10;1966:3;1962:20;1959:1;1952:31;2002:4;1999:1;1992:15;2026:4;2023:1;2016:15;1942:95;1416:11562:3;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [
                {
                  "ast": {
                    "nodeType": "YulBlock",
                    "src": "0:5856:9",
                    "statements": [
                      {
                        "nodeType": "YulBlock",
                        "src": "6:3:9",
                        "statements": []
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "63:124:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "73:29:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "offset",
                                    "nodeType": "YulIdentifier",
                                    "src": "95:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "82:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "82:20:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value",
                                  "nodeType": "YulIdentifier",
                                  "src": "73:5:9"
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "165:16:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "174:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "177:1:9",
                                          "type": "",
                                          "value": "0"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "167:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "167:12:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "167:12:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "value",
                                        "nodeType": "YulIdentifier",
                                        "src": "124:5:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "name": "value",
                                            "nodeType": "YulIdentifier",
                                            "src": "135:5:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "150:3:9",
                                                    "type": "",
                                                    "value": "160"
                                                  },
                                                  {
                                                    "kind": "number",
                                                    "nodeType": "YulLiteral",
                                                    "src": "155:1:9",
                                                    "type": "",
                                                    "value": "1"
                                                  }
                                                ],
                                                "functionName": {
                                                  "name": "shl",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "146:3:9"
                                                },
                                                "nodeType": "YulFunctionCall",
                                                "src": "146:11:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "159:1:9",
                                                "type": "",
                                                "value": "1"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "sub",
                                              "nodeType": "YulIdentifier",
                                              "src": "142:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "142:19:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "131:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "131:31:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "eq",
                                      "nodeType": "YulIdentifier",
                                      "src": "121:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "121:42:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "114:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "114:50:9"
                              },
                              "nodeType": "YulIf",
                              "src": "111:2:9"
                            }
                          ]
                        },
                        "name": "abi_decode_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "offset",
                            "nodeType": "YulTypedName",
                            "src": "42:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value",
                            "nodeType": "YulTypedName",
                            "src": "53:5:9",
                            "type": ""
                          }
                        ],
                        "src": "14:173:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "262:126:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "308:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "317:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "325:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "310:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "310:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "310:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "283:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "292:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "279:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "279:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "304:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "275:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "275:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "272:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "343:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "372:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "353:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "353:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "343:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "228:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "239:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "251:6:9",
                            "type": ""
                          }
                        ],
                        "src": "192:196:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "480:183:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "526:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "535:6:9"
                                        },
                                        {
                                          "name": "value1",
                                          "nodeType": "YulIdentifier",
                                          "src": "543:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "528:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "528:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "528:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "501:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "510:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "497:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "497:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "522:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "493:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "493:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "490:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "561:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "590:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "571:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "571:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "561:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "609:48:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "642:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "653:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "638:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "638:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "619:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "619:38:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "609:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_address",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "438:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "449:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "461:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "469:6:9",
                            "type": ""
                          }
                        ],
                        "src": "393:270:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "772:234:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "818:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "827:6:9"
                                        },
                                        {
                                          "name": "value2",
                                          "nodeType": "YulIdentifier",
                                          "src": "835:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "820:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "820:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "820:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "793:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "802:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "789:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "789:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "814:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "785:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "785:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "782:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "853:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "882:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "863:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "863:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "853:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "901:48:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "934:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "945:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "930:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "930:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "911:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "911:38:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "901:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "958:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "985:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "996:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "981:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "981:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "968:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "968:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value2",
                                  "nodeType": "YulIdentifier",
                                  "src": "958:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "722:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "733:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "745:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "753:6:9",
                            "type": ""
                          },
                          {
                            "name": "value2",
                            "nodeType": "YulTypedName",
                            "src": "761:6:9",
                            "type": ""
                          }
                        ],
                        "src": "668:338:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1098:177:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1144:26:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1153:6:9"
                                        },
                                        {
                                          "name": "value0",
                                          "nodeType": "YulIdentifier",
                                          "src": "1161:6:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "1146:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1146:22:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1146:22:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "dataEnd",
                                        "nodeType": "YulIdentifier",
                                        "src": "1119:7:9"
                                      },
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1128:9:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "sub",
                                      "nodeType": "YulIdentifier",
                                      "src": "1115:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1115:23:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1140:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "slt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1111:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1111:32:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1108:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1179:39:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1208:9:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "abi_decode_address",
                                  "nodeType": "YulIdentifier",
                                  "src": "1189:18:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1189:29:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value0",
                                  "nodeType": "YulIdentifier",
                                  "src": "1179:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "1227:42:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1254:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1265:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1250:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1250:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "calldataload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1237:12:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1237:32:9"
                              },
                              "variableNames": [
                                {
                                  "name": "value1",
                                  "nodeType": "YulIdentifier",
                                  "src": "1227:6:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_decode_tuple_t_addresst_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1056:9:9",
                            "type": ""
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulTypedName",
                            "src": "1067:7:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1079:6:9",
                            "type": ""
                          },
                          {
                            "name": "value1",
                            "nodeType": "YulTypedName",
                            "src": "1087:6:9",
                            "type": ""
                          }
                        ],
                        "src": "1011:264:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1375:92:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "1385:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1397:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1408:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "1393:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1393:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "1385:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1427:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "name": "value0",
                                            "nodeType": "YulIdentifier",
                                            "src": "1452:6:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "iszero",
                                          "nodeType": "YulIdentifier",
                                          "src": "1445:6:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "1445:14:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "iszero",
                                      "nodeType": "YulIdentifier",
                                      "src": "1438:6:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1438:22:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1420:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1420:41:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1420:41:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1344:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1355:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1366:4:9",
                            "type": ""
                          }
                        ],
                        "src": "1280:187:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1593:482:9",
                          "statements": [
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1603:12:9",
                              "value": {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1613:2:9",
                                "type": "",
                                "value": "32"
                              },
                              "variables": [
                                {
                                  "name": "_1",
                                  "nodeType": "YulTypedName",
                                  "src": "1607:2:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "1631:9:9"
                                  },
                                  {
                                    "name": "_1",
                                    "nodeType": "YulIdentifier",
                                    "src": "1642:2:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1624:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1624:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1624:21:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1654:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "1674:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mload",
                                  "nodeType": "YulIdentifier",
                                  "src": "1668:5:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1668:13:9"
                              },
                              "variables": [
                                {
                                  "name": "length",
                                  "nodeType": "YulTypedName",
                                  "src": "1658:6:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "1701:9:9"
                                      },
                                      {
                                        "name": "_1",
                                        "nodeType": "YulIdentifier",
                                        "src": "1712:2:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1697:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1697:18:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1717:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1690:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1690:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1690:34:9"
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "1733:13:9",
                              "value": {
                                "name": "tail",
                                "nodeType": "YulIdentifier",
                                "src": "1742:4:9"
                              },
                              "variables": [
                                {
                                  "name": "i",
                                  "nodeType": "YulTypedName",
                                  "src": "1737:1:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1805:90:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1834:9:9"
                                                },
                                                {
                                                  "name": "i",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1845:1:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1830:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1830:17:9"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1849:2:9",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1826:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1826:26:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "name": "value0",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1868:6:9"
                                                    },
                                                    {
                                                      "name": "i",
                                                      "nodeType": "YulIdentifier",
                                                      "src": "1876:1:9"
                                                    }
                                                  ],
                                                  "functionName": {
                                                    "name": "add",
                                                    "nodeType": "YulIdentifier",
                                                    "src": "1864:3:9"
                                                  },
                                                  "nodeType": "YulFunctionCall",
                                                  "src": "1864:14:9"
                                                },
                                                {
                                                  "name": "_1",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1880:2:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1860:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1860:23:9"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "mload",
                                            "nodeType": "YulIdentifier",
                                            "src": "1854:5:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1854:30:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1819:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1819:66:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1819:66:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1766:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1769:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "lt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1763:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1763:13:9"
                              },
                              "nodeType": "YulForLoop",
                              "post": {
                                "nodeType": "YulBlock",
                                "src": "1777:19:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "1779:15:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "i",
                                          "nodeType": "YulIdentifier",
                                          "src": "1788:1:9"
                                        },
                                        {
                                          "name": "_1",
                                          "nodeType": "YulIdentifier",
                                          "src": "1791:2:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "add",
                                        "nodeType": "YulIdentifier",
                                        "src": "1784:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1784:10:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "i",
                                        "nodeType": "YulIdentifier",
                                        "src": "1779:1:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "pre": {
                                "nodeType": "YulBlock",
                                "src": "1759:3:9",
                                "statements": []
                              },
                              "src": "1755:140:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "1929:69:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "name": "headStart",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1958:9:9"
                                                },
                                                {
                                                  "name": "length",
                                                  "nodeType": "YulIdentifier",
                                                  "src": "1969:6:9"
                                                }
                                              ],
                                              "functionName": {
                                                "name": "add",
                                                "nodeType": "YulIdentifier",
                                                "src": "1954:3:9"
                                              },
                                              "nodeType": "YulFunctionCall",
                                              "src": "1954:22:9"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "1978:2:9",
                                              "type": "",
                                              "value": "64"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "add",
                                            "nodeType": "YulIdentifier",
                                            "src": "1950:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "1950:31:9"
                                        },
                                        {
                                          "name": "tail",
                                          "nodeType": "YulIdentifier",
                                          "src": "1983:4:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "1943:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "1943:45:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "1943:45:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "i",
                                    "nodeType": "YulIdentifier",
                                    "src": "1910:1:9"
                                  },
                                  {
                                    "name": "length",
                                    "nodeType": "YulIdentifier",
                                    "src": "1913:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "1907:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1907:13:9"
                              },
                              "nodeType": "YulIf",
                              "src": "1904:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2007:62:9",
                              "value": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2023:9:9"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "name": "length",
                                                "nodeType": "YulIdentifier",
                                                "src": "2042:6:9"
                                              },
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2050:2:9",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "add",
                                              "nodeType": "YulIdentifier",
                                              "src": "2038:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2038:15:9"
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "kind": "number",
                                                "nodeType": "YulLiteral",
                                                "src": "2059:2:9",
                                                "type": "",
                                                "value": "31"
                                              }
                                            ],
                                            "functionName": {
                                              "name": "not",
                                              "nodeType": "YulIdentifier",
                                              "src": "2055:3:9"
                                            },
                                            "nodeType": "YulFunctionCall",
                                            "src": "2055:7:9"
                                          }
                                        ],
                                        "functionName": {
                                          "name": "and",
                                          "nodeType": "YulIdentifier",
                                          "src": "2034:3:9"
                                        },
                                        "nodeType": "YulFunctionCall",
                                        "src": "2034:29:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2019:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2019:45:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2066:2:9",
                                    "type": "",
                                    "value": "64"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2015:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2015:54:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2007:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "1562:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "1573:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "1584:4:9",
                            "type": ""
                          }
                        ],
                        "src": "1472:603:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2254:225:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2271:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2282:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2264:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2264:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2264:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2305:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2316:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2301:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2301:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2321:2:9",
                                    "type": "",
                                    "value": "35"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2294:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2294:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2294:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2344:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2355:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2340:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2340:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2360:34:9",
                                    "type": "",
                                    "value": "ERC20: transfer to the zero addr"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2333:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2333:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2333:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2415:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2426:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2411:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2411:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2431:5:9",
                                    "type": "",
                                    "value": "ess"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2404:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2404:33:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2404:33:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2446:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2458:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2469:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2454:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2454:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2446:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2231:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2245:4:9",
                            "type": ""
                          }
                        ],
                        "src": "2080:399:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "2658:224:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2675:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2686:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2668:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2668:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2668:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2709:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2720:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2705:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2705:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2725:2:9",
                                    "type": "",
                                    "value": "34"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2698:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2698:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2698:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2748:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2759:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2744:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2744:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2764:34:9",
                                    "type": "",
                                    "value": "ERC20: approve to the zero addre"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2737:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2737:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2737:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "2819:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2830:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2815:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2815:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "2835:4:9",
                                    "type": "",
                                    "value": "ss"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "2808:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2808:32:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2808:32:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "2849:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "2861:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2872:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "2857:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2857:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "2849:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "2635:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "2649:4:9",
                            "type": ""
                          }
                        ],
                        "src": "2484:398:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3061:179:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3078:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3089:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3071:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3071:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3071:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3112:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3123:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3108:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3108:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3128:2:9",
                                    "type": "",
                                    "value": "29"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3101:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3101:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3101:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3151:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3162:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3147:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3147:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3167:31:9",
                                    "type": "",
                                    "value": "ERC20: insufficient allowance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3140:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3140:59:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3140:59:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3208:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3220:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3231:2:9",
                                    "type": "",
                                    "value": "96"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3216:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3216:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3208:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3038:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3052:4:9",
                            "type": ""
                          }
                        ],
                        "src": "2887:353:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3419:228:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3436:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3447:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3429:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3429:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3429:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3470:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3481:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3466:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3466:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3486:2:9",
                                    "type": "",
                                    "value": "38"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3459:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3459:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3459:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3509:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3520:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3505:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3505:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3525:34:9",
                                    "type": "",
                                    "value": "ERC20: transfer amount exceeds b"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3498:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3498:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3498:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3580:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3591:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3576:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3576:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3596:8:9",
                                    "type": "",
                                    "value": "alance"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3569:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3569:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3569:36:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "3614:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3626:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3637:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "3622:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3622:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "3614:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3396:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3410:4:9",
                            "type": ""
                          }
                        ],
                        "src": "3245:402:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "3826:227:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "3843:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3854:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3836:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3836:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3836:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3877:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3888:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3873:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3873:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "3893:2:9",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3866:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3866:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3866:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3916:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3927:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3912:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3912:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "3932:34:9",
                                    "type": "",
                                    "value": "ERC20: transfer from the zero ad"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3905:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3905:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3905:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "3987:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "3998:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "3983:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "3983:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4003:7:9",
                                    "type": "",
                                    "value": "dress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "3976:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "3976:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "3976:35:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4020:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4032:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4043:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4028:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4028:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4020:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "3803:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "3817:4:9",
                            "type": ""
                          }
                        ],
                        "src": "3652:401:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4232:226:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4249:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4260:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4242:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4242:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4242:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4283:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4294:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4279:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4279:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4299:2:9",
                                    "type": "",
                                    "value": "36"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4272:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4272:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4272:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4322:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4333:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4318:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4318:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4338:34:9",
                                    "type": "",
                                    "value": "ERC20: approve from the zero add"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4311:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4311:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4311:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4393:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4404:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4389:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4389:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4409:6:9",
                                    "type": "",
                                    "value": "ress"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4382:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4382:34:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4382:34:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4425:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4437:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4448:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4433:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4433:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4425:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4209:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4223:4:9",
                            "type": ""
                          }
                        ],
                        "src": "4058:400:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4637:227:9",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4654:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4665:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4647:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4647:21:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4647:21:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4688:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4699:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4684:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4684:18:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4704:2:9",
                                    "type": "",
                                    "value": "37"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4677:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4677:30:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4677:30:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4727:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4738:2:9",
                                        "type": "",
                                        "value": "64"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4723:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4723:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4743:34:9",
                                    "type": "",
                                    "value": "ERC20: decreased allowance below"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4716:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4716:62:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4716:62:9"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "headStart",
                                        "nodeType": "YulIdentifier",
                                        "src": "4798:9:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "4809:2:9",
                                        "type": "",
                                        "value": "96"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "4794:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "4794:18:9"
                                  },
                                  {
                                    "kind": "string",
                                    "nodeType": "YulLiteral",
                                    "src": "4814:7:9",
                                    "type": "",
                                    "value": " zero"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "4787:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4787:35:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "4787:35:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "4831:27:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4843:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "4854:3:9",
                                    "type": "",
                                    "value": "128"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4839:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4839:19:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4831:4:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4614:9:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4628:4:9",
                            "type": ""
                          }
                        ],
                        "src": "4463:401:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "4970:76:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "4980:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "4992:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5003:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "4988:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "4988:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "4980:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5022:9:9"
                                  },
                                  {
                                    "name": "value0",
                                    "nodeType": "YulIdentifier",
                                    "src": "5033:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5015:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5015:25:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5015:25:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "4939:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "4950:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "4961:4:9",
                            "type": ""
                          }
                        ],
                        "src": "4869:177:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5148:87:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5158:26:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5170:9:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5181:2:9",
                                    "type": "",
                                    "value": "32"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5166:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5166:18:9"
                              },
                              "variableNames": [
                                {
                                  "name": "tail",
                                  "nodeType": "YulIdentifier",
                                  "src": "5158:4:9"
                                }
                              ]
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "name": "headStart",
                                    "nodeType": "YulIdentifier",
                                    "src": "5200:9:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "value0",
                                        "nodeType": "YulIdentifier",
                                        "src": "5215:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5223:4:9",
                                        "type": "",
                                        "value": "0xff"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "and",
                                      "nodeType": "YulIdentifier",
                                      "src": "5211:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5211:17:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "5193:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5193:36:9"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "5193:36:9"
                            }
                          ]
                        },
                        "name": "abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "headStart",
                            "nodeType": "YulTypedName",
                            "src": "5117:9:9",
                            "type": ""
                          },
                          {
                            "name": "value0",
                            "nodeType": "YulTypedName",
                            "src": "5128:6:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "tail",
                            "nodeType": "YulTypedName",
                            "src": "5139:4:9",
                            "type": ""
                          }
                        ],
                        "src": "5051:184:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5288:181:9",
                          "statements": [
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5323:115:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "sum",
                                          "nodeType": "YulIdentifier",
                                          "src": "5344:3:9"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5353:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5358:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "5349:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5349:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5337:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5337:33:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5337:33:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5390:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5393:4:9",
                                          "type": "",
                                          "value": "0x11"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5383:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5383:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5383:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "name": "sum",
                                          "nodeType": "YulIdentifier",
                                          "src": "5418:3:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5423:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5411:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5411:17:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5411:17:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5304:1:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "y",
                                        "nodeType": "YulIdentifier",
                                        "src": "5311:1:9"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "not",
                                      "nodeType": "YulIdentifier",
                                      "src": "5307:3:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5307:6:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "gt",
                                  "nodeType": "YulIdentifier",
                                  "src": "5301:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5301:13:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5298:2:9"
                            },
                            {
                              "nodeType": "YulAssignment",
                              "src": "5447:16:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "x",
                                    "nodeType": "YulIdentifier",
                                    "src": "5458:1:9"
                                  },
                                  {
                                    "name": "y",
                                    "nodeType": "YulIdentifier",
                                    "src": "5461:1:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "add",
                                  "nodeType": "YulIdentifier",
                                  "src": "5454:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5454:9:9"
                              },
                              "variableNames": [
                                {
                                  "name": "sum",
                                  "nodeType": "YulIdentifier",
                                  "src": "5447:3:9"
                                }
                              ]
                            }
                          ]
                        },
                        "name": "checked_add_t_uint256",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "x",
                            "nodeType": "YulTypedName",
                            "src": "5271:1:9",
                            "type": ""
                          },
                          {
                            "name": "y",
                            "nodeType": "YulTypedName",
                            "src": "5274:1:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "sum",
                            "nodeType": "YulTypedName",
                            "src": "5280:3:9",
                            "type": ""
                          }
                        ],
                        "src": "5240:229:9"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "5529:325:9",
                          "statements": [
                            {
                              "nodeType": "YulAssignment",
                              "src": "5539:22:9",
                              "value": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5553:1:9",
                                    "type": "",
                                    "value": "1"
                                  },
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "5556:4:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "shr",
                                  "nodeType": "YulIdentifier",
                                  "src": "5549:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5549:12:9"
                              },
                              "variableNames": [
                                {
                                  "name": "length",
                                  "nodeType": "YulIdentifier",
                                  "src": "5539:6:9"
                                }
                              ]
                            },
                            {
                              "nodeType": "YulVariableDeclaration",
                              "src": "5570:38:9",
                              "value": {
                                "arguments": [
                                  {
                                    "name": "data",
                                    "nodeType": "YulIdentifier",
                                    "src": "5600:4:9"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "5606:1:9",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "5596:3:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5596:12:9"
                              },
                              "variables": [
                                {
                                  "name": "outOfPlaceEncoding",
                                  "nodeType": "YulTypedName",
                                  "src": "5574:18:9",
                                  "type": ""
                                }
                              ]
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5647:31:9",
                                "statements": [
                                  {
                                    "nodeType": "YulAssignment",
                                    "src": "5649:27:9",
                                    "value": {
                                      "arguments": [
                                        {
                                          "name": "length",
                                          "nodeType": "YulIdentifier",
                                          "src": "5663:6:9"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5671:4:9",
                                          "type": "",
                                          "value": "0x7f"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "and",
                                        "nodeType": "YulIdentifier",
                                        "src": "5659:3:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5659:17:9"
                                    },
                                    "variableNames": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5649:6:9"
                                      }
                                    ]
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "5627:18:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "5620:6:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5620:26:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5617:2:9"
                            },
                            {
                              "body": {
                                "nodeType": "YulBlock",
                                "src": "5737:111:9",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5758:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5765:3:9",
                                              "type": "",
                                              "value": "224"
                                            },
                                            {
                                              "kind": "number",
                                              "nodeType": "YulLiteral",
                                              "src": "5770:10:9",
                                              "type": "",
                                              "value": "0x4e487b71"
                                            }
                                          ],
                                          "functionName": {
                                            "name": "shl",
                                            "nodeType": "YulIdentifier",
                                            "src": "5761:3:9"
                                          },
                                          "nodeType": "YulFunctionCall",
                                          "src": "5761:20:9"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5751:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5751:31:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5751:31:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5802:1:9",
                                          "type": "",
                                          "value": "4"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5805:4:9",
                                          "type": "",
                                          "value": "0x22"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "mstore",
                                        "nodeType": "YulIdentifier",
                                        "src": "5795:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5795:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5795:15:9"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5830:1:9",
                                          "type": "",
                                          "value": "0"
                                        },
                                        {
                                          "kind": "number",
                                          "nodeType": "YulLiteral",
                                          "src": "5833:4:9",
                                          "type": "",
                                          "value": "0x24"
                                        }
                                      ],
                                      "functionName": {
                                        "name": "revert",
                                        "nodeType": "YulIdentifier",
                                        "src": "5823:6:9"
                                      },
                                      "nodeType": "YulFunctionCall",
                                      "src": "5823:15:9"
                                    },
                                    "nodeType": "YulExpressionStatement",
                                    "src": "5823:15:9"
                                  }
                                ]
                              },
                              "condition": {
                                "arguments": [
                                  {
                                    "name": "outOfPlaceEncoding",
                                    "nodeType": "YulIdentifier",
                                    "src": "5693:18:9"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "length",
                                        "nodeType": "YulIdentifier",
                                        "src": "5716:6:9"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "5724:2:9",
                                        "type": "",
                                        "value": "32"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "lt",
                                      "nodeType": "YulIdentifier",
                                      "src": "5713:2:9"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "5713:14:9"
                                  }
                                ],
                                "functionName": {
                                  "name": "eq",
                                  "nodeType": "YulIdentifier",
                                  "src": "5690:2:9"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "5690:38:9"
                              },
                              "nodeType": "YulIf",
                              "src": "5687:2:9"
                            }
                          ]
                        },
                        "name": "extract_byte_array_length",
                        "nodeType": "YulFunctionDefinition",
                        "parameters": [
                          {
                            "name": "data",
                            "nodeType": "YulTypedName",
                            "src": "5509:4:9",
                            "type": ""
                          }
                        ],
                        "returnVariables": [
                          {
                            "name": "length",
                            "nodeType": "YulTypedName",
                            "src": "5518:6:9",
                            "type": ""
                          }
                        ],
                        "src": "5474:380:9"
                      }
                    ]
                  },
                  "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value1, value1) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_decode_tuple_t_addresst_addresst_uint256(headStart, dataEnd) -> value0, value1, value2\n    {\n        if slt(sub(dataEnd, headStart), 96) { revert(value2, value2) }\n        value0 := abi_decode_address(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n        value2 := calldataload(add(headStart, 64))\n    }\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(value0, value0) }\n        value0 := abi_decode_address(headStart)\n        value1 := calldataload(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_string_memory_ptr__to_t_string_memory_ptr__fromStack_reversed(headStart, value0) -> tail\n    {\n        let _1 := 32\n        mstore(headStart, _1)\n        let length := mload(value0)\n        mstore(add(headStart, _1), length)\n        let i := tail\n        for { } lt(i, length) { i := add(i, _1) }\n        {\n            mstore(add(add(headStart, i), 64), mload(add(add(value0, i), _1)))\n        }\n        if gt(i, length)\n        {\n            mstore(add(add(headStart, length), 64), tail)\n        }\n        tail := add(add(headStart, and(add(length, 31), not(31))), 64)\n    }\n    function abi_encode_tuple_t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 35)\n        mstore(add(headStart, 64), \"ERC20: transfer to the zero addr\")\n        mstore(add(headStart, 96), \"ess\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 34)\n        mstore(add(headStart, 64), \"ERC20: approve to the zero addre\")\n        mstore(add(headStart, 96), \"ss\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 29)\n        mstore(add(headStart, 64), \"ERC20: insufficient allowance\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 38)\n        mstore(add(headStart, 64), \"ERC20: transfer amount exceeds b\")\n        mstore(add(headStart, 96), \"alance\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: transfer from the zero ad\")\n        mstore(add(headStart, 96), \"dress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"ERC20: approve from the zero add\")\n        mstore(add(headStart, 96), \"ress\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 37)\n        mstore(add(headStart, 64), \"ERC20: decreased allowance below\")\n        mstore(add(headStart, 96), \" zero\")\n        tail := add(headStart, 128)\n    }\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_uint8__to_t_uint8__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, 0xff))\n    }\n    function checked_add_t_uint256(x, y) -> sum\n    {\n        if gt(x, not(y))\n        {\n            mstore(sum, shl(224, 0x4e487b71))\n            mstore(4, 0x11)\n            revert(sum, 0x24)\n        }\n        sum := add(x, y)\n    }\n    function extract_byte_array_length(data) -> length\n    {\n        length := shr(1, data)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) { length := and(length, 0x7f) }\n        if eq(outOfPlaceEncoding, lt(length, 32))\n        {\n            mstore(0, shl(224, 0x4e487b71))\n            mstore(4, 0x22)\n            revert(0, 0x24)\n        }\n    }\n}",
                  "id": 9,
                  "language": "Yul",
                  "name": "#utility.yul"
                }
              ],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "608060405234801561001057600080fd5b50600436106100a95760003560e01c80633950935111610071578063395093511461012357806370a082311461013657806395d89b411461015f578063a457c2d714610167578063a9059cbb1461017a578063dd62ed3e1461018d57600080fd5b806306fdde03146100ae578063095ea7b3146100cc57806318160ddd146100ef57806323b872dd14610101578063313ce56714610114575b600080fd5b6100b66101a0565b6040516100c39190610797565b60405180910390f35b6100df6100da36600461076e565b610232565b60405190151581526020016100c3565b6002545b6040519081526020016100c3565b6100df61010f366004610733565b61024a565b604051601281526020016100c3565b6100df61013136600461076e565b61026e565b6100f36101443660046106e0565b6001600160a01b031660009081526020819052604090205490565b6100b6610290565b6100df61017536600461076e565b61029f565b6100df61018836600461076e565b61031f565b6100f361019b366004610701565b61032d565b6060600380546101af9061080e565b80601f01602080910402602001604051908101604052809291908181526020018280546101db9061080e565b80156102285780601f106101fd57610100808354040283529160200191610228565b820191906000526020600020905b81548152906001019060200180831161020b57829003601f168201915b5050505050905090565b600033610240818585610358565b5060019392505050565b60003361025885828561047c565b6102638585856104f6565b506001949350505050565b600033610240818585610281838361032d565b61028b91906107ea565b610358565b6060600480546101af9061080e565b600033816102ad828661032d565b9050838110156103125760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6102638286868403610358565b6000336102408185856104f6565b6001600160a01b03918216600090815260016020908152604080832093909416825291909152205490565b6001600160a01b0383166103ba5760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b6064820152608401610309565b6001600160a01b03821661041b5760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b6064820152608401610309565b6001600160a01b0383811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6000610488848461032d565b905060001981146104f057818110156104e35760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e63650000006044820152606401610309565b6104f08484848403610358565b50505050565b6001600160a01b03831661055a5760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b6064820152608401610309565b6001600160a01b0382166105bc5760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b6064820152608401610309565b6001600160a01b038316600090815260208190526040902054818110156106345760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b6064820152608401610309565b6001600160a01b0380851660009081526020819052604080822085850390559185168152908120805484929061066b9084906107ea565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef846040516106b791815260200190565b60405180910390a36104f0565b80356001600160a01b03811681146106db57600080fd5b919050565b6000602082840312156106f1578081fd5b6106fa826106c4565b9392505050565b60008060408385031215610713578081fd5b61071c836106c4565b915061072a602084016106c4565b90509250929050565b600080600060608486031215610747578081fd5b610750846106c4565b925061075e602085016106c4565b9150604084013590509250925092565b60008060408385031215610780578182fd5b610789836106c4565b946020939093013593505050565b6000602080835283518082850152825b818110156107c3578581018301518582016040015282016107a7565b818111156107d45783604083870101525b50601f01601f1916929092016040019392505050565b6000821982111561080957634e487b7160e01b81526011600452602481fd5b500190565b600181811c9082168061082257607f821691505b6020821081141561084357634e487b7160e01b600052602260045260246000fd5b5091905056fea2646970667358221220f2e55e8f1a044b72fe52d22efa75c85ab60de6c59f0e262e7040c48bef423d8c64736f6c63430008040033",
              "opcodes": "PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xA9 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x39509351 GT PUSH2 0x71 JUMPI DUP1 PUSH4 0x39509351 EQ PUSH2 0x123 JUMPI DUP1 PUSH4 0x70A08231 EQ PUSH2 0x136 JUMPI DUP1 PUSH4 0x95D89B41 EQ PUSH2 0x15F JUMPI DUP1 PUSH4 0xA457C2D7 EQ PUSH2 0x167 JUMPI DUP1 PUSH4 0xA9059CBB EQ PUSH2 0x17A JUMPI DUP1 PUSH4 0xDD62ED3E EQ PUSH2 0x18D JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST DUP1 PUSH4 0x6FDDE03 EQ PUSH2 0xAE JUMPI DUP1 PUSH4 0x95EA7B3 EQ PUSH2 0xCC JUMPI DUP1 PUSH4 0x18160DDD EQ PUSH2 0xEF JUMPI DUP1 PUSH4 0x23B872DD EQ PUSH2 0x101 JUMPI DUP1 PUSH4 0x313CE567 EQ PUSH2 0x114 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0xB6 PUSH2 0x1A0 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0xC3 SWAP2 SWAP1 PUSH2 0x797 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0xDF PUSH2 0xDA CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x232 JUMP JUMPDEST PUSH1 0x40 MLOAD SWAP1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH1 0x2 SLOAD JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x10F CALLDATASIZE PUSH1 0x4 PUSH2 0x733 JUMP JUMPDEST PUSH2 0x24A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH1 0x12 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0xC3 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x131 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x26E JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x144 CALLDATASIZE PUSH1 0x4 PUSH2 0x6E0 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH2 0xB6 PUSH2 0x290 JUMP JUMPDEST PUSH2 0xDF PUSH2 0x175 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x29F JUMP JUMPDEST PUSH2 0xDF PUSH2 0x188 CALLDATASIZE PUSH1 0x4 PUSH2 0x76E JUMP JUMPDEST PUSH2 0x31F JUMP JUMPDEST PUSH2 0xF3 PUSH2 0x19B CALLDATASIZE PUSH1 0x4 PUSH2 0x701 JUMP JUMPDEST PUSH2 0x32D JUMP JUMPDEST PUSH1 0x60 PUSH1 0x3 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x1DB SWAP1 PUSH2 0x80E JUMP JUMPDEST DUP1 ISZERO PUSH2 0x228 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1FD JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x228 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x20B JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x358 JUMP JUMPDEST POP PUSH1 0x1 SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x258 DUP6 DUP3 DUP6 PUSH2 0x47C JUMP JUMPDEST PUSH2 0x263 DUP6 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST POP PUSH1 0x1 SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x281 DUP4 DUP4 PUSH2 0x32D JUMP JUMPDEST PUSH2 0x28B SWAP2 SWAP1 PUSH2 0x7EA JUMP JUMPDEST PUSH2 0x358 JUMP JUMPDEST PUSH1 0x60 PUSH1 0x4 DUP1 SLOAD PUSH2 0x1AF SWAP1 PUSH2 0x80E JUMP JUMPDEST PUSH1 0x0 CALLER DUP2 PUSH2 0x2AD DUP3 DUP7 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP DUP4 DUP2 LT ISZERO PUSH2 0x312 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A2064656372656173656420616C6C6F77616E63652062656C6F77 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x207A65726F PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x263 DUP3 DUP7 DUP7 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST PUSH1 0x0 CALLER PUSH2 0x240 DUP2 DUP6 DUP6 PUSH2 0x4F6 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB SWAP2 DUP3 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP4 SWAP1 SWAP5 AND DUP3 MSTORE SWAP2 SWAP1 SWAP2 MSTORE KECCAK256 SLOAD SWAP1 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x3BA JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x24 DUP1 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F76652066726F6D20746865207A65726F20616464 PUSH1 0x44 DUP3 ADD MSTORE PUSH4 0x72657373 PUSH1 0xE0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x41B JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x22 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20617070726F766520746F20746865207A65726F206164647265 PUSH1 0x44 DUP3 ADD MSTORE PUSH2 0x7373 PUSH1 0xF0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 DUP2 AND PUSH1 0x0 DUP2 DUP2 MSTORE PUSH1 0x1 PUSH1 0x20 SWAP1 DUP2 MSTORE PUSH1 0x40 DUP1 DUP4 KECCAK256 SWAP5 DUP8 AND DUP1 DUP5 MSTORE SWAP5 DUP3 MSTORE SWAP2 DUP3 SWAP1 KECCAK256 DUP6 SWAP1 SSTORE SWAP1 MLOAD DUP5 DUP2 MSTORE PUSH32 0x8C5BE1E5EBEC7D5BD14F71427D1E84F3DD0314C0F7B2291E5B200AC8C7C3B925 SWAP2 ADD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x488 DUP5 DUP5 PUSH2 0x32D JUMP JUMPDEST SWAP1 POP PUSH1 0x0 NOT DUP2 EQ PUSH2 0x4F0 JUMPI DUP2 DUP2 LT ISZERO PUSH2 0x4E3 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x1D PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A20696E73756666696369656E7420616C6C6F77616E6365000000 PUSH1 0x44 DUP3 ADD MSTORE PUSH1 0x64 ADD PUSH2 0x309 JUMP JUMPDEST PUSH2 0x4F0 DUP5 DUP5 DUP5 DUP5 SUB PUSH2 0x358 JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH2 0x55A JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x25 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E736665722066726F6D20746865207A65726F206164 PUSH1 0x44 DUP3 ADD MSTORE PUSH5 0x6472657373 PUSH1 0xD8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP3 AND PUSH2 0x5BC JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x23 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220746F20746865207A65726F2061646472 PUSH1 0x44 DUP3 ADD MSTORE PUSH3 0x657373 PUSH1 0xE8 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP4 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 SWAP1 KECCAK256 SLOAD DUP2 DUP2 LT ISZERO PUSH2 0x634 JUMPI PUSH1 0x40 MLOAD PUSH3 0x461BCD PUSH1 0xE5 SHL DUP2 MSTORE PUSH1 0x20 PUSH1 0x4 DUP3 ADD MSTORE PUSH1 0x26 PUSH1 0x24 DUP3 ADD MSTORE PUSH32 0x45524332303A207472616E7366657220616D6F756E7420657863656564732062 PUSH1 0x44 DUP3 ADD MSTORE PUSH6 0x616C616E6365 PUSH1 0xD0 SHL PUSH1 0x64 DUP3 ADD MSTORE PUSH1 0x84 ADD PUSH2 0x309 JUMP JUMPDEST PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP1 DUP6 AND PUSH1 0x0 SWAP1 DUP2 MSTORE PUSH1 0x20 DUP2 SWAP1 MSTORE PUSH1 0x40 DUP1 DUP3 KECCAK256 DUP6 DUP6 SUB SWAP1 SSTORE SWAP2 DUP6 AND DUP2 MSTORE SWAP1 DUP2 KECCAK256 DUP1 SLOAD DUP5 SWAP3 SWAP1 PUSH2 0x66B SWAP1 DUP5 SWAP1 PUSH2 0x7EA JUMP JUMPDEST SWAP3 POP POP DUP2 SWAP1 SSTORE POP DUP3 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND DUP5 PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB AND PUSH32 0xDDF252AD1BE2C89B69C2B068FC378DAA952BA7F163C4A11628F55A4DF523B3EF DUP5 PUSH1 0x40 MLOAD PUSH2 0x6B7 SWAP2 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x4F0 JUMP JUMPDEST DUP1 CALLDATALOAD PUSH1 0x1 PUSH1 0x1 PUSH1 0xA0 SHL SUB DUP2 AND DUP2 EQ PUSH2 0x6DB JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x6F1 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x6FA DUP3 PUSH2 0x6C4 JUMP JUMPDEST SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x713 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x71C DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH2 0x72A PUSH1 0x20 DUP5 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP1 POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x747 JUMPI DUP1 DUP2 REVERT JUMPDEST PUSH2 0x750 DUP5 PUSH2 0x6C4 JUMP JUMPDEST SWAP3 POP PUSH2 0x75E PUSH1 0x20 DUP6 ADD PUSH2 0x6C4 JUMP JUMPDEST SWAP2 POP PUSH1 0x40 DUP5 ADD CALLDATALOAD SWAP1 POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x780 JUMPI DUP2 DUP3 REVERT JUMPDEST PUSH2 0x789 DUP4 PUSH2 0x6C4 JUMP JUMPDEST SWAP5 PUSH1 0x20 SWAP4 SWAP1 SWAP4 ADD CALLDATALOAD SWAP4 POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP1 DUP4 MSTORE DUP4 MLOAD DUP1 DUP3 DUP6 ADD MSTORE DUP3 JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x7C3 JUMPI DUP6 DUP2 ADD DUP4 ADD MLOAD DUP6 DUP3 ADD PUSH1 0x40 ADD MSTORE DUP3 ADD PUSH2 0x7A7 JUMP JUMPDEST DUP2 DUP2 GT ISZERO PUSH2 0x7D4 JUMPI DUP4 PUSH1 0x40 DUP4 DUP8 ADD ADD MSTORE JUMPDEST POP PUSH1 0x1F ADD PUSH1 0x1F NOT AND SWAP3 SWAP1 SWAP3 ADD PUSH1 0x40 ADD SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 NOT DUP3 GT ISZERO PUSH2 0x809 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL DUP2 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 DUP2 REVERT JUMPDEST POP ADD SWAP1 JUMP JUMPDEST PUSH1 0x1 DUP2 DUP2 SHR SWAP1 DUP3 AND DUP1 PUSH2 0x822 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 EQ ISZERO PUSH2 0x843 JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST POP SWAP2 SWAP1 POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 CALLCODE 0xE5 0x5E DUP16 BYTE DIV 0x4B PUSH19 0xFE52D22EFA75C85AB60DE6C59F0E262E7040C4 DUP12 0xEF TIMESTAMP RETURNDATASIZE DUP13 PUSH5 0x736F6C6343 STOP ADDMOD DIV STOP CALLER ",
              "sourceMap": "1416:11562:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:100;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;4547:201;;;;;;:::i;:::-;;:::i;:::-;;;1445:14:9;;1438:22;1420:41;;1408:2;1393:18;4547:201:3;1375:92:9;3316:108:3;3404:12;;3316:108;;;5015:25:9;;;5003:2;4988:18;3316:108:3;4970:76:9;5328:295:3;;;;;;:::i;:::-;;:::i;3158:93::-;;;3241:2;5193:36:9;;5181:2;5166:18;3158:93:3;5148:87:9;6032:238:3;;;;;;:::i;:::-;;:::i;3487:127::-;;;;;;:::i;:::-;-1:-1:-1;;;;;3588:18:3;3561:7;3588:18;;;;;;;;;;;;3487:127;2415:104;;;:::i;6773:436::-;;;;;;:::i;:::-;;:::i;3820:193::-;;;;;;:::i;:::-;;:::i;4076:151::-;;;;;;:::i;:::-;;:::i;2196:100::-;2250:13;2283:5;2276:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2196:100;:::o;4547:201::-;4630:4;736:10:2;4686:32:3;736:10:2;4702:7:3;4711:6;4686:8;:32::i;:::-;-1:-1:-1;4736:4:3;;4547:201;-1:-1:-1;;;4547:201:3:o;5328:295::-;5459:4;736:10:2;5517:38:3;5533:4;736:10:2;5548:6:3;5517:15;:38::i;:::-;5566:27;5576:4;5582:2;5586:6;5566:9;:27::i;:::-;-1:-1:-1;5611:4:3;;5328:295;-1:-1:-1;;;;5328:295:3:o;6032:238::-;6120:4;736:10:2;6176:64:3;736:10:2;6192:7:3;6229:10;6201:25;736:10:2;6192:7:3;6201:9;:25::i;:::-;:38;;;;:::i;:::-;6176:8;:64::i;2415:104::-;2471:13;2504:7;2497:14;;;;;:::i;6773:436::-;6866:4;736:10:2;6866:4:3;6949:25;736:10:2;6966:7:3;6949:9;:25::i;:::-;6922:52;;7013:15;6993:16;:35;;6985:85;;;;-1:-1:-1;;;6985:85:3;;4665:2:9;6985:85:3;;;4647:21:9;4704:2;4684:18;;;4677:30;4743:34;4723:18;;;4716:62;-1:-1:-1;;;4794:18:9;;;4787:35;4839:19;;6985:85:3;;;;;;;;;7106:60;7115:5;7122:7;7150:15;7131:16;:34;7106:8;:60::i;3820:193::-;3899:4;736:10:2;3955:28:3;736:10:2;3972:2:3;3976:6;3955:9;:28::i;4076:151::-;-1:-1:-1;;;;;4192:18:3;;;4165:7;4192:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;4076:151::o;10398:380::-;-1:-1:-1;;;;;10534:19:3;;10526:68;;;;-1:-1:-1;;;10526:68:3;;4260:2:9;10526:68:3;;;4242:21:9;4299:2;4279:18;;;4272:30;4338:34;4318:18;;;4311:62;-1:-1:-1;;;4389:18:9;;;4382:34;4433:19;;10526:68:3;4232:226:9;10526:68:3;-1:-1:-1;;;;;10613:21:3;;10605:68;;;;-1:-1:-1;;;10605:68:3;;2686:2:9;10605:68:3;;;2668:21:9;2725:2;2705:18;;;2698:30;2764:34;2744:18;;;2737:62;-1:-1:-1;;;2815:18:9;;;2808:32;2857:19;;10605:68:3;2658:224:9;10605:68:3;-1:-1:-1;;;;;10686:18:3;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10738:32;;5015:25:9;;;10738:32:3;;4988:18:9;10738:32:3;;;;;;;10398:380;;;:::o;11069:453::-;11204:24;11231:25;11241:5;11248:7;11231:9;:25::i;:::-;11204:52;;-1:-1:-1;;11271:16:3;:37;11267:248;;11353:6;11333:16;:26;;11325:68;;;;-1:-1:-1;;;11325:68:3;;3089:2:9;11325:68:3;;;3071:21:9;3128:2;3108:18;;;3101:30;3167:31;3147:18;;;3140:59;3216:18;;11325:68:3;3061:179:9;11325:68:3;11437:51;11446:5;11453:7;11481:6;11462:16;:25;11437:8;:51::i;:::-;11069:453;;;;:::o;7679:671::-;-1:-1:-1;;;;;7810:18:3;;7802:68;;;;-1:-1:-1;;;7802:68:3;;3854:2:9;7802:68:3;;;3836:21:9;3893:2;3873:18;;;3866:30;3932:34;3912:18;;;3905:62;-1:-1:-1;;;3983:18:9;;;3976:35;4028:19;;7802:68:3;3826:227:9;7802:68:3;-1:-1:-1;;;;;7889:16:3;;7881:64;;;;-1:-1:-1;;;7881:64:3;;2282:2:9;7881:64:3;;;2264:21:9;2321:2;2301:18;;;2294:30;2360:34;2340:18;;;2333:62;-1:-1:-1;;;2411:18:9;;;2404:33;2454:19;;7881:64:3;2254:225:9;7881:64:3;-1:-1:-1;;;;;8031:15:3;;8009:19;8031:15;;;;;;;;;;;8065:21;;;;8057:72;;;;-1:-1:-1;;;8057:72:3;;3447:2:9;8057:72:3;;;3429:21:9;3486:2;3466:18;;;3459:30;3525:34;3505:18;;;3498:62;-1:-1:-1;;;3576:18:9;;;3569:36;3622:19;;8057:72:3;3419:228:9;8057:72:3;-1:-1:-1;;;;;8165:15:3;;;:9;:15;;;;;;;;;;;8183:20;;;8165:38;;8225:13;;;;;;;;:23;;8197:6;;8165:9;8225:23;;8197:6;;8225:23;:::i;:::-;;;;;;;;8281:2;-1:-1:-1;;;;;8266:26:3;8275:4;-1:-1:-1;;;;;8266:26:3;;8285:6;8266:26;;;;5015:25:9;;5003:2;4988:18;;4970:76;8266:26:3;;;;;;;;8305:37;12122:125;14:173:9;82:20;;-1:-1:-1;;;;;131:31:9;;121:42;;111:2;;177:1;174;167:12;111:2;63:124;;;:::o;192:196::-;251:6;304:2;292:9;283:7;279:23;275:32;272:2;;;325:6;317;310:22;272:2;353:29;372:9;353:29;:::i;:::-;343:39;262:126;-1:-1:-1;;;262:126:9:o;393:270::-;461:6;469;522:2;510:9;501:7;497:23;493:32;490:2;;;543:6;535;528:22;490:2;571:29;590:9;571:29;:::i;:::-;561:39;;619:38;653:2;642:9;638:18;619:38;:::i;:::-;609:48;;480:183;;;;;:::o;668:338::-;745:6;753;761;814:2;802:9;793:7;789:23;785:32;782:2;;;835:6;827;820:22;782:2;863:29;882:9;863:29;:::i;:::-;853:39;;911:38;945:2;934:9;930:18;911:38;:::i;:::-;901:48;;996:2;985:9;981:18;968:32;958:42;;772:234;;;;;:::o;1011:264::-;1079:6;1087;1140:2;1128:9;1119:7;1115:23;1111:32;1108:2;;;1161:6;1153;1146:22;1108:2;1189:29;1208:9;1189:29;:::i;:::-;1179:39;1265:2;1250:18;;;;1237:32;;-1:-1:-1;;;1098:177:9:o;1472:603::-;1584:4;1613:2;1642;1631:9;1624:21;1674:6;1668:13;1717:6;1712:2;1701:9;1697:18;1690:34;1742:4;1755:140;1769:6;1766:1;1763:13;1755:140;;;1864:14;;;1860:23;;1854:30;1830:17;;;1849:2;1826:26;1819:66;1784:10;;1755:140;;;1913:6;1910:1;1907:13;1904:2;;;1983:4;1978:2;1969:6;1958:9;1954:22;1950:31;1943:45;1904:2;-1:-1:-1;2059:2:9;2038:15;-1:-1:-1;;2034:29:9;2019:45;;;;2066:2;2015:54;;1593:482;-1:-1:-1;;;1593:482:9:o;5240:229::-;5280:3;5311:1;5307:6;5304:1;5301:13;5298:2;;;-1:-1:-1;;;5337:33:9;;5393:4;5390:1;5383:15;5423:4;5344:3;5411:17;5298:2;-1:-1:-1;5454:9:9;;5288:181::o;5474:380::-;5553:1;5549:12;;;;5596;;;5617:2;;5671:4;5663:6;5659:17;5649:27;;5617:2;5724;5716:6;5713:14;5693:18;5690:38;5687:2;;;5770:10;5765:3;5761:20;5758:1;5751:31;5805:4;5802:1;5795:15;5833:4;5830:1;5823:15;5687:2;;5529:325;;;:::o"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "435000",
                "executionCost": "infinite",
                "totalCost": "infinite"
              },
              "external": {
                "allowance(address,address)": "infinite",
                "approve(address,uint256)": "22524",
                "balanceOf(address)": "1262",
                "decimals()": "266",
                "decreaseAllowance(address,uint256)": "23616",
                "increaseAllowance(address,uint256)": "23578",
                "name()": "infinite",
                "symbol()": "infinite",
                "totalSupply()": "1026",
                "transfer(address,uint256)": "44470",
                "transferFrom(address,address,uint256)": "infinite"
              },
              "internal": {
                "_afterTokenTransfer(address,address,uint256)": "infinite",
                "_approve(address,address,uint256)": "infinite",
                "_beforeTokenTransfer(address,address,uint256)": "infinite",
                "_burn(address,uint256)": "infinite",
                "_mint(address,uint256)": "infinite",
                "_spendAllowance(address,address,uint256)": "infinite",
                "_transfer(address,address,uint256)": "infinite"
              }
            },
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "decreaseAllowance(address,uint256)": "a457c2d7",
              "increaseAllowance(address,uint256)": "39509351",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name_\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"symbol_\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Implementation of the {IERC20} interface. This implementation is agnostic to the way tokens are created. This means that a supply mechanism has to be added in a derived contract using {_mint}. For a generic mechanism see {ERC20PresetMinterPauser}. TIP: For a detailed writeup see our guide https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How to implement supply mechanisms]. We have followed general OpenZeppelin Contracts guidelines: functions revert instead returning `false` on failure. This behavior is nonetheless conventional and does not conflict with the expectations of ERC20 applications. Additionally, an {Approval} event is emitted on calls to {transferFrom}. This allows applications to reconstruct the allowance for all accounts just by listening to said events. Other implementations of the EIP may not emit these events, as it isn't required by the specification. Finally, the non-standard {decreaseAllowance} and {increaseAllowance} functions have been added to mitigate the well-known issues around setting allowances. See {IERC20-approve}.\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"constructor\":{\"details\":\"Sets the values for {name} and {symbol}. The default value of {decimals} is 18. To select a different value for {decimals} you should overload it. All two of these values are immutable: they can only be set once during construction.\"},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deps/ERC20.sol\":\"ERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deps/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\"},\"contracts/deps/ERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (token/ERC20/ERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\nimport \\\"./IERC20Metadata.sol\\\";\\r\\nimport \\\"./Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Implementation of the {IERC20} interface.\\r\\n *\\r\\n * This implementation is agnostic to the way tokens are created. This means\\r\\n * that a supply mechanism has to be added in a derived contract using {_mint}.\\r\\n * For a generic mechanism see {ERC20PresetMinterPauser}.\\r\\n *\\r\\n * TIP: For a detailed writeup see our guide\\r\\n * https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\\r\\n * to implement supply mechanisms].\\r\\n *\\r\\n * We have followed general OpenZeppelin Contracts guidelines: functions revert\\r\\n * instead returning `false` on failure. This behavior is nonetheless\\r\\n * conventional and does not conflict with the expectations of ERC20\\r\\n * applications.\\r\\n *\\r\\n * Additionally, an {Approval} event is emitted on calls to {transferFrom}.\\r\\n * This allows applications to reconstruct the allowance for all accounts just\\r\\n * by listening to said events. Other implementations of the EIP may not emit\\r\\n * these events, as it isn't required by the specification.\\r\\n *\\r\\n * Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\\r\\n * functions have been added to mitigate the well-known issues around setting\\r\\n * allowances. See {IERC20-approve}.\\r\\n */\\r\\ncontract ERC20 is Context, IERC20, IERC20Metadata {\\r\\n    mapping(address => uint256) private _balances;\\r\\n\\r\\n    mapping(address => mapping(address => uint256)) private _allowances;\\r\\n\\r\\n    uint256 private _totalSupply;\\r\\n\\r\\n    string private _name;\\r\\n    string private _symbol;\\r\\n\\r\\n    /**\\r\\n     * @dev Sets the values for {name} and {symbol}.\\r\\n     *\\r\\n     * The default value of {decimals} is 18. To select a different value for\\r\\n     * {decimals} you should overload it.\\r\\n     *\\r\\n     * All two of these values are immutable: they can only be set once during\\r\\n     * construction.\\r\\n     */\\r\\n    constructor(string memory name_, string memory symbol_) {\\r\\n        _name = name_;\\r\\n        _symbol = symbol_;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() public view virtual override returns (string memory) {\\r\\n        return _name;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token, usually a shorter version of the\\r\\n     * name.\\r\\n     */\\r\\n    function symbol() public view virtual override returns (string memory) {\\r\\n        return _symbol;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the number of decimals used to get its user representation.\\r\\n     * For example, if `decimals` equals `2`, a balance of `505` tokens should\\r\\n     * be displayed to a user as `5.05` (`505 / 10 ** 2`).\\r\\n     *\\r\\n     * Tokens usually opt for a value of 18, imitating the relationship between\\r\\n     * Ether and Wei. This is the value {ERC20} uses, unless this function is\\r\\n     * overridden;\\r\\n     *\\r\\n     * NOTE: This information is only used for _display_ purposes: it in\\r\\n     * no way affects any of the arithmetic of the contract, including\\r\\n     * {IERC20-balanceOf} and {IERC20-transfer}.\\r\\n     */\\r\\n    function decimals() public view virtual override returns (uint8) {\\r\\n        return 18;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-totalSupply}.\\r\\n     */\\r\\n    function totalSupply() public view virtual override returns (uint256) {\\r\\n        return _totalSupply;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-balanceOf}.\\r\\n     */\\r\\n    function balanceOf(address account) public view virtual override returns (uint256) {\\r\\n        return _balances[account];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transfer}.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - the caller must have a balance of at least `amount`.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _transfer(owner, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-allowance}.\\r\\n     */\\r\\n    function allowance(address owner, address spender) public view virtual override returns (uint256) {\\r\\n        return _allowances[owner][spender];\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-approve}.\\r\\n     *\\r\\n     * NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\\r\\n     * `transferFrom`. This is semantically equivalent to an infinite approval.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) public virtual override returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev See {IERC20-transferFrom}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance. This is not\\r\\n     * required by the EIP. See the note at the beginning of {ERC20}.\\r\\n     *\\r\\n     * NOTE: Does not update the allowance if the current allowance\\r\\n     * is the maximum `uint256`.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` and `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     * - the caller must have allowance for ``from``'s tokens of at least\\r\\n     * `amount`.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) public virtual override returns (bool) {\\r\\n        address spender = _msgSender();\\r\\n        _spendAllowance(from, spender, amount);\\r\\n        _transfer(from, to, amount);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically increases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function increaseAllowance(address spender, uint256 addedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        _approve(owner, spender, allowance(owner, spender) + addedValue);\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Atomically decreases the allowance granted to `spender` by the caller.\\r\\n     *\\r\\n     * This is an alternative to {approve} that can be used as a mitigation for\\r\\n     * problems described in {IERC20-approve}.\\r\\n     *\\r\\n     * Emits an {Approval} event indicating the updated allowance.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `spender` cannot be the zero address.\\r\\n     * - `spender` must have allowance for the caller of at least\\r\\n     * `subtractedValue`.\\r\\n     */\\r\\n    function decreaseAllowance(address spender, uint256 subtractedValue) public virtual returns (bool) {\\r\\n        address owner = _msgSender();\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        require(currentAllowance >= subtractedValue, \\\"ERC20: decreased allowance below zero\\\");\\r\\n        unchecked {\\r\\n            _approve(owner, spender, currentAllowance - subtractedValue);\\r\\n        }\\r\\n\\r\\n        return true;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` of tokens from `from` to `to`.\\r\\n     *\\r\\n     * This internal function is equivalent to {transfer}, and can be used to\\r\\n     * e.g. implement automatic token fees, slashing mechanisms, etc.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `from` cannot be the zero address.\\r\\n     * - `to` cannot be the zero address.\\r\\n     * - `from` must have a balance of at least `amount`.\\r\\n     */\\r\\n    function _transfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(from != address(0), \\\"ERC20: transfer from the zero address\\\");\\r\\n        require(to != address(0), \\\"ERC20: transfer to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(from, to, amount);\\r\\n\\r\\n        uint256 fromBalance = _balances[from];\\r\\n        require(fromBalance >= amount, \\\"ERC20: transfer amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[from] = fromBalance - amount;\\r\\n        }\\r\\n        _balances[to] += amount;\\r\\n\\r\\n        emit Transfer(from, to, amount);\\r\\n\\r\\n        _afterTokenTransfer(from, to, amount);\\r\\n    }\\r\\n\\r\\n    /** @dev Creates `amount` tokens and assigns them to `account`, increasing\\r\\n     * the total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `from` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     */\\r\\n    function _mint(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: mint to the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(address(0), account, amount);\\r\\n\\r\\n        _totalSupply += amount;\\r\\n        _balances[account] += amount;\\r\\n        emit Transfer(address(0), account, amount);\\r\\n\\r\\n        _afterTokenTransfer(address(0), account, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Destroys `amount` tokens from `account`, reducing the\\r\\n     * total supply.\\r\\n     *\\r\\n     * Emits a {Transfer} event with `to` set to the zero address.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `account` cannot be the zero address.\\r\\n     * - `account` must have at least `amount` tokens.\\r\\n     */\\r\\n    function _burn(address account, uint256 amount) internal virtual {\\r\\n        require(account != address(0), \\\"ERC20: burn from the zero address\\\");\\r\\n\\r\\n        _beforeTokenTransfer(account, address(0), amount);\\r\\n\\r\\n        uint256 accountBalance = _balances[account];\\r\\n        require(accountBalance >= amount, \\\"ERC20: burn amount exceeds balance\\\");\\r\\n        unchecked {\\r\\n            _balances[account] = accountBalance - amount;\\r\\n        }\\r\\n        _totalSupply -= amount;\\r\\n\\r\\n        emit Transfer(account, address(0), amount);\\r\\n\\r\\n        _afterTokenTransfer(account, address(0), amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\\r\\n     *\\r\\n     * This internal function is equivalent to `approve`, and can be used to\\r\\n     * e.g. set automatic allowances for certain subsystems, etc.\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     *\\r\\n     * Requirements:\\r\\n     *\\r\\n     * - `owner` cannot be the zero address.\\r\\n     * - `spender` cannot be the zero address.\\r\\n     */\\r\\n    function _approve(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        require(owner != address(0), \\\"ERC20: approve from the zero address\\\");\\r\\n        require(spender != address(0), \\\"ERC20: approve to the zero address\\\");\\r\\n\\r\\n        _allowances[owner][spender] = amount;\\r\\n        emit Approval(owner, spender, amount);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Updates `owner` s allowance for `spender` based on spent `amount`.\\r\\n     *\\r\\n     * Does not update the allowance amount in case of infinite allowance.\\r\\n     * Revert if not enough allowance is available.\\r\\n     *\\r\\n     * Might emit an {Approval} event.\\r\\n     */\\r\\n    function _spendAllowance(\\r\\n        address owner,\\r\\n        address spender,\\r\\n        uint256 amount\\r\\n    ) internal virtual {\\r\\n        uint256 currentAllowance = allowance(owner, spender);\\r\\n        if (currentAllowance != type(uint256).max) {\\r\\n            require(currentAllowance >= amount, \\\"ERC20: insufficient allowance\\\");\\r\\n            unchecked {\\r\\n                _approve(owner, spender, currentAllowance - amount);\\r\\n            }\\r\\n        }\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called before any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * will be transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens will be minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens will be burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _beforeTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n\\r\\n    /**\\r\\n     * @dev Hook that is called after any transfer of tokens. This includes\\r\\n     * minting and burning.\\r\\n     *\\r\\n     * Calling conditions:\\r\\n     *\\r\\n     * - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\\r\\n     * has been transferred to `to`.\\r\\n     * - when `from` is zero, `amount` tokens have been minted for `to`.\\r\\n     * - when `to` is zero, `amount` of ``from``'s tokens have been burned.\\r\\n     * - `from` and `to` are never both zero.\\r\\n     *\\r\\n     * To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks].\\r\\n     */\\r\\n    function _afterTokenTransfer(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) internal virtual {}\\r\\n}\\r\\n\",\"keccak256\":\"0xedc5941d3d9eeee01b54be21aed23d8e6b94849be4fc0ad6f65a6a8bb8abada2\",\"license\":\"MIT\"},\"contracts/deps/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\"},\"contracts/deps/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0x94dc88716e92464d240916e16167a8a900f88a2a954fb23cd2ac7f8f96d4d1b4\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1180,
                "contract": "contracts/deps/ERC20.sol:ERC20",
                "label": "_balances",
                "offset": 0,
                "slot": "0",
                "type": "t_mapping(t_address,t_uint256)"
              },
              {
                "astId": 1186,
                "contract": "contracts/deps/ERC20.sol:ERC20",
                "label": "_allowances",
                "offset": 0,
                "slot": "1",
                "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
              },
              {
                "astId": 1188,
                "contract": "contracts/deps/ERC20.sol:ERC20",
                "label": "_totalSupply",
                "offset": 0,
                "slot": "2",
                "type": "t_uint256"
              },
              {
                "astId": 1190,
                "contract": "contracts/deps/ERC20.sol:ERC20",
                "label": "_name",
                "offset": 0,
                "slot": "3",
                "type": "t_string_storage"
              },
              {
                "astId": 1192,
                "contract": "contracts/deps/ERC20.sol:ERC20",
                "label": "_symbol",
                "offset": 0,
                "slot": "4",
                "type": "t_string_storage"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              },
              "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => mapping(address => uint256))",
                "numberOfBytes": "32",
                "value": "t_mapping(t_address,t_uint256)"
              },
              "t_mapping(t_address,t_uint256)": {
                "encoding": "mapping",
                "key": "t_address",
                "label": "mapping(address => uint256)",
                "numberOfBytes": "32",
                "value": "t_uint256"
              },
              "t_string_storage": {
                "encoding": "bytes",
                "label": "string",
                "numberOfBytes": "32"
              },
              "t_uint256": {
                "encoding": "inplace",
                "label": "uint256",
                "numberOfBytes": "32"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/deps/IERC20.sol": {
        "IERC20": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface of the ERC20 standard as defined in the EIP.",
            "events": {
              "Approval(address,address,uint256)": {
                "details": "Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance."
              },
              "Transfer(address,address,uint256)": {
                "details": "Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero."
              }
            },
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface of the ERC20 standard as defined in the EIP.\",\"events\":{\"Approval(address,address,uint256)\":{\"details\":\"Emitted when the allowance of a `spender` for an `owner` is set by a call to {approve}. `value` is the new allowance.\"},\"Transfer(address,address,uint256)\":{\"details\":\"Emitted when `value` tokens are moved from one account (`from`) to another (`to`). Note that `value` may be zero.\"}},\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deps/IERC20.sol\":\"IERC20\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deps/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/deps/IERC20Metadata.sol": {
        "IERC20Metadata": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Approval",
              "type": "event"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "name": "Transfer",
              "type": "event"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "owner",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                }
              ],
              "name": "allowance",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "spender",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "approve",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "account",
                  "type": "address"
                }
              ],
              "name": "balanceOf",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "decimals",
              "outputs": [
                {
                  "internalType": "uint8",
                  "name": "",
                  "type": "uint8"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "name",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "symbol",
              "outputs": [
                {
                  "internalType": "string",
                  "name": "",
                  "type": "string"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "totalSupply",
              "outputs": [
                {
                  "internalType": "uint256",
                  "name": "",
                  "type": "uint256"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transfer",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "from",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "to",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                }
              ],
              "name": "transferFrom",
              "outputs": [
                {
                  "internalType": "bool",
                  "name": "",
                  "type": "bool"
                }
              ],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._",
            "kind": "dev",
            "methods": {
              "allowance(address,address)": {
                "details": "Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called."
              },
              "approve(address,uint256)": {
                "details": "Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event."
              },
              "balanceOf(address)": {
                "details": "Returns the amount of tokens owned by `account`."
              },
              "decimals()": {
                "details": "Returns the decimals places of the token."
              },
              "name()": {
                "details": "Returns the name of the token."
              },
              "symbol()": {
                "details": "Returns the symbol of the token."
              },
              "totalSupply()": {
                "details": "Returns the amount of tokens in existence."
              },
              "transfer(address,uint256)": {
                "details": "Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              },
              "transferFrom(address,address,uint256)": {
                "details": "Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "allowance(address,address)": "dd62ed3e",
              "approve(address,uint256)": "095ea7b3",
              "balanceOf(address)": "70a08231",
              "decimals()": "313ce567",
              "name()": "06fdde03",
              "symbol()": "95d89b41",
              "totalSupply()": "18160ddd",
              "transfer(address,uint256)": "a9059cbb",
              "transferFrom(address,address,uint256)": "23b872dd"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Interface for the optional metadata functions from the ERC20 standard. _Available since v4.1._\",\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"Returns the remaining number of tokens that `spender` will be allowed to spend on behalf of `owner` through {transferFrom}. This is zero by default. This value changes when {approve} or {transferFrom} are called.\"},\"approve(address,uint256)\":{\"details\":\"Sets `amount` as the allowance of `spender` over the caller's tokens. Returns a boolean value indicating whether the operation succeeded. IMPORTANT: Beware that changing an allowance with this method brings the risk that someone may use both the old and the new allowance by unfortunate transaction ordering. One possible solution to mitigate this race condition is to first reduce the spender's allowance to 0 and set the desired value afterwards: https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729 Emits an {Approval} event.\"},\"balanceOf(address)\":{\"details\":\"Returns the amount of tokens owned by `account`.\"},\"decimals()\":{\"details\":\"Returns the decimals places of the token.\"},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token.\"},\"totalSupply()\":{\"details\":\"Returns the amount of tokens in existence.\"},\"transfer(address,uint256)\":{\"details\":\"Moves `amount` tokens from the caller's account to `to`. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"Moves `amount` tokens from `from` to `to` using the allowance mechanism. `amount` is then deducted from the caller's allowance. Returns a boolean value indicating whether the operation succeeded. Emits a {Transfer} event.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deps/IERC20Metadata.sol\":\"IERC20Metadata\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deps/IERC20.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.6.0) (token/ERC20/IERC20.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Interface of the ERC20 standard as defined in the EIP.\\r\\n */\\r\\ninterface IERC20 {\\r\\n    /**\\r\\n     * @dev Emitted when `value` tokens are moved from one account (`from`) to\\r\\n     * another (`to`).\\r\\n     *\\r\\n     * Note that `value` may be zero.\\r\\n     */\\r\\n    event Transfer(address indexed from, address indexed to, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Emitted when the allowance of a `spender` for an `owner` is set by\\r\\n     * a call to {approve}. `value` is the new allowance.\\r\\n     */\\r\\n    event Approval(address indexed owner, address indexed spender, uint256 value);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens in existence.\\r\\n     */\\r\\n    function totalSupply() external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the amount of tokens owned by `account`.\\r\\n     */\\r\\n    function balanceOf(address account) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from the caller's account to `to`.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transfer(address to, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the remaining number of tokens that `spender` will be\\r\\n     * allowed to spend on behalf of `owner` through {transferFrom}. This is\\r\\n     * zero by default.\\r\\n     *\\r\\n     * This value changes when {approve} or {transferFrom} are called.\\r\\n     */\\r\\n    function allowance(address owner, address spender) external view returns (uint256);\\r\\n\\r\\n    /**\\r\\n     * @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * IMPORTANT: Beware that changing an allowance with this method brings the risk\\r\\n     * that someone may use both the old and the new allowance by unfortunate\\r\\n     * transaction ordering. One possible solution to mitigate this race\\r\\n     * condition is to first reduce the spender's allowance to 0 and set the\\r\\n     * desired value afterwards:\\r\\n     * https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\\r\\n     *\\r\\n     * Emits an {Approval} event.\\r\\n     */\\r\\n    function approve(address spender, uint256 amount) external returns (bool);\\r\\n\\r\\n    /**\\r\\n     * @dev Moves `amount` tokens from `from` to `to` using the\\r\\n     * allowance mechanism. `amount` is then deducted from the caller's\\r\\n     * allowance.\\r\\n     *\\r\\n     * Returns a boolean value indicating whether the operation succeeded.\\r\\n     *\\r\\n     * Emits a {Transfer} event.\\r\\n     */\\r\\n    function transferFrom(\\r\\n        address from,\\r\\n        address to,\\r\\n        uint256 amount\\r\\n    ) external returns (bool);\\r\\n}\\r\\n\",\"keccak256\":\"0xdd286f7283325eb12ee50e41dac6be9665262e827b66f4f8952111ff77b6a130\",\"license\":\"MIT\"},\"contracts/deps/IERC20Metadata.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (token/ERC20/extensions/IERC20Metadata.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./IERC20.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Interface for the optional metadata functions from the ERC20 standard.\\r\\n *\\r\\n * _Available since v4.1._\\r\\n */\\r\\ninterface IERC20Metadata is IERC20 {\\r\\n    /**\\r\\n     * @dev Returns the name of the token.\\r\\n     */\\r\\n    function name() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the symbol of the token.\\r\\n     */\\r\\n    function symbol() external view returns (string memory);\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the decimals places of the token.\\r\\n     */\\r\\n    function decimals() external view returns (uint8);\\r\\n}\\r\\n\",\"keccak256\":\"0x94dc88716e92464d240916e16167a8a900f88a2a954fb23cd2ac7f8f96d4d1b4\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/deps/Ownable.sol": {
        "Ownable": {
          "abi": [
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "previousOwner",
                  "type": "address"
                },
                {
                  "indexed": true,
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "OwnershipTransferred",
              "type": "event"
            },
            {
              "inputs": [],
              "name": "owner",
              "outputs": [
                {
                  "internalType": "address",
                  "name": "",
                  "type": "address"
                }
              ],
              "stateMutability": "view",
              "type": "function"
            },
            {
              "inputs": [],
              "name": "renounceOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            },
            {
              "inputs": [
                {
                  "internalType": "address",
                  "name": "newOwner",
                  "type": "address"
                }
              ],
              "name": "transferOwnership",
              "outputs": [],
              "stateMutability": "nonpayable",
              "type": "function"
            }
          ],
          "devdoc": {
            "details": "Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.",
            "kind": "dev",
            "methods": {
              "constructor": {
                "details": "Initializes the contract setting the deployer as the initial owner."
              },
              "owner()": {
                "details": "Returns the address of the current owner."
              },
              "renounceOwnership()": {
                "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
              },
              "transferOwnership(address)": {
                "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
              }
            },
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {
              "owner()": "8da5cb5b",
              "renounceOwnership()": "715018a6",
              "transferOwnership(address)": "f2fde38b"
            }
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/deps/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/deps/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\n/**\\r\\n * @dev Provides information about the current execution context, including the\\r\\n * sender of the transaction and its data. While these are generally available\\r\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\r\\n * manner, since when dealing with meta-transactions the account sending and\\r\\n * paying for execution may not be the actual sender (as far as an application\\r\\n * is concerned).\\r\\n *\\r\\n * This contract is only required for intermediate, library-like contracts.\\r\\n */\\r\\nabstract contract Context {\\r\\n    function _msgSender() internal view virtual returns (address) {\\r\\n        return msg.sender;\\r\\n    }\\r\\n\\r\\n    function _msgData() internal view virtual returns (bytes calldata) {\\r\\n        return msg.data;\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x81d5fc973a522c8909d60be6a201869d46aa47b030b8813f60616404628c2b94\",\"license\":\"MIT\"},\"contracts/deps/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\r\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"./Context.sol\\\";\\r\\n\\r\\n/**\\r\\n * @dev Contract module which provides a basic access control mechanism, where\\r\\n * there is an account (an owner) that can be granted exclusive access to\\r\\n * specific functions.\\r\\n *\\r\\n * By default, the owner account will be the one that deploys the contract. This\\r\\n * can later be changed with {transferOwnership}.\\r\\n *\\r\\n * This module is used through inheritance. It will make available the modifier\\r\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\r\\n * the owner.\\r\\n */\\r\\nabstract contract Ownable is Context {\\r\\n    address private _owner;\\r\\n\\r\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\r\\n\\r\\n    /**\\r\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\r\\n     */\\r\\n    constructor() {\\r\\n        _transferOwnership(_msgSender());\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if called by any account other than the owner.\\r\\n     */\\r\\n    modifier onlyOwner() {\\r\\n        _checkOwner();\\r\\n        _;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Returns the address of the current owner.\\r\\n     */\\r\\n    function owner() public view virtual returns (address) {\\r\\n        return _owner;\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Throws if the sender is not the owner.\\r\\n     */\\r\\n    function _checkOwner() internal view virtual {\\r\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Leaves the contract without owner. It will not be possible to call\\r\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\r\\n     *\\r\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\r\\n     * thereby removing any functionality that is only available to the owner.\\r\\n     */\\r\\n    function renounceOwnership() public virtual onlyOwner {\\r\\n        _transferOwnership(address(0));\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Can only be called by the current owner.\\r\\n     */\\r\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\r\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\r\\n        _transferOwnership(newOwner);\\r\\n    }\\r\\n\\r\\n    /**\\r\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\r\\n     * Internal function without access restriction.\\r\\n     */\\r\\n    function _transferOwnership(address newOwner) internal virtual {\\r\\n        address oldOwner = _owner;\\r\\n        _owner = newOwner;\\r\\n        emit OwnershipTransferred(oldOwner, newOwner);\\r\\n    }\\r\\n}\\r\\n\",\"keccak256\":\"0x420f5a52111e811b8e24fdaf4f863429d007b8410a7eedac170d4180607555f0\",\"license\":\"MIT\"}},\"version\":1}",
          "storageLayout": {
            "storage": [
              {
                "astId": 1861,
                "contract": "contracts/deps/Ownable.sol:Ownable",
                "label": "_owner",
                "offset": 0,
                "slot": "0",
                "type": "t_address"
              }
            ],
            "types": {
              "t_address": {
                "encoding": "inplace",
                "label": "address",
                "numberOfBytes": "20"
              }
            }
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/interfaces/Common.sol": {
        "Common": {
          "abi": [
            {
              "inputs": [],
              "name": "CannotDeleteBinInEngagedMode",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "EmptyBin",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidBinID",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "InvalidWasteId",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "MaxWasteTransportExceeded",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "NothingToWithdraw",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UserAlreadyExist",
              "type": "error"
            },
            {
              "inputs": [],
              "name": "UserAlreadyNotExist",
              "type": "error"
            },
            {
              "anonymous": false,
              "inputs": [
                {
                  "indexed": false,
                  "internalType": "uint256",
                  "name": "binId",
                  "type": "uint256"
                },
                {
                  "indexed": false,
                  "internalType": "address",
                  "name": "msgSender",
                  "type": "address"
                }
              ],
              "name": "RegisteredBin",
              "type": "event"
            }
          ],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "",
              "opcodes": "",
              "sourceMap": ""
            },
            "gasEstimates": null,
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"CannotDeleteBinInEngagedMode\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"EmptyBin\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidBinID\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidWasteId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"MaxWasteTransportExceeded\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NothingToWithdraw\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyExist\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UserAlreadyNotExist\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"binId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"RegisteredBin\",\"type\":\"event\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/interfaces/Common.sol\":\"Common\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/Common.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface Common {\\r\\n  enum State { GENERATED, COLLECTED, RECYCLED }\\r\\n  enum Category { COLLECTOR, GENERATOR, RECYCLER, BINOWNER, SOLD }\\r\\n  enum Share { COLLECTOR, GENERATOR, TEAM }\\r\\n\\r\\n  error UserAlreadyExist();\\r\\n  error UserAlreadyNotExist();\\r\\n  error InvalidBinID();\\r\\n  error EmptyBin();\\r\\n  error CannotDeleteBinInEngagedMode();\\r\\n  error InvalidWasteId();\\r\\n  error NothingToWithdraw();\\r\\n  error MaxWasteTransportExceeded();\\r\\n\\r\\n  event RegisteredBin(uint binId, address msgSender);\\r\\n\\r\\n  struct WasteData {\\r\\n    bytes32 value;\\r\\n    address collector;\\r\\n    address generator;\\r\\n    address recycler;\\r\\n    State state;\\r\\n  }\\r\\n\\r\\n  struct Profile {\\r\\n    uint32 transactionTime;\\r\\n    uint wasteCount;\\r\\n    bool approval;\\r\\n    bool isRegistered;\\r\\n    WasteData[] purchased;\\r\\n    bytes metadata;\\r\\n  }\\r\\n\\r\\n  struct BinData {\\r\\n    WasteData[] bin;\\r\\n    address owner;\\r\\n  }\\r\\n\\r\\n  struct Empty {\\r\\n    uint[] wasteIds;\\r\\n    string[] wastedata;\\r\\n  }\\r\\n\\r\\n}\",\"keccak256\":\"0xb15c46fd891b97a6a2c789d1853d865fb8c5be26605d6f70702d1caef4fa2046\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      },
      "contracts/libraries/IBoolaLib.sol": {
        "IBoolaLib": {
          "abi": [],
          "devdoc": {
            "kind": "dev",
            "methods": {},
            "version": 1
          },
          "evm": {
            "bytecode": {
              "generatedSources": [],
              "linkReferences": {},
              "object": "60566037600b82828239805160001a607314602a57634e487b7160e01b600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ea1e5d9f0d121f38bab6a519df335465a04f44b59eef98ed09fc670fe5cc08064736f6c63430008040033",
              "opcodes": "PUSH1 0x56 PUSH1 0x37 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x2A JUMPI PUSH4 0x4E487B71 PUSH1 0xE0 SHL PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E LOG1 0xE5 0xD9 CREATE 0xD1 0x21 RETURN DUP12 0xAB PUSH11 0x519DF335465A04F44B59EE 0xF9 DUP15 0xD0 SWAP16 0xC6 PUSH17 0xFE5CC08064736F6C634300080400330000 ",
              "sourceMap": "104:4414:8:-:0;;;;;;;;;;;;;;;-1:-1:-1;;;104:4414:8;;;;;;;;;;;;;;;;;"
            },
            "deployedBytecode": {
              "generatedSources": [],
              "immutableReferences": {},
              "linkReferences": {},
              "object": "73000000000000000000000000000000000000000030146080604052600080fdfea26469706673582212205ea1e5d9f0d121f38bab6a519df335465a04f44b59eef98ed09fc670fe5cc08064736f6c63430008040033",
              "opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x5E LOG1 0xE5 0xD9 CREATE 0xD1 0x21 RETURN DUP12 0xAB PUSH11 0x519DF335465A04F44B59EE 0xF9 DUP15 0xD0 SWAP16 0xC6 PUSH17 0xFE5CC08064736F6C634300080400330000 ",
              "sourceMap": "104:4414:8:-:0;;;;;;;;"
            },
            "gasEstimates": {
              "creation": {
                "codeDepositCost": "17200",
                "executionCost": "103",
                "totalCost": "17303"
              },
              "internal": {
                "_now()": "infinite",
                "_previousStatus(mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref)),address,enum Common.Category)": "infinite",
                "popFromArray(struct Common.BinData storage ref[] storage pointer,uint256,uint256)": "infinite",
                "popFromMapping(mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref),uint256,enum Common.State)": "infinite",
                "portToArray(struct Common.BinData storage ref[] storage pointer,uint256,struct Common.WasteData memory,enum Common.State)": "infinite",
                "portToMap(mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref),struct Common.WasteData memory,enum Common.State)": "infinite",
                "registerCollector(mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref)),address,string memory,string memory)": "infinite",
                "registerNewBin(struct Common.BinData storage ref[] storage pointer,address)": "infinite",
                "removeBin(struct Common.BinData storage ref[] storage pointer,uint256)": "infinite",
                "setStatus(mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref)),address,bool,enum Common.Category)": "infinite",
                "split(mapping(enum Common.Share => uint8),uint256)": "infinite"
              }
            },
            "methodIdentifiers": {}
          },
          "metadata": "{\"compiler\":{\"version\":\"0.8.4+commit.c7e474f2\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/libraries/IBoolaLib.sol\":\"IBoolaLib\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"contracts/interfaces/Common.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\ninterface Common {\\r\\n  enum State { GENERATED, COLLECTED, RECYCLED }\\r\\n  enum Category { COLLECTOR, GENERATOR, RECYCLER, BINOWNER, SOLD }\\r\\n  enum Share { COLLECTOR, GENERATOR, TEAM }\\r\\n\\r\\n  error UserAlreadyExist();\\r\\n  error UserAlreadyNotExist();\\r\\n  error InvalidBinID();\\r\\n  error EmptyBin();\\r\\n  error CannotDeleteBinInEngagedMode();\\r\\n  error InvalidWasteId();\\r\\n  error NothingToWithdraw();\\r\\n  error MaxWasteTransportExceeded();\\r\\n\\r\\n  event RegisteredBin(uint binId, address msgSender);\\r\\n\\r\\n  struct WasteData {\\r\\n    bytes32 value;\\r\\n    address collector;\\r\\n    address generator;\\r\\n    address recycler;\\r\\n    State state;\\r\\n  }\\r\\n\\r\\n  struct Profile {\\r\\n    uint32 transactionTime;\\r\\n    uint wasteCount;\\r\\n    bool approval;\\r\\n    bool isRegistered;\\r\\n    WasteData[] purchased;\\r\\n    bytes metadata;\\r\\n  }\\r\\n\\r\\n  struct BinData {\\r\\n    WasteData[] bin;\\r\\n    address owner;\\r\\n  }\\r\\n\\r\\n  struct Empty {\\r\\n    uint[] wasteIds;\\r\\n    string[] wastedata;\\r\\n  }\\r\\n\\r\\n}\",\"keccak256\":\"0xb15c46fd891b97a6a2c789d1853d865fb8c5be26605d6f70702d1caef4fa2046\",\"license\":\"GPL-3.0\"},\"contracts/libraries/IBoolaLib.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\r\\n\\r\\npragma solidity ^0.8.0;\\r\\n\\r\\nimport \\\"../interfaces/Common.sol\\\";\\r\\n\\r\\nlibrary IBoolaLib {\\r\\n  /**\\r\\n    @dev Sign up new collector\\r\\n      @param self - Storage\\r\\n      @param newCollector - Address of new Collector to add.\\r\\n   */\\r\\n\\r\\n  function registerCollector(\\r\\n    mapping (Common.Category=>mapping(address=>Common.Profile)) storage self, \\r\\n      address newCollector, \\r\\n      string memory location, \\r\\n      string memory _address\\r\\n    ) internal {\\r\\n      Common.Category _c = Common.Category.COLLECTOR;\\r\\n      self[_c][newCollector].transactionTime = _now();\\r\\n      self[_c][newCollector].wasteCount = 0;\\r\\n      self[_c][newCollector].approval = false;\\r\\n      self[_c][newCollector].isRegistered = true;\\r\\n      self[_c][newCollector].metadata = abi.encode(location, _address);\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev Dual function: \\r\\n            o Recycles collected waste.\\r\\n            o Generate new waste.\\r\\n   */\\r\\n  function portToMap(\\r\\n    mapping (Common.State=>Common.WasteData[]) storage self, \\r\\n    Common.WasteData memory inWaste,\\r\\n    Common.State state\\r\\n  ) internal {\\r\\n    self[state].push(Common.WasteData(\\r\\n        inWaste.value,\\r\\n        inWaste.collector,\\r\\n        inWaste.generator,\\r\\n        inWaste.recycler,\\r\\n        state\\r\\n      )\\r\\n    );\\r\\n  }\\r\\n\\r\\n  ///@dev Moves waste to bin\\r\\n  function portToArray(Common.BinData[] storage self, uint binId, Common.WasteData memory inWaste, Common.State state) internal {\\r\\n    self[binId].bin.push(Common.WasteData(\\r\\n      inWaste.value,\\r\\n      inWaste.collector,\\r\\n      inWaste.generator,\\r\\n      inWaste.recycler,\\r\\n      state\\r\\n    )\\r\\n    );\\r\\n  }\\r\\n\\r\\n  ///@dev Removes waste at 'wasteId' from bin at 'binId' in bin array at hashmap 'self'\\r\\n  function popFromMapping(mapping (Common.State=>Common.WasteData[]) storage self, uint wasteId, Common.State state) internal returns(Common.WasteData memory _waste) {\\r\\n    _waste = self[state][wasteId];\\r\\n    delete self[state][wasteId];\\r\\n  }\\r\\n\\r\\n  ///@dev Removes waste at 'wasteId' from bin at 'binId' in bin array 'self'\\r\\n  function popFromArray(Common.BinData[] storage self, uint binId, uint wasteId) internal returns(Common.WasteData memory _waste) {\\r\\n    _waste = self[binId].bin[wasteId];\\r\\n    delete self[binId].bin[wasteId];\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev Sets collectors status to either true or false\\r\\n    @param value - Value to set status to.\\r\\n    @param who - User to set status for.\\r\\n    @param self - storage.\\r\\n      Note : If value is true, collector's status must be false vice versa.\\r\\n   */\\r\\n  function setStatus(mapping (Common.Category=>mapping(address=>Common.Profile)) storage self, address who, bool value, Common.Category cat) internal {\\r\\n    bool prevStatus = _previousStatus(self, who, cat);\\r\\n    if(value) {\\r\\n      if(prevStatus) revert Common.UserAlreadyExist();\\r\\n      self[cat][who].approval = true;\\r\\n    } else {\\r\\n      if(!prevStatus) revert Common.UserAlreadyNotExist();\\r\\n      self[cat][who].approval = false;\\r\\n    }\\r\\n  }\\r\\n\\r\\n  function _previousStatus(mapping (Common.Category=>mapping(address=>Common.Profile)) storage self, address who, Common.Category cat) private view returns(bool) {\\r\\n    return self[cat][who].approval;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev Registers new bin with owner.\\r\\n        @param owner - Bin Owner\\r\\n        @param self - Storage\\r\\n        @return newId \\r\\n   */\\r\\n  function registerNewBin(Common.BinData[] storage self, address owner) internal returns(uint newId) {\\r\\n    newId = self.length;\\r\\n    self.push();\\r\\n    self[newId].owner = owner;\\r\\n  }\\r\\n\\r\\n  /**\\r\\n    @dev Removes bin from bin array.\\r\\n      @notice binId must be less than the bin array at any time since arrays are zero-based.\\r\\n      @param self - Storage\\r\\n   */\\r\\n  function removeBin(Common.BinData[] storage self, uint binId) internal {\\r\\n    (uint len, Common.BinData memory wasteBin)  = (self.length, self[binId]);\\r\\n    if(wasteBin.bin.length == 0) revert Common.EmptyBin();\\r\\n    for(uint i = 0; i < len; i++) {\\r\\n      if(wasteBin.bin[i].state < Common.State.RECYCLED) {\\r\\n        revert Common.CannotDeleteBinInEngagedMode();\\r\\n      }\\r\\n    } \\r\\n    delete self[binId];\\r\\n  }\\r\\n\\r\\n  function split(mapping (Common.Share=>uint8) storage self, uint amount) internal view returns(uint collector, uint generator, uint team) {\\r\\n    collector = (self[Common.Share.COLLECTOR] * amount) / 100;\\r\\n    generator = (self[Common.Share.GENERATOR] * amount) / 100;\\r\\n    team = (self[Common.Share.TEAM] * amount) / 100;\\r\\n\\r\\n  }\\r\\n\\r\\n  function _now() internal view returns(uint32) { return uint32(block.timestamp); }\\r\\n\\r\\n}\",\"keccak256\":\"0x7e4a0c6eec77642dd13e4e0fcaf34da6f40ee8ab1142726d257c7f5b635082fe\",\"license\":\"GPL-3.0\"}},\"version\":1}",
          "storageLayout": {
            "storage": [],
            "types": null
          },
          "userdoc": {
            "kind": "user",
            "methods": {},
            "version": 1
          }
        }
      }
    },
    "sources": {
      "contracts/IBoolaContract.sol": {
        "ast": {
          "absolutePath": "contracts/IBoolaContract.sol",
          "exportedSymbols": {
            "Common": [
              2046
            ],
            "Context": [
              1164
            ],
            "IBoolaContract": [
              1086
            ],
            "IBoolaLib": [
              2524
            ],
            "IERC20": [
              1828
            ],
            "Ownable": [
              1966
            ]
          },
          "id": 1087,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:0"
            },
            {
              "absolutePath": "contracts/libraries/IBoolaLib.sol",
              "file": "./libraries/IBoolaLib.sol",
              "id": 2,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1087,
              "sourceUnit": 2525,
              "src": "66:35:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/deps/Context.sol",
              "file": "./deps/Context.sol",
              "id": 3,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1087,
              "sourceUnit": 1165,
              "src": "103:28:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/deps/Ownable.sol",
              "file": "./deps/Ownable.sol",
              "id": 4,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1087,
              "sourceUnit": 1967,
              "src": "133:28:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/deps/IERC20.sol",
              "file": "./deps/IERC20.sol",
              "id": 5,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1087,
              "sourceUnit": 1829,
              "src": "163:27:0",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 7,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1164,
                    "src": "1804:7:0"
                  },
                  "id": 8,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1804:7:0"
                },
                {
                  "baseName": {
                    "id": 9,
                    "name": "Common",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 2046,
                    "src": "1813:6:0"
                  },
                  "id": 10,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1813:6:0"
                },
                {
                  "baseName": {
                    "id": 11,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1966,
                    "src": "1821:7:0"
                  },
                  "id": 12,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1821:7:0"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 6,
                "nodeType": "StructuredDocumentation",
                "src": "194:1581:0",
                "text": " @title IBoolaContract\n @author Bobeu: https://github.com/bobeu\n A smart contract that will tokenize the disposal and collection of waste. \nUsers get a token when they dispose of their waste in a waste bin, collectors \nget token for collecting waste and taking them to the waste recyclers \nThe process of tokenization happens when the waste drops in the waste bin. Every\nwaste bin has a unique wallet ID which will receive the token at the end of evacuation.\nThe owners of the waste bin will have a DAO. \nWallet \nToken (iBoola token) which would be paired against either Avalanche, Celo or Polygon \nNew users get 10 $IBT after sign up \nCommunity of waste bins will have a DAO \nWaste generators get 10% collectors get 65 while the iBoola team gets 25% \nDecimals: use standard 18 decimals \nMintable: not mintable\nOwnership privilege :  30% locked for 5 years, 20% for dev team 45% for  initial circulation, \n5% for presale \nPSEUDO\n======\nParties:\no Waste generators.\no Collectors.\no Recyclers.\no When waste is disposed or evacuated, then reward collectors.\no Each waste bin has a unique identifer and an owner.\no On sign up, user gets 10 $IBT Token.\no Waste collectors own a DAO.\no Waste bin owners own a DAO.\no Reward sharing formula Note - It is configurable. The owner account is able to \nset each of these fields.\n- Waste generators 10%.\n- Collectors 65%.\n- Team 25%."
              },
              "fullyImplemented": true,
              "id": 1086,
              "linearizedBaseContracts": [
                1086,
                1966,
                2046,
                1164
              ],
              "name": "IBoolaContract",
              "nameLocation": "1786:14:0",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "documentation": {
                    "id": 13,
                    "nodeType": "StructuredDocumentation",
                    "src": "1838:26:0",
                    "text": "@dev New sign up reward"
                  },
                  "functionSelector": "f9404506",
                  "id": 15,
                  "mutability": "mutable",
                  "name": "newSignUpReward",
                  "nameLocation": "1882:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "1870:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 14,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "1870:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 16,
                    "nodeType": "StructuredDocumentation",
                    "src": "1906:20:0",
                    "text": "@dev iBoola Token"
                  },
                  "functionSelector": "fc0c546a",
                  "id": 18,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1947:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "1932:20:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 17,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1932:7:0",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 19,
                    "nodeType": "StructuredDocumentation",
                    "src": "1961:37:0",
                    "text": "@dev Total waste generated to date"
                  },
                  "functionSelector": "ffc2105c",
                  "id": 21,
                  "mutability": "mutable",
                  "name": "totalWasteGenerated",
                  "nameLocation": "2019:19:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "2004:34:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 20,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2004:7:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 22,
                    "nodeType": "StructuredDocumentation",
                    "src": "2047:24:0",
                    "text": "@dev Collector reward"
                  },
                  "functionSelector": "235eb9f5",
                  "id": 24,
                  "mutability": "mutable",
                  "name": "collectorReward",
                  "nameLocation": "2089:15:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "2077:27:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 23,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2077:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 25,
                    "nodeType": "StructuredDocumentation",
                    "src": "2113:36:0",
                    "text": "@dev Total bin registered to date"
                  },
                  "functionSelector": "1f2a4a3f",
                  "id": 27,
                  "mutability": "mutable",
                  "name": "binCounter",
                  "nameLocation": "2167:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "2155:22:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 26,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2155:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 28,
                    "nodeType": "StructuredDocumentation",
                    "src": "2186:31:0",
                    "text": "@dev Price of recycled waste"
                  },
                  "functionSelector": "a035b1fe",
                  "id": 30,
                  "mutability": "mutable",
                  "name": "price",
                  "nameLocation": "2235:5:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "2223:17:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 29,
                    "name": "uint",
                    "nodeType": "ElementaryTypeName",
                    "src": "2223:4:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 31,
                    "nodeType": "StructuredDocumentation",
                    "src": "2249:188:0",
                    "text": "@dev Array of bins \n{ Contain bins which contain collected wastes which contains wastedata}\n@notice Bins in this list are owned by addresses."
                  },
                  "functionSelector": "885c7b38",
                  "id": 35,
                  "mutability": "mutable",
                  "name": "bins",
                  "nameLocation": "2460:4:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "2443:21:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                    "typeString": "struct Common.BinData[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 33,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 32,
                        "name": "BinData",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 2038,
                        "src": "2443:7:0"
                      },
                      "referencedDeclaration": 2038,
                      "src": "2443:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_BinData_$2038_storage_ptr",
                        "typeString": "struct Common.BinData"
                      }
                    },
                    "id": 34,
                    "nodeType": "ArrayTypeName",
                    "src": "2443:9:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                      "typeString": "struct Common.BinData[]"
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "functionSelector": "c2f0c279",
                  "id": 40,
                  "mutability": "mutable",
                  "name": "formula",
                  "nameLocation": "2507:7:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "2477:37:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                    "typeString": "mapping(enum Common.Share => uint8)"
                  },
                  "typeName": {
                    "id": 39,
                    "keyType": {
                      "id": 37,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 36,
                        "name": "Share",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1982,
                        "src": "2486:5:0"
                      },
                      "referencedDeclaration": 1982,
                      "src": "2486:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Share_$1982",
                        "typeString": "enum Common.Share"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2477:22:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                      "typeString": "mapping(enum Common.Share => uint8)"
                    },
                    "valueType": {
                      "id": 38,
                      "name": "uint8",
                      "nodeType": "ElementaryTypeName",
                      "src": "2493:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 41,
                    "nodeType": "StructuredDocumentation",
                    "src": "2529:222:0",
                    "text": "@dev Mapping of Generated and Recycled Waste State -> binId (binCounter) -> WasteData\nKeys type: \no State\no uint256\nvalue:\narray of struct(s) "
                  },
                  "id": 48,
                  "mutability": "mutable",
                  "name": "_garbages",
                  "nameLocation": "2794:9:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "2757:46:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                    "typeString": "mapping(enum Common.State => struct Common.WasteData[])"
                  },
                  "typeName": {
                    "id": 47,
                    "keyType": {
                      "id": 43,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42,
                        "name": "State",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1972,
                        "src": "2766:5:0"
                      },
                      "referencedDeclaration": 1972,
                      "src": "2766:5:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1972",
                        "typeString": "enum Common.State"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2757:28:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                      "typeString": "mapping(enum Common.State => struct Common.WasteData[])"
                    },
                    "valueType": {
                      "baseType": {
                        "id": 45,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 44,
                          "name": "WasteData",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2016,
                          "src": "2773:9:0"
                        },
                        "referencedDeclaration": 2016,
                        "src": "2773:9:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                          "typeString": "struct Common.WasteData"
                        }
                      },
                      "id": 46,
                      "nodeType": "ArrayTypeName",
                      "src": "2773:11:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr",
                        "typeString": "struct Common.WasteData[]"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 49,
                    "nodeType": "StructuredDocumentation",
                    "src": "2816:172:0",
                    "text": "@dev Mapping of Waste State -> user -> profile\nKeys type: \no State\no address\nvalue:\nstruct "
                  },
                  "id": 57,
                  "mutability": "mutable",
                  "name": "profiles",
                  "nameLocation": "3048:8:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "2994:62:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                    "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile))"
                  },
                  "typeName": {
                    "id": 56,
                    "keyType": {
                      "id": 51,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 50,
                        "name": "Category",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1978,
                        "src": "3003:8:0"
                      },
                      "referencedDeclaration": 1978,
                      "src": "3003:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Category_$1978",
                        "typeString": "enum Common.Category"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "2994:45:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                      "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile))"
                    },
                    "valueType": {
                      "id": 55,
                      "keyType": {
                        "id": 52,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "3021:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "3013:25:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                        "typeString": "mapping(address => struct Common.Profile)"
                      },
                      "valueType": {
                        "id": 54,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 53,
                          "name": "Profile",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 2031,
                          "src": "3030:7:0"
                        },
                        "referencedDeclaration": 2031,
                        "src": "3030:7:0",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Profile_$2031_storage_ptr",
                          "typeString": "struct Common.Profile"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "documentation": {
                    "id": 58,
                    "nodeType": "StructuredDocumentation",
                    "src": "3065:129:0",
                    "text": "@dev Sign up fees for different category.\n@notice - It can be configured to suit any category."
                  },
                  "functionSelector": "0095db2d",
                  "id": 63,
                  "mutability": "mutable",
                  "name": "signUpFees",
                  "nameLocation": "3235:10:0",
                  "nodeType": "VariableDeclaration",
                  "scope": 1086,
                  "src": "3200:45:0",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_uint256_$",
                    "typeString": "mapping(enum Common.Category => uint256)"
                  },
                  "typeName": {
                    "id": 62,
                    "keyType": {
                      "id": 60,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 59,
                        "name": "Category",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1978,
                        "src": "3209:8:0"
                      },
                      "referencedDeclaration": 1978,
                      "src": "3209:8:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_Category_$1978",
                        "typeString": "enum Common.Category"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "3200:27:0",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_uint256_$",
                      "typeString": "mapping(enum Common.Category => uint256)"
                    },
                    "valueType": {
                      "id": 61,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "3219:7:0",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 118,
                    "nodeType": "Block",
                    "src": "3418:492:0",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          },
                          "id": 78,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 75,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 71,
                            "src": "3432:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1972",
                              "typeString": "enum Common.State"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 76,
                              "name": "State",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1972,
                              "src": "3441:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                                "typeString": "type(enum Common.State)"
                              }
                            },
                            "id": 77,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "COLLECTED",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1970,
                            "src": "3441:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1972",
                              "typeString": "enum Common.State"
                            }
                          },
                          "src": "3432:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_State_$1972",
                              "typeString": "enum Common.State"
                            },
                            "id": 94,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 91,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71,
                              "src": "3555:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 92,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1972,
                                "src": "3564:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                                  "typeString": "type(enum Common.State)"
                                }
                              },
                              "id": 93,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "GENERATED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1969,
                              "src": "3564:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            },
                            "src": "3555:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "id": 114,
                            "nodeType": "Block",
                            "src": "3675:73:0",
                            "statements": [
                              {
                                "condition": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 109,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 106,
                                    "name": "binId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 66,
                                    "src": "3693:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">=",
                                  "rightExpression": {
                                    "expression": {
                                      "id": 107,
                                      "name": "bins",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 35,
                                      "src": "3702:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                        "typeString": "struct Common.BinData storage ref[] storage ref"
                                      }
                                    },
                                    "id": 108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "3702:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "3693:20:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "id": 113,
                                "nodeType": "IfStatement",
                                "src": "3690:46:0",
                                "trueBody": {
                                  "errorCall": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 110,
                                      "name": "InvalidBinID",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1988,
                                      "src": "3722:12:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                        "typeString": "function () pure"
                                      }
                                    },
                                    "id": 111,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3722:14:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 112,
                                  "nodeType": "RevertStatement",
                                  "src": "3715:21:0"
                                }
                              }
                            ]
                          },
                          "id": 115,
                          "nodeType": "IfStatement",
                          "src": "3552:196:0",
                          "trueBody": {
                            "id": 105,
                            "nodeType": "Block",
                            "src": "3581:88:0",
                            "statements": [
                              {
                                "expression": {
                                  "arguments": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 101,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 96,
                                        "name": "wasteId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 68,
                                        "src": "3604:7:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "<",
                                      "rightExpression": {
                                        "expression": {
                                          "baseExpression": {
                                            "id": 97,
                                            "name": "_garbages",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 48,
                                            "src": "3614:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                              "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                                            }
                                          },
                                          "id": 99,
                                          "indexExpression": {
                                            "id": 98,
                                            "name": "state",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 71,
                                            "src": "3624:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_State_$1972",
                                              "typeString": "enum Common.State"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3614:16:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                            "typeString": "struct Common.WasteData storage ref[] storage ref"
                                          }
                                        },
                                        "id": 100,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "length",
                                        "nodeType": "MemberAccess",
                                        "src": "3614:23:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "3604:33:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      }
                                    },
                                    {
                                      "hexValue": "496e76616c69642077617374654964",
                                      "id": 102,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3639:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_87cfbd6b6eb548ee8fb6c49554690157210f324b121b51335da25bb255604d5c",
                                        "typeString": "literal_string \"Invalid wasteId\""
                                      },
                                      "value": "Invalid wasteId"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bool",
                                        "typeString": "bool"
                                      },
                                      {
                                        "typeIdentifier": "t_stringliteral_87cfbd6b6eb548ee8fb6c49554690157210f324b121b51335da25bb255604d5c",
                                        "typeString": "literal_string \"Invalid wasteId\""
                                      }
                                    ],
                                    "id": 95,
                                    "name": "require",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [
                                      -18,
                                      -18
                                    ],
                                    "referencedDeclaration": -18,
                                    "src": "3596:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                      "typeString": "function (bool,string memory) pure"
                                    }
                                  },
                                  "id": 103,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3596:61:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 104,
                                "nodeType": "ExpressionStatement",
                                "src": "3596:61:0"
                              }
                            ]
                          }
                        },
                        "id": 116,
                        "nodeType": "IfStatement",
                        "src": "3429:319:0",
                        "trueBody": {
                          "id": 90,
                          "nodeType": "Block",
                          "src": "3458:88:0",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 85,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 79,
                                  "name": "wasteId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 68,
                                  "src": "3476:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "baseExpression": {
                                        "id": 80,
                                        "name": "bins",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 35,
                                        "src": "3487:4:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                          "typeString": "struct Common.BinData storage ref[] storage ref"
                                        }
                                      },
                                      "id": 82,
                                      "indexExpression": {
                                        "id": 81,
                                        "name": "binId",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 66,
                                        "src": "3492:5:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3487:11:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_BinData_$2038_storage",
                                        "typeString": "struct Common.BinData storage ref"
                                      }
                                    },
                                    "id": 83,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "bin",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 2035,
                                    "src": "3487:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                      "typeString": "struct Common.WasteData storage ref[] storage ref"
                                    }
                                  },
                                  "id": 84,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "3487:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "3476:33:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 89,
                              "nodeType": "IfStatement",
                              "src": "3473:61:0",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 86,
                                    "name": "InvalidWasteId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1994,
                                    "src": "3518:14:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 87,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3518:16:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 88,
                                "nodeType": "RevertStatement",
                                "src": "3511:23:0"
                              }
                            }
                          ]
                        }
                      },
                      {
                        "id": 117,
                        "nodeType": "PlaceholderStatement",
                        "src": "3901:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 64,
                    "nodeType": "StructuredDocumentation",
                    "src": "3254:15:0",
                    "text": "@dev Rewards"
                  },
                  "id": 119,
                  "name": "validateWasteId",
                  "nameLocation": "3335:15:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 74,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 66,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "3356:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "3351:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 65,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3351:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 68,
                        "mutability": "mutable",
                        "name": "wasteId",
                        "nameLocation": "3368:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "3363:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 67,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3363:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 71,
                        "mutability": "mutable",
                        "name": "state",
                        "nameLocation": "3383:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "3377:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1972",
                          "typeString": "enum Common.State"
                        },
                        "typeName": {
                          "id": 70,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 69,
                            "name": "State",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1972,
                            "src": "3377:5:0"
                          },
                          "referencedDeclaration": 1972,
                          "src": "3377:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 73,
                        "mutability": "mutable",
                        "name": "errorMessage",
                        "nameLocation": "3404:12:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 119,
                        "src": "3390:26:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 72,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "3390:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3350:67:0"
                  },
                  "src": "3326:584:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 137,
                    "nodeType": "Block",
                    "src": "3997:87:0",
                    "statements": [
                      {
                        "condition": {
                          "id": 131,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "4011:23:0",
                          "subExpression": {
                            "arguments": [
                              {
                                "id": 128,
                                "name": "cat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 123,
                                "src": "4025:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Category_$1978",
                                  "typeString": "enum Common.Category"
                                }
                              },
                              {
                                "id": 129,
                                "name": "who",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 125,
                                "src": "4030:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_enum$_Category_$1978",
                                  "typeString": "enum Common.Category"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 127,
                              "name": "_getApproval",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 668,
                              "src": "4012:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$_t_enum$_Category_$1978_$_t_address_$returns$_t_bool_$",
                                "typeString": "function (enum Common.Category,address) view returns (bool)"
                              }
                            },
                            "id": 130,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4012:22:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 135,
                        "nodeType": "IfStatement",
                        "src": "4008:56:0",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 132,
                              "name": "UserAlreadyNotExist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1986,
                              "src": "4043:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 133,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4043:21:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 134,
                          "nodeType": "RevertStatement",
                          "src": "4036:28:0"
                        }
                      },
                      {
                        "id": 136,
                        "nodeType": "PlaceholderStatement",
                        "src": "4075:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 120,
                    "nodeType": "StructuredDocumentation",
                    "src": "3918:26:0",
                    "text": "Checks user's existence"
                  },
                  "id": 138,
                  "name": "isApproved",
                  "nameLocation": "3959:10:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 126,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 123,
                        "mutability": "mutable",
                        "name": "cat",
                        "nameLocation": "3979:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "3970:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Category_$1978",
                          "typeString": "enum Common.Category"
                        },
                        "typeName": {
                          "id": 122,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 121,
                            "name": "Category",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1978,
                            "src": "3970:8:0"
                          },
                          "referencedDeclaration": 1978,
                          "src": "3970:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1978",
                            "typeString": "enum Common.Category"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 125,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "3992:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 138,
                        "src": "3984:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 124,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3984:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3969:27:0"
                  },
                  "src": "3950:134:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 151,
                    "nodeType": "Block",
                    "src": "4161:67:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 146,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 144,
                                "name": "cat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 141,
                                "src": "4180:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "34",
                                "id": 145,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4186:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "src": "4180:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642063617465676f7279",
                              "id": 147,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4189:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c42ca90c935df80db9ecab8e34c935bcc35abb722f6ed440da8d67e0cbd0ec47",
                                "typeString": "literal_string \"Invalid category\""
                              },
                              "value": "Invalid category"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c42ca90c935df80db9ecab8e34c935bcc35abb722f6ed440da8d67e0cbd0ec47",
                                "typeString": "literal_string \"Invalid category\""
                              }
                            ],
                            "id": 143,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4172:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 148,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4172:36:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 149,
                        "nodeType": "ExpressionStatement",
                        "src": "4172:36:0"
                      },
                      {
                        "id": 150,
                        "nodeType": "PlaceholderStatement",
                        "src": "4219:1:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 139,
                    "nodeType": "StructuredDocumentation",
                    "src": "4092:26:0",
                    "text": "@dev Validates category"
                  },
                  "id": 152,
                  "name": "validateCategory",
                  "nameLocation": "4133:16:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 141,
                        "mutability": "mutable",
                        "name": "cat",
                        "nameLocation": "4156:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 152,
                        "src": "4150:9:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 140,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "4150:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4149:11:0"
                  },
                  "src": "4124:104:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 200,
                    "nodeType": "Block",
                    "src": "4367:278:0",
                    "statements": [
                      {
                        "assignments": [
                          161,
                          163
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 161,
                            "mutability": "mutable",
                            "name": "low",
                            "nameLocation": "4385:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 200,
                            "src": "4379:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 160,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4379:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 163,
                            "mutability": "mutable",
                            "name": "high",
                            "nameLocation": "4396:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 200,
                            "src": "4390:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            },
                            "typeName": {
                              "id": 162,
                              "name": "uint8",
                              "nodeType": "ElementaryTypeName",
                              "src": "4390:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 167,
                        "initialValue": {
                          "components": [
                            {
                              "hexValue": "30",
                              "id": 164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4405:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            {
                              "hexValue": "3530",
                              "id": 165,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4408:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_50_by_1",
                                "typeString": "int_const 50"
                              },
                              "value": "50"
                            }
                          ],
                          "id": 166,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "4404:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_rational_0_by_1_$_t_rational_50_by_1_$",
                            "typeString": "tuple(int_const 0,int_const 50)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4378:33:0"
                      },
                      {
                        "expression": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 172,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 168,
                                "name": "wastedata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 158,
                                "src": "4422:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              },
                              "id": 170,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "4422:16:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "hexValue": "30",
                              "id": 171,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4442:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "src": "4422:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 194,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 189,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 186,
                                      "name": "wastedata",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 158,
                                      "src": "4563:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "string memory[] memory"
                                      }
                                    },
                                    "id": 187,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4563:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "id": 188,
                                    "name": "low",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "4582:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "4563:22:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 193,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 190,
                                      "name": "wastedata",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 158,
                                      "src": "4589:9:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "string memory[] memory"
                                      }
                                    },
                                    "id": 191,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4589:16:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 192,
                                    "name": "high",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 163,
                                    "src": "4609:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "4589:24:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4563:50:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "696e76616c6964",
                                "id": 195,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4615:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
                                  "typeString": "literal_string \"invalid\""
                                },
                                "value": "invalid"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
                                  "typeString": "literal_string \"invalid\""
                                }
                              ],
                              "id": 185,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4555:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 196,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4555:70:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 197,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "Conditional",
                          "src": "4422:203:0",
                          "trueExpression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "id": 182,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 177,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 174,
                                      "name": "wasteIDs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 155,
                                      "src": "4468:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 175,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4468:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": ">",
                                  "rightExpression": {
                                    "id": 176,
                                    "name": "low",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 161,
                                    "src": "4486:3:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "4468:21:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "&&",
                                "rightExpression": {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 181,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 178,
                                      "name": "wasteIDs",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 155,
                                      "src": "4493:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 179,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "length",
                                    "nodeType": "MemberAccess",
                                    "src": "4493:15:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "<=",
                                  "rightExpression": {
                                    "id": 180,
                                    "name": "high",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 163,
                                    "src": "4512:4:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "src": "4493:23:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "src": "4468:48:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "696e76616c6964",
                                "id": 183,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4532:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
                                  "typeString": "literal_string \"invalid\""
                                },
                                "value": "invalid"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_ffd7db0f9d5cdeb49c4c9eba649d4dc6d852d64671e65488e57f58584992ac68",
                                  "typeString": "literal_string \"invalid\""
                                }
                              ],
                              "id": 173,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "4446:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 184,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4446:106:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 198,
                        "nodeType": "ExpressionStatement",
                        "src": "4422:203:0"
                      },
                      {
                        "id": 199,
                        "nodeType": "PlaceholderStatement",
                        "src": "4636:1:0"
                      }
                    ]
                  },
                  "id": 201,
                  "name": "validateSize",
                  "nameLocation": "4303:12:0",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 159,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 155,
                        "mutability": "mutable",
                        "name": "wasteIDs",
                        "nameLocation": "4330:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 201,
                        "src": "4316:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 153,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "4316:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 154,
                          "nodeType": "ArrayTypeName",
                          "src": "4316:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 158,
                        "mutability": "mutable",
                        "name": "wastedata",
                        "nameLocation": "4356:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 201,
                        "src": "4340:25:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 156,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "4340:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 157,
                          "nodeType": "ArrayTypeName",
                          "src": "4340:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4315:51:0"
                  },
                  "src": "4294:351:0",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 251,
                    "nodeType": "Block",
                    "src": "4682:261:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 208,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 206,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 18,
                            "src": "4694:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 207,
                            "name": "_token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 203,
                            "src": "4702:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "4694:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 209,
                        "nodeType": "ExpressionStatement",
                        "src": "4694:14:0"
                      },
                      {
                        "expression": {
                          "id": 217,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 210,
                            "name": "newSignUpReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "4719:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            },
                            "id": 216,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "hexValue": "3130",
                              "id": 211,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4737:2:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_10_by_1",
                                "typeString": "int_const 10"
                              },
                              "value": "10"
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "*",
                            "rightExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  },
                                  "id": 214,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "hexValue": "3130",
                                    "id": 212,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4743:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_10_by_1",
                                      "typeString": "int_const 10"
                                    },
                                    "value": "10"
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "**",
                                  "rightExpression": {
                                    "hexValue": "3138",
                                    "id": 213,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4749:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_18_by_1",
                                      "typeString": "int_const 18"
                                    },
                                    "value": "18"
                                  },
                                  "src": "4743:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                    "typeString": "int_const 1000000000000000000"
                                  }
                                }
                              ],
                              "id": 215,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4742:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                "typeString": "int_const 1000000000000000000"
                              }
                            },
                            "src": "4737:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10000000000000000000_by_1",
                              "typeString": "int_const 10000000000000000000"
                            }
                          },
                          "src": "4719:33:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 218,
                        "nodeType": "ExpressionStatement",
                        "src": "4719:33:0"
                      },
                      {
                        "expression": {
                          "id": 228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 219,
                                  "name": "profiles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57,
                                  "src": "4763:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                    "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                  }
                                },
                                "id": 224,
                                "indexExpression": {
                                  "expression": {
                                    "id": 220,
                                    "name": "Category",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1978,
                                    "src": "4772:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                      "typeString": "type(enum Common.Category)"
                                    }
                                  },
                                  "id": 221,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "BINOWNER",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1976,
                                  "src": "4772:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Category_$1978",
                                    "typeString": "enum Common.Category"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "4763:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                  "typeString": "mapping(address => struct Common.Profile storage ref)"
                                }
                              },
                              "id": 225,
                              "indexExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 222,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1154,
                                  "src": "4791:10:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 223,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4791:12:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4763:41:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                "typeString": "struct Common.Profile storage ref"
                              }
                            },
                            "id": 226,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "approval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2022,
                            "src": "4763:50:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 227,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4816:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "4763:57:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 229,
                        "nodeType": "ExpressionStatement",
                        "src": "4763:57:0"
                      },
                      {
                        "expression": {
                          "id": 235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 230,
                              "name": "formula",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4831:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                                "typeString": "mapping(enum Common.Share => uint8)"
                              }
                            },
                            "id": 233,
                            "indexExpression": {
                              "expression": {
                                "id": 231,
                                "name": "Share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1982,
                                "src": "4839:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Share_$1982_$",
                                  "typeString": "type(enum Common.Share)"
                                }
                              },
                              "id": 232,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "COLLECTOR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1979,
                              "src": "4839:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Share_$1982",
                                "typeString": "enum Common.Share"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4831:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3635",
                            "id": 234,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4858:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_65_by_1",
                              "typeString": "int_const 65"
                            },
                            "value": "65"
                          },
                          "src": "4831:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 236,
                        "nodeType": "ExpressionStatement",
                        "src": "4831:29:0"
                      },
                      {
                        "expression": {
                          "id": 242,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 237,
                              "name": "formula",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4871:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                                "typeString": "mapping(enum Common.Share => uint8)"
                              }
                            },
                            "id": 240,
                            "indexExpression": {
                              "expression": {
                                "id": 238,
                                "name": "Share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1982,
                                "src": "4879:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Share_$1982_$",
                                  "typeString": "type(enum Common.Share)"
                                }
                              },
                              "id": 239,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "GENERATOR",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1980,
                              "src": "4879:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Share_$1982",
                                "typeString": "enum Common.Share"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4871:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3130",
                            "id": 241,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4898:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_10_by_1",
                              "typeString": "int_const 10"
                            },
                            "value": "10"
                          },
                          "src": "4871:29:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 243,
                        "nodeType": "ExpressionStatement",
                        "src": "4871:29:0"
                      },
                      {
                        "expression": {
                          "id": 249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 244,
                              "name": "formula",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "4911:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                                "typeString": "mapping(enum Common.Share => uint8)"
                              }
                            },
                            "id": 247,
                            "indexExpression": {
                              "expression": {
                                "id": 245,
                                "name": "Share",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1982,
                                "src": "4919:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Share_$1982_$",
                                  "typeString": "type(enum Common.Share)"
                                }
                              },
                              "id": 246,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "TEAM",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1981,
                              "src": "4919:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Share_$1982",
                                "typeString": "enum Common.Share"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4911:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "3235",
                            "id": 248,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4933:2:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_25_by_1",
                              "typeString": "int_const 25"
                            },
                            "value": "25"
                          },
                          "src": "4911:24:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "id": 250,
                        "nodeType": "ExpressionStatement",
                        "src": "4911:24:0"
                      }
                    ]
                  },
                  "id": 252,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 204,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 203,
                        "mutability": "mutable",
                        "name": "_token",
                        "nameLocation": "4674:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 252,
                        "src": "4666:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 202,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4666:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4665:16:0"
                  },
                  "returnParameters": {
                    "id": 205,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4682:0:0"
                  },
                  "scope": 1086,
                  "src": "4653:290:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 292,
                    "nodeType": "Block",
                    "src": "5148:245:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5166:56:0",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 261,
                                      "name": "profiles",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57,
                                      "src": "5167:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                        "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                      }
                                    },
                                    "id": 264,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 262,
                                        "name": "Category",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1978,
                                        "src": "5176:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                          "typeString": "type(enum Common.Category)"
                                        }
                                      },
                                      "id": 263,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "COLLECTOR",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1973,
                                      "src": "5176:18:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Category_$1978",
                                        "typeString": "enum Common.Category"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5167:28:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                      "typeString": "mapping(address => struct Common.Profile storage ref)"
                                    }
                                  },
                                  "id": 267,
                                  "indexExpression": {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 265,
                                      "name": "_msgSender",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1154,
                                      "src": "5196:10:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                        "typeString": "function () view returns (address)"
                                      }
                                    },
                                    "id": 266,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "5196:12:0",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5167:42:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                    "typeString": "struct Common.Profile storage ref"
                                  }
                                },
                                "id": 268,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isRegistered",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2024,
                                "src": "5167:55:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c7265616479207369676e207570",
                              "id": 270,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5224:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0855ec215c237c3402a18339339aeeabd173180125b97094d2e4366ff55d9ec5",
                                "typeString": "literal_string \"Already sign up\""
                              },
                              "value": "Already sign up"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0855ec215c237c3402a18339339aeeabd173180125b97094d2e4366ff55d9ec5",
                                "typeString": "literal_string \"Already sign up\""
                              }
                            ],
                            "id": 260,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5158:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 271,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5158:84:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 272,
                        "nodeType": "ExpressionStatement",
                        "src": "5158:84:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 276,
                              "name": "profiles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "5280:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 277,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "5290:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 278,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5290:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 279,
                              "name": "location",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 255,
                              "src": "5304:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            },
                            {
                              "id": 280,
                              "name": "_address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 257,
                              "src": "5314:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              },
                              {
                                "typeIdentifier": "t_string_memory_ptr",
                                "typeString": "string memory"
                              }
                            ],
                            "expression": {
                              "id": 273,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "5252:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "registerCollector",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2127,
                            "src": "5252:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$_$_t_address_$_t_string_memory_ptr_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref)),address,string memory,string memory)"
                            }
                          },
                          "id": 281,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5252:71:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 282,
                        "nodeType": "ExpressionStatement",
                        "src": "5252:71:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 287,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "5355:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 288,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5355:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 289,
                              "name": "newSignUpReward",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 15,
                              "src": "5369:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 284,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "5340:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 283,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1828,
                                "src": "5333:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1828_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5333:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1828",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 286,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1815,
                            "src": "5333:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5333:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 291,
                        "nodeType": "ExpressionStatement",
                        "src": "5333:52:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 253,
                    "nodeType": "StructuredDocumentation",
                    "src": "4951:104:0",
                    "text": "@notice Sign up function. \no Caller must not already be a member. "
                  },
                  "functionSelector": "0b776241",
                  "id": 293,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "signUpAsWasteCollector",
                  "nameLocation": "5070:22:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 258,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 255,
                        "mutability": "mutable",
                        "name": "location",
                        "nameLocation": "5107:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 293,
                        "src": "5093:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 254,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5093:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 257,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "5131:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 293,
                        "src": "5117:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 256,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "5117:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5092:48:0"
                  },
                  "returnParameters": {
                    "id": 259,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5148:0:0"
                  },
                  "scope": 1086,
                  "src": "5061:332:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 320,
                    "nodeType": "Block",
                    "src": "5494:106:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 306,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 304,
                                "name": "category",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 295,
                                "src": "5513:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "35",
                                "id": 305,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5524:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_5_by_1",
                                  "typeString": "int_const 5"
                                },
                                "value": "5"
                              },
                              "src": "5513:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c6964",
                              "id": 307,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5527:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
                                "typeString": "literal_string \"Invalid\""
                              },
                              "value": "Invalid"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c84d91f537f720db0d8ff8472db06e97a59d22ac83366d0af861134338d0e345",
                                "typeString": "literal_string \"Invalid\""
                              }
                            ],
                            "id": 303,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5505:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 308,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5505:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 309,
                        "nodeType": "ExpressionStatement",
                        "src": "5505:32:0"
                      },
                      {
                        "expression": {
                          "id": 318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 310,
                            "name": "_profile",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 301,
                            "src": "5548:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Profile_$2031_memory_ptr",
                              "typeString": "struct Common.Profile memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 311,
                                "name": "profiles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57,
                                "src": "5559:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                  "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                }
                              },
                              "id": 315,
                              "indexExpression": {
                                "arguments": [
                                  {
                                    "id": 313,
                                    "name": "category",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 295,
                                    "src": "5577:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 312,
                                  "name": "Category",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1978,
                                  "src": "5568:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                    "typeString": "type(enum Common.Category)"
                                  }
                                },
                                "id": 314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "5568:18:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Category_$1978",
                                  "typeString": "enum Common.Category"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5559:28:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                "typeString": "mapping(address => struct Common.Profile storage ref)"
                              }
                            },
                            "id": 317,
                            "indexExpression": {
                              "id": 316,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 297,
                              "src": "5588:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "5559:33:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Profile_$2031_storage",
                              "typeString": "struct Common.Profile storage ref"
                            }
                          },
                          "src": "5548:44:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Profile_$2031_memory_ptr",
                            "typeString": "struct Common.Profile memory"
                          }
                        },
                        "id": 319,
                        "nodeType": "ExpressionStatement",
                        "src": "5548:44:0"
                      }
                    ]
                  },
                  "functionSelector": "3fd97927",
                  "id": 321,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "getProfile",
                  "nameLocation": "5410:10:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 295,
                        "mutability": "mutable",
                        "name": "category",
                        "nameLocation": "5426:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "5421:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 294,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "5421:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 297,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "5444:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "5436:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 296,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5436:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5420:28:0"
                  },
                  "returnParameters": {
                    "id": 302,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 301,
                        "mutability": "mutable",
                        "name": "_profile",
                        "nameLocation": "5484:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 321,
                        "src": "5469:23:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Profile_$2031_memory_ptr",
                          "typeString": "struct Common.Profile"
                        },
                        "typeName": {
                          "id": 300,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 299,
                            "name": "Profile",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2031,
                            "src": "5469:7:0"
                          },
                          "referencedDeclaration": 2031,
                          "src": "5469:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Profile_$2031_storage_ptr",
                            "typeString": "struct Common.Profile"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5468:25:0"
                  },
                  "scope": 1086,
                  "src": "5401:199:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 367,
                    "nodeType": "Block",
                    "src": "5758:315:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 334,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "5777:53:0",
                              "subExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 326,
                                      "name": "profiles",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 57,
                                      "src": "5778:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                        "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                      }
                                    },
                                    "id": 329,
                                    "indexExpression": {
                                      "expression": {
                                        "id": 327,
                                        "name": "Category",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1978,
                                        "src": "5787:8:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                          "typeString": "type(enum Common.Category)"
                                        }
                                      },
                                      "id": 328,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "BINOWNER",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1976,
                                      "src": "5787:17:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Category_$1978",
                                        "typeString": "enum Common.Category"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "5778:27:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                      "typeString": "mapping(address => struct Common.Profile storage ref)"
                                    }
                                  },
                                  "id": 332,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 330,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "5806:3:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 331,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "5806:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "5778:39:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                    "typeString": "struct Common.Profile storage ref"
                                  }
                                },
                                "id": 333,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "isRegistered",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2024,
                                "src": "5778:52:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "416c72656164792072656769737465726564",
                              "id": 335,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "5832:20:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
                                "typeString": "literal_string \"Already registered\""
                              },
                              "value": "Already registered"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4935f8dc8deae1355305b992e890d0242809a3705c9c83131ed47acca0dd4fe2",
                                "typeString": "literal_string \"Already registered\""
                              }
                            ],
                            "id": 325,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "5769:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 336,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5769:84:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 337,
                        "nodeType": "ExpressionStatement",
                        "src": "5769:84:0"
                      },
                      {
                        "assignments": [
                          339
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 339,
                            "mutability": "mutable",
                            "name": "binId",
                            "nameLocation": "5869:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 367,
                            "src": "5864:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 338,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "5864:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 346,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 342,
                              "name": "bins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "5902:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                "typeString": "struct Common.BinData storage ref[] storage ref"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 343,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "5908:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 344,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "5908:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                "typeString": "struct Common.BinData storage ref[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 340,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "5877:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 341,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "registerNewBin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2388,
                            "src": "5877:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (struct Common.BinData storage ref[] storage pointer,address) returns (uint256)"
                            }
                          },
                          "id": 345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5877:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5864:57:0"
                      },
                      {
                        "expression": {
                          "id": 356,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 347,
                                  "name": "profiles",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 57,
                                  "src": "5932:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                    "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                  }
                                },
                                "id": 352,
                                "indexExpression": {
                                  "expression": {
                                    "id": 348,
                                    "name": "Category",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1978,
                                    "src": "5941:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                      "typeString": "type(enum Common.Category)"
                                    }
                                  },
                                  "id": 349,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "BINOWNER",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1976,
                                  "src": "5941:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Category_$1978",
                                    "typeString": "enum Common.Category"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "5932:27:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                  "typeString": "mapping(address => struct Common.Profile storage ref)"
                                }
                              },
                              "id": 353,
                              "indexExpression": {
                                "expression": {
                                  "id": 350,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "5960:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 351,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "5960:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5932:39:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                "typeString": "struct Common.Profile storage ref"
                              }
                            },
                            "id": 354,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isRegistered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2024,
                            "src": "5932:52:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5987:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "5932:59:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 357,
                        "nodeType": "ExpressionStatement",
                        "src": "5932:59:0"
                      },
                      {
                        "expression": {
                          "id": 359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "6002:13:0",
                          "subExpression": {
                            "id": 358,
                            "name": "binCounter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 27,
                            "src": "6002:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 360,
                        "nodeType": "ExpressionStatement",
                        "src": "6002:13:0"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 362,
                              "name": "binId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 339,
                              "src": "6045:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 363,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "6052:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 364,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6052:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 361,
                            "name": "RegisteredBin",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2004,
                            "src": "6031:13:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_address_$returns$__$",
                              "typeString": "function (uint256,address)"
                            }
                          },
                          "id": 365,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6031:34:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 366,
                        "nodeType": "EmitStatement",
                        "src": "6026:39:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 322,
                    "nodeType": "StructuredDocumentation",
                    "src": "5608:106:0",
                    "text": "@dev Adds new bin.\n@notice Caller must already be approves as BinOwner ."
                  },
                  "functionSelector": "bf5e6b6d",
                  "id": 368,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerBin",
                  "nameLocation": "5729:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 323,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5740:2:0"
                  },
                  "returnParameters": {
                    "id": 324,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "5758:0:0"
                  },
                  "scope": 1086,
                  "src": "5720:353:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 407,
                    "nodeType": "Block",
                    "src": "6283:196:0",
                    "statements": [
                      {
                        "assignments": [
                          381
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 381,
                            "mutability": "mutable",
                            "name": "_owner",
                            "nameLocation": "6302:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 407,
                            "src": "6294:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 380,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6294:7:0",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 385,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 383,
                              "name": "binId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "6324:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 382,
                            "name": "_getBinOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 448,
                            "src": "6311:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_address_$",
                              "typeString": "function (uint256) view returns (address)"
                            }
                          },
                          "id": 384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6311:19:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6294:36:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 386,
                              "name": "_msgSender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1154,
                              "src": "6344:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 387,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6344:12:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 388,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1894,
                              "src": "6360:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                "typeString": "function () view returns (address)"
                              }
                            },
                            "id": 389,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6360:7:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "6344:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 399,
                        "nodeType": "IfStatement",
                        "src": "6341:77:0",
                        "trueBody": {
                          "expression": {
                            "arguments": [
                              {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 395,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 392,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "6377:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 393,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6377:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 394,
                                  "name": "_owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 381,
                                  "src": "6393:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "6377:22:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              {
                                "hexValue": "4e6f7420417574686f72697a6564",
                                "id": 396,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "string",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6401:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_stringliteral_593fd4f5418ae095969b093812245f49eb950b9775e5afd767614f342e26d4f2",
                                  "typeString": "literal_string \"Not Authorized\""
                                },
                                "value": "Not Authorized"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                {
                                  "typeIdentifier": "t_stringliteral_593fd4f5418ae095969b093812245f49eb950b9775e5afd767614f342e26d4f2",
                                  "typeString": "literal_string \"Not Authorized\""
                                }
                              ],
                              "id": 391,
                              "name": "require",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [
                                -18,
                                -18
                              ],
                              "referencedDeclaration": -18,
                              "src": "6369:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                "typeString": "function (bool,string memory) pure"
                              }
                            },
                            "id": 397,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6369:49:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 398,
                          "nodeType": "ExpressionStatement",
                          "src": "6369:49:0"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 403,
                              "name": "bins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "6459:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                "typeString": "struct Common.BinData storage ref[] storage ref"
                              }
                            },
                            {
                              "id": 404,
                              "name": "binId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 371,
                              "src": "6465:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                "typeString": "struct Common.BinData storage ref[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 400,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "6439:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 402,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "removeBin",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2455,
                            "src": "6439:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr_$_t_uint256_$returns$__$",
                              "typeString": "function (struct Common.BinData storage ref[] storage pointer,uint256)"
                            }
                          },
                          "id": 405,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6439:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 406,
                        "nodeType": "ExpressionStatement",
                        "src": "6439:32:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 369,
                    "nodeType": "StructuredDocumentation",
                    "src": "6081:114:0",
                    "text": "@dev Removes bin at binId.\n@notice Caller must already be approves as BinOwner ."
                  },
                  "functionSelector": "93051d95",
                  "id": 408,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 374,
                            "name": "Category",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1978,
                            "src": "6250:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                              "typeString": "type(enum Common.Category)"
                            }
                          },
                          "id": 375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "BINOWNER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1976,
                          "src": "6250:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1978",
                            "typeString": "enum Common.Category"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 376,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "6269:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6269:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 378,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 373,
                        "name": "isApproved",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 138,
                        "src": "6239:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "6239:43:0"
                    }
                  ],
                  "name": "removeBin",
                  "nameLocation": "6210:9:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 372,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 371,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "6225:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 408,
                        "src": "6220:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 370,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6220:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6219:12:0"
                  },
                  "returnParameters": {
                    "id": 379,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "6283:0:0"
                  },
                  "scope": 1086,
                  "src": "6201:278:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 433,
                    "nodeType": "Block",
                    "src": "6696:108:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 421,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 419,
                                "name": "_category",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 411,
                                "src": "6715:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "33",
                                "id": 420,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "6727:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_3_by_1",
                                  "typeString": "int_const 3"
                                },
                                "value": "3"
                              },
                              "src": "6715:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642073656c656365746f72",
                              "id": 422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "6730:19:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f5bbd90151df77045995fef44fa489fd73d41063f4d63aeaef7d4ef2cc0fb065",
                                "typeString": "literal_string \"Invalid selecetor\""
                              },
                              "value": "Invalid selecetor"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f5bbd90151df77045995fef44fa489fd73d41063f4d63aeaef7d4ef2cc0fb065",
                                "typeString": "literal_string \"Invalid selecetor\""
                              }
                            ],
                            "id": 418,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6707:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 423,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6707:43:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 424,
                        "nodeType": "ExpressionStatement",
                        "src": "6707:43:0"
                      },
                      {
                        "expression": {
                          "id": 431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 425,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 416,
                            "src": "6761:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct Common.WasteData memory[] memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "id": 426,
                              "name": "_garbages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "6769:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                              }
                            },
                            "id": 430,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 428,
                                  "name": "_category",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 411,
                                  "src": "6785:9:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 427,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1972,
                                "src": "6779:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                                  "typeString": "type(enum Common.State)"
                                }
                              },
                              "id": 429,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6779:16:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6769:27:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                              "typeString": "struct Common.WasteData storage ref[] storage ref"
                            }
                          },
                          "src": "6761:35:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct Common.WasteData memory[] memory"
                          }
                        },
                        "id": 432,
                        "nodeType": "ExpressionStatement",
                        "src": "6761:35:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 409,
                    "nodeType": "StructuredDocumentation",
                    "src": "6487:122:0",
                    "text": "@dev Returns list of wastes under each 'State'\ni.e Generated waste data, Collected waste data, ...rest"
                  },
                  "functionSelector": "a741c0df",
                  "id": 434,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "garbages",
                  "nameLocation": "6624:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 412,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 411,
                        "mutability": "mutable",
                        "name": "_category",
                        "nameLocation": "6639:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 434,
                        "src": "6633:15:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 410,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "6633:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6632:17:0"
                  },
                  "returnParameters": {
                    "id": 417,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 416,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "6689:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 434,
                        "src": "6670:24:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct Common.WasteData[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 414,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 413,
                              "name": "WasteData",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2016,
                              "src": "6670:9:0"
                            },
                            "referencedDeclaration": 2016,
                            "src": "6670:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                              "typeString": "struct Common.WasteData"
                            }
                          },
                          "id": 415,
                          "nodeType": "ArrayTypeName",
                          "src": "6670:11:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr",
                            "typeString": "struct Common.WasteData[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6669:26:0"
                  },
                  "scope": 1086,
                  "src": "6615:189:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 447,
                    "nodeType": "Block",
                    "src": "6920:43:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "id": 442,
                              "name": "bins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "6938:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                "typeString": "struct Common.BinData storage ref[] storage ref"
                              }
                            },
                            "id": 444,
                            "indexExpression": {
                              "id": 443,
                              "name": "binId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 437,
                              "src": "6943:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "6938:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BinData_$2038_storage",
                              "typeString": "struct Common.BinData storage ref"
                            }
                          },
                          "id": 445,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2037,
                          "src": "6938:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 441,
                        "id": 446,
                        "nodeType": "Return",
                        "src": "6931:24:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 435,
                    "nodeType": "StructuredDocumentation",
                    "src": "6812:38:0",
                    "text": "@dev Return owner of bin at binId. "
                  },
                  "id": 448,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getBinOwner",
                  "nameLocation": "6865:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 438,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 437,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "6883:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "6878:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 436,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "6878:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6877:12:0"
                  },
                  "returnParameters": {
                    "id": 441,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 440,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 448,
                        "src": "6911:7:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 439,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6911:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6910:9:0"
                  },
                  "scope": 1086,
                  "src": "6856:107:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 472,
                    "nodeType": "Block",
                    "src": "7206:79:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 464,
                              "name": "profiles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "7237:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                              }
                            },
                            {
                              "id": 465,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 451,
                              "src": "7247:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "74727565",
                              "id": 466,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7252:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "true"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 468,
                                  "name": "category",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 453,
                                  "src": "7267:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 467,
                                "name": "Category",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1978,
                                "src": "7258:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                  "typeString": "type(enum Common.Category)"
                                }
                              },
                              "id": 469,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7258:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Category_$1978",
                                "typeString": "enum Common.Category"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_enum$_Category_$1978",
                                "typeString": "enum Common.Category"
                              }
                            ],
                            "expression": {
                              "id": 461,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "7217:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 463,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setStatus",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2332,
                            "src": "7217:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$_$_t_address_$_t_bool_$_t_enum$_Category_$1978_$returns$__$",
                              "typeString": "function (mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref)),address,bool,enum Common.Category)"
                            }
                          },
                          "id": 470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7217:60:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 471,
                        "nodeType": "ExpressionStatement",
                        "src": "7217:60:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 449,
                    "nodeType": "StructuredDocumentation",
                    "src": "6971:133:0",
                    "text": "@dev Whitelist user\nNote Admin privilege.\ncat should reference the Category enum."
                  },
                  "functionSelector": "31b59ed7",
                  "id": 473,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 456,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 455,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "7169:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7169:9:0"
                    },
                    {
                      "arguments": [
                        {
                          "id": 458,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 453,
                          "src": "7196:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 459,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 457,
                        "name": "validateCategory",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 152,
                        "src": "7179:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7179:26:0"
                    }
                  ],
                  "name": "whitelistuser",
                  "nameLocation": "7119:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 454,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 451,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "7141:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 473,
                        "src": "7133:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 450,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7133:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 453,
                        "mutability": "mutable",
                        "name": "category",
                        "nameLocation": "7152:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 473,
                        "src": "7146:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 452,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "7146:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7132:29:0"
                  },
                  "returnParameters": {
                    "id": 460,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7206:0:0"
                  },
                  "scope": 1086,
                  "src": "7110:175:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 497,
                    "nodeType": "Block",
                    "src": "7527:80:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 489,
                              "name": "profiles",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 57,
                              "src": "7558:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                              }
                            },
                            {
                              "id": 490,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 476,
                              "src": "7568:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "hexValue": "66616c7365",
                              "id": 491,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "bool",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7573:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "value": "false"
                            },
                            {
                              "arguments": [
                                {
                                  "id": 493,
                                  "name": "category",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 478,
                                  "src": "7589:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 492,
                                "name": "Category",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1978,
                                "src": "7580:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                  "typeString": "type(enum Common.Category)"
                                }
                              },
                              "id": 494,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7580:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Category_$1978",
                                "typeString": "enum Common.Category"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_enum$_Category_$1978",
                                "typeString": "enum Common.Category"
                              }
                            ],
                            "expression": {
                              "id": 486,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "7538:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 488,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "setStatus",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2332,
                            "src": "7538:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$_$_t_address_$_t_bool_$_t_enum$_Category_$1978_$returns$__$",
                              "typeString": "function (mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref)),address,bool,enum Common.Category)"
                            }
                          },
                          "id": 495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7538:61:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 496,
                        "nodeType": "ExpressionStatement",
                        "src": "7538:61:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 474,
                    "nodeType": "StructuredDocumentation",
                    "src": "7293:133:0",
                    "text": "@dev Blacklist user\nNote Admin privilege.\ncat should reference the Category enum."
                  },
                  "functionSelector": "e47c294d",
                  "id": 498,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 481,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 480,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "7491:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7491:9:0"
                    },
                    {
                      "arguments": [
                        {
                          "id": 483,
                          "name": "category",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 478,
                          "src": "7518:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        }
                      ],
                      "id": 484,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 482,
                        "name": "validateCategory",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 152,
                        "src": "7501:16:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7501:26:0"
                    }
                  ],
                  "name": "blacklistUser",
                  "nameLocation": "7441:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 479,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 476,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "7463:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "7455:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 475,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7455:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 478,
                        "mutability": "mutable",
                        "name": "category",
                        "nameLocation": "7474:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 498,
                        "src": "7468:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 477,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "7468:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7454:29:0"
                  },
                  "returnParameters": {
                    "id": 485,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7527:0:0"
                  },
                  "scope": 1086,
                  "src": "7432:175:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 523,
                    "nodeType": "Block",
                    "src": "7848:110:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint8",
                                "typeString": "uint8"
                              },
                              "id": 511,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 509,
                                "name": "category",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 501,
                                "src": "7867:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "hexValue": "34",
                                "id": 510,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "7878:1:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_4_by_1",
                                  "typeString": "int_const 4"
                                },
                                "value": "4"
                              },
                              "src": "7867:12:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "496e76616c69642063617465676f7279",
                              "id": 512,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7881:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c42ca90c935df80db9ecab8e34c935bcc35abb722f6ed440da8d67e0cbd0ec47",
                                "typeString": "literal_string \"Invalid category\""
                              },
                              "value": "Invalid category"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c42ca90c935df80db9ecab8e34c935bcc35abb722f6ed440da8d67e0cbd0ec47",
                                "typeString": "literal_string \"Invalid category\""
                              }
                            ],
                            "id": 508,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7859:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 513,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7859:41:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 514,
                        "nodeType": "ExpressionStatement",
                        "src": "7859:41:0"
                      },
                      {
                        "expression": {
                          "id": 521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 515,
                              "name": "signUpFees",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 63,
                              "src": "7911:10:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_uint256_$",
                                "typeString": "mapping(enum Common.Category => uint256)"
                              }
                            },
                            "id": 519,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 517,
                                  "name": "category",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 501,
                                  "src": "7931:8:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                ],
                                "id": 516,
                                "name": "Category",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1978,
                                "src": "7922:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                  "typeString": "type(enum Common.Category)"
                                }
                              },
                              "id": 518,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7922:18:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Category_$1978",
                                "typeString": "enum Common.Category"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "7911:30:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 520,
                            "name": "newFee",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 503,
                            "src": "7944:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "7911:39:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 522,
                        "nodeType": "ExpressionStatement",
                        "src": "7911:39:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 499,
                    "nodeType": "StructuredDocumentation",
                    "src": "7615:165:0",
                    "text": "@dev Set new fee\n@notice To perfectly select the right category,\ncategory parameter should not be greater than 4."
                  },
                  "functionSelector": "8c6aa3f5",
                  "id": 524,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 506,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 505,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "7838:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "7838:9:0"
                    }
                  ],
                  "name": "setFee",
                  "nameLocation": "7795:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 504,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 501,
                        "mutability": "mutable",
                        "name": "category",
                        "nameLocation": "7808:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7802:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 500,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "7802:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 503,
                        "mutability": "mutable",
                        "name": "newFee",
                        "nameLocation": "7823:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 524,
                        "src": "7818:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 502,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "7818:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7801:29:0"
                  },
                  "returnParameters": {
                    "id": 507,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7848:0:0"
                  },
                  "scope": 1086,
                  "src": "7786:172:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 579,
                    "nodeType": "Block",
                    "src": "8319:434:0",
                    "statements": [
                      {
                        "assignments": [
                          538
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 538,
                            "mutability": "mutable",
                            "name": "state",
                            "nameLocation": "8336:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 579,
                            "src": "8330:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1972",
                              "typeString": "enum Common.State"
                            },
                            "typeName": {
                              "id": 537,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 536,
                                "name": "State",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1972,
                                "src": "8330:5:0"
                              },
                              "referencedDeclaration": 1972,
                              "src": "8330:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 541,
                        "initialValue": {
                          "expression": {
                            "id": 539,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1972,
                            "src": "8344:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                              "typeString": "type(enum Common.State)"
                            }
                          },
                          "id": 540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "GENERATED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1969,
                          "src": "8344:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8330:29:0"
                      },
                      {
                        "expression": {
                          "id": 543,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "++",
                          "prefix": false,
                          "src": "8370:22:0",
                          "subExpression": {
                            "id": 542,
                            "name": "totalWasteGenerated",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 21,
                            "src": "8370:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 544,
                        "nodeType": "ExpressionStatement",
                        "src": "8370:22:0"
                      },
                      {
                        "assignments": [
                          546
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 546,
                            "mutability": "mutable",
                            "name": "nonce",
                            "nameLocation": "8408:5:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 579,
                            "src": "8403:10:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 545,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "8403:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 548,
                        "initialValue": {
                          "id": 547,
                          "name": "totalWasteGenerated",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21,
                          "src": "8416:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8403:32:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 552,
                              "name": "_garbages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "8480:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "id": 559,
                                              "name": "_data",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 527,
                                              "src": "8567:5:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_string_memory_ptr",
                                                "typeString": "string memory"
                                              }
                                            ],
                                            "id": 558,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "8561:5:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                              "typeString": "type(bytes storage pointer)"
                                            },
                                            "typeName": {
                                              "id": 557,
                                              "name": "bytes",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "8561:5:0",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 560,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "8561:12:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "id": 561,
                                          "name": "nonce",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 546,
                                          "src": "8575:5:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 555,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "8544:3:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 556,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "8544:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 562,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "8544:37:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 554,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "8534:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 563,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8534:48:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 566,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8610:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 565,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8602:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 564,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8602:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 567,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8602:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 568,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "8632:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 569,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8632:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 572,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "8672:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 571,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "8664:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 570,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "8664:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 573,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "8664:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 574,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 538,
                                  "src": "8693:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$1972",
                                    "typeString": "enum Common.State"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_State_$1972",
                                    "typeString": "enum Common.State"
                                  }
                                ],
                                "id": 553,
                                "name": "WasteData",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2016,
                                "src": "8506:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_WasteData_$2016_storage_ptr_$",
                                  "typeString": "type(struct Common.WasteData storage pointer)"
                                }
                              },
                              "id": 575,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8506:207:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              }
                            },
                            {
                              "id": 576,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 538,
                              "src": "8729:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                              },
                              {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            ],
                            "expression": {
                              "id": 549,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "8446:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 551,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "portToMap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2163,
                            "src": "8446:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$_$_t_struct$_WasteData_$2016_memory_ptr_$_t_enum$_State_$1972_$returns$__$",
                              "typeString": "function (mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref),struct Common.WasteData memory,enum Common.State)"
                            }
                          },
                          "id": 577,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8446:299:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 578,
                        "nodeType": "ExpressionStatement",
                        "src": "8446:299:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 525,
                    "nodeType": "StructuredDocumentation",
                    "src": "7966:251:0",
                    "text": "@dev Generates new waste. \n@notice Each waste is unique to another.\nNote To successfully generate waste, bin id must be provided.\nThis represents the destination where wastes are dumped."
                  },
                  "functionSelector": "b7588280",
                  "id": 580,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 530,
                            "name": "Category",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1978,
                            "src": "8285:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                              "typeString": "type(enum Common.Category)"
                            }
                          },
                          "id": 531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "GENERATOR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1974,
                          "src": "8285:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1978",
                            "typeString": "enum Common.Category"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 532,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "8305:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8305:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 534,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 529,
                        "name": "isApproved",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 138,
                        "src": "8274:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "8274:44:0"
                    }
                  ],
                  "name": "generateWaste",
                  "nameLocation": "8232:13:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 528,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 527,
                        "mutability": "mutable",
                        "name": "_data",
                        "nameLocation": "8260:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 580,
                        "src": "8246:19:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 526,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "8246:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8245:21:0"
                  },
                  "returnParameters": {
                    "id": 535,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8319:0:0"
                  },
                  "scope": 1086,
                  "src": "8223:530:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 615,
                    "nodeType": "Block",
                    "src": "8821:156:0",
                    "statements": [
                      {
                        "assignments": [
                          590
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 590,
                            "mutability": "mutable",
                            "name": "wasteIds",
                            "nameLocation": "8846:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 615,
                            "src": "8832:22:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                              "typeString": "uint256[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 588,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8832:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 589,
                              "nodeType": "ArrayTypeName",
                              "src": "8832:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 596,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8868:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 593,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8857:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (uint256[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 591,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "8861:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 592,
                              "nodeType": "ArrayTypeName",
                              "src": "8861:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                                "typeString": "uint256[]"
                              }
                            }
                          },
                          "id": 595,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8857:13:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8832:38:0"
                      },
                      {
                        "assignments": [
                          601
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 601,
                            "mutability": "mutable",
                            "name": "wastedata",
                            "nameLocation": "8897:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 615,
                            "src": "8881:25:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                              "typeString": "string[]"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 599,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "8881:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 600,
                              "nodeType": "ArrayTypeName",
                              "src": "8881:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 607,
                        "initialValue": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 605,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8922:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 604,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "NewExpression",
                            "src": "8909:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_string_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (uint256) pure returns (string memory[] memory)"
                            },
                            "typeName": {
                              "baseType": {
                                "id": 602,
                                "name": "string",
                                "nodeType": "ElementaryTypeName",
                                "src": "8913:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_storage_ptr",
                                  "typeString": "string"
                                }
                              },
                              "id": 603,
                              "nodeType": "ArrayTypeName",
                              "src": "8913:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                                "typeString": "string[]"
                              }
                            }
                          },
                          "id": 606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8909:15:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8881:43:0"
                      },
                      {
                        "expression": {
                          "id": 613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 608,
                            "name": "empty",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 584,
                            "src": "8935:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Empty_$2045_memory_ptr",
                              "typeString": "struct Common.Empty memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 610,
                                "name": "wasteIds",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 590,
                                "src": "8949:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "id": 611,
                                "name": "wastedata",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 601,
                                "src": "8959:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                  "typeString": "string memory[] memory"
                                }
                              ],
                              "id": 609,
                              "name": "Empty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2045,
                              "src": "8943:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_struct$_Empty_$2045_storage_ptr_$",
                                "typeString": "type(struct Common.Empty storage pointer)"
                              }
                            },
                            "id": 612,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "structConstructorCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8943:26:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Empty_$2045_memory_ptr",
                              "typeString": "struct Common.Empty memory"
                            }
                          },
                          "src": "8935:34:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Empty_$2045_memory_ptr",
                            "typeString": "struct Common.Empty memory"
                          }
                        },
                        "id": 614,
                        "nodeType": "ExpressionStatement",
                        "src": "8935:34:0"
                      }
                    ]
                  },
                  "id": 616,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_empty",
                  "nameLocation": "8770:6:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 581,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8776:2:0"
                  },
                  "returnParameters": {
                    "id": 585,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 584,
                        "mutability": "mutable",
                        "name": "empty",
                        "nameLocation": "8814:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 616,
                        "src": "8801:18:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Empty_$2045_memory_ptr",
                          "typeString": "struct Common.Empty"
                        },
                        "typeName": {
                          "id": 583,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 582,
                            "name": "Empty",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2045,
                            "src": "8801:5:0"
                          },
                          "referencedDeclaration": 2045,
                          "src": "8801:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Empty_$2045_storage_ptr",
                            "typeString": "struct Common.Empty"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8800:20:0"
                  },
                  "scope": 1086,
                  "src": "8761:216:0",
                  "stateMutability": "pure",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 648,
                    "nodeType": "Block",
                    "src": "9126:104:0",
                    "statements": [
                      {
                        "body": {
                          "id": 646,
                          "nodeType": "Block",
                          "src": "9174:49:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 641,
                                      "name": "data",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 620,
                                      "src": "9203:4:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "string memory[] memory"
                                      }
                                    },
                                    "id": 643,
                                    "indexExpression": {
                                      "id": 642,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 630,
                                      "src": "9208:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "9203:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "id": 640,
                                  "name": "generateWaste",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 580,
                                  "src": "9189:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory)"
                                  }
                                },
                                "id": 644,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9189:22:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 645,
                              "nodeType": "ExpressionStatement",
                              "src": "9189:22:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 633,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 630,
                            "src": "9152:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 634,
                              "name": "data",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 620,
                              "src": "9156:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                                "typeString": "string memory[] memory"
                              }
                            },
                            "id": 635,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "9156:11:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9152:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 647,
                        "initializationExpression": {
                          "assignments": [
                            630
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 630,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "9147:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 647,
                              "src": "9142:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 629,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "9142:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 632,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 631,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9149:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "9142:8:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 638,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "9169:3:0",
                            "subExpression": {
                              "id": 637,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 630,
                              "src": "9169:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 639,
                          "nodeType": "ExpressionStatement",
                          "src": "9169:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "9137:86:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 617,
                    "nodeType": "StructuredDocumentation",
                    "src": "8985:37:0",
                    "text": "@dev Generates multiple waste data"
                  },
                  "functionSelector": "955ef11a",
                  "id": 649,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 623,
                              "name": "_empty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "9101:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Empty_$2045_memory_ptr_$",
                                "typeString": "function () pure returns (struct Common.Empty memory)"
                              }
                            },
                            "id": 624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "9101:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Empty_$2045_memory_ptr",
                              "typeString": "struct Common.Empty memory"
                            }
                          },
                          "id": 625,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wasteIds",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2041,
                          "src": "9101:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "id": 626,
                          "name": "data",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 620,
                          "src": "9120:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        }
                      ],
                      "id": 627,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 622,
                        "name": "validateSize",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "9088:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9088:37:0"
                    }
                  ],
                  "name": "generateMultipleWaste",
                  "nameLocation": "9037:21:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 621,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 620,
                        "mutability": "mutable",
                        "name": "data",
                        "nameLocation": "9075:4:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 649,
                        "src": "9059:20:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                          "typeString": "string[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 618,
                            "name": "string",
                            "nodeType": "ElementaryTypeName",
                            "src": "9059:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage_ptr",
                              "typeString": "string"
                            }
                          },
                          "id": 619,
                          "nodeType": "ArrayTypeName",
                          "src": "9059:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                            "typeString": "string[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9058:22:0"
                  },
                  "returnParameters": {
                    "id": 628,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9126:0:0"
                  },
                  "scope": 1086,
                  "src": "9028:202:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 667,
                    "nodeType": "Block",
                    "src": "9479:53:0",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 660,
                                "name": "profiles",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 57,
                                "src": "9497:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                  "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                }
                              },
                              "id": 662,
                              "indexExpression": {
                                "id": 661,
                                "name": "cat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 653,
                                "src": "9506:3:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Category_$1978",
                                  "typeString": "enum Common.Category"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "9497:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                "typeString": "mapping(address => struct Common.Profile storage ref)"
                              }
                            },
                            "id": 664,
                            "indexExpression": {
                              "id": 663,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 655,
                              "src": "9511:3:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "9497:18:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Profile_$2031_storage",
                              "typeString": "struct Common.Profile storage ref"
                            }
                          },
                          "id": 665,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2022,
                          "src": "9497:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 659,
                        "id": 666,
                        "nodeType": "Return",
                        "src": "9490:34:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 650,
                    "nodeType": "StructuredDocumentation",
                    "src": "9238:158:0",
                    "text": "@dev Gets approval for user 'who'\n@param cat - Category of user e.g COLLECTOR etc\n@param who - Address of user."
                  },
                  "id": 668,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_getApproval",
                  "nameLocation": "9411:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 656,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 653,
                        "mutability": "mutable",
                        "name": "cat",
                        "nameLocation": "9433:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 668,
                        "src": "9424:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Category_$1978",
                          "typeString": "enum Common.Category"
                        },
                        "typeName": {
                          "id": 652,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 651,
                            "name": "Category",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1978,
                            "src": "9424:8:0"
                          },
                          "referencedDeclaration": 1978,
                          "src": "9424:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1978",
                            "typeString": "enum Common.Category"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 655,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "9446:3:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 668,
                        "src": "9438:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 654,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9438:7:0",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9423:27:0"
                  },
                  "returnParameters": {
                    "id": 659,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 658,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 668,
                        "src": "9473:4:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 657,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "9473:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9472:6:0"
                  },
                  "scope": 1086,
                  "src": "9402:130:0",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 753,
                    "nodeType": "Block",
                    "src": "10110:470:0",
                    "statements": [
                      {
                        "assignments": [
                          691
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 691,
                            "mutability": "mutable",
                            "name": "outWaste",
                            "nameLocation": "10138:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 753,
                            "src": "10121:25:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                              "typeString": "struct Common.WasteData"
                            },
                            "typeName": {
                              "id": 690,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 689,
                                "name": "WasteData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2016,
                                "src": "10121:9:0"
                              },
                              "referencedDeclaration": 2016,
                              "src": "10121:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                                "typeString": "struct Common.WasteData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 698,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 694,
                              "name": "bins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "10172:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                "typeString": "struct Common.BinData storage ref[] storage ref"
                              }
                            },
                            {
                              "id": 695,
                              "name": "binId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 671,
                              "src": "10178:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 696,
                              "name": "wasteId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 673,
                              "src": "10185:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                "typeString": "struct Common.BinData storage ref[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 692,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "10149:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 693,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "popFromArray",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2267,
                            "src": "10149:22:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_WasteData_$2016_memory_ptr_$",
                              "typeString": "function (struct Common.BinData storage ref[] storage pointer,uint256,uint256) returns (struct Common.WasteData memory)"
                            }
                          },
                          "id": 697,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10149:44:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                            "typeString": "struct Common.WasteData memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10121:72:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 702,
                              "name": "_garbages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "10224:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                              }
                            },
                            {
                              "id": 703,
                              "name": "outWaste",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 691,
                              "src": "10235:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 704,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1972,
                                "src": "10245:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                                  "typeString": "type(enum Common.State)"
                                }
                              },
                              "id": 705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "RECYCLED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1971,
                              "src": "10245:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                              },
                              {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            ],
                            "expression": {
                              "id": 699,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "10204:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "portToMap",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2163,
                            "src": "10204:19:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$_$_t_struct$_WasteData_$2016_memory_ptr_$_t_enum$_State_$1972_$returns$__$",
                              "typeString": "function (mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref),struct Common.WasteData memory,enum Common.State)"
                            }
                          },
                          "id": 706,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10204:56:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 707,
                        "nodeType": "ExpressionStatement",
                        "src": "10204:56:0"
                      },
                      {
                        "assignments": [
                          709
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 709,
                            "mutability": "mutable",
                            "name": "amount",
                            "nameLocation": "10276:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 753,
                            "src": "10271:11:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 708,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10271:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 711,
                        "initialValue": {
                          "id": 710,
                          "name": "collectorReward",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 24,
                          "src": "10285:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10271:29:0"
                      },
                      {
                        "assignments": [
                          713,
                          715,
                          717
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 713,
                            "mutability": "mutable",
                            "name": "collector",
                            "nameLocation": "10319:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 753,
                            "src": "10314:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 712,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10314:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 715,
                            "mutability": "mutable",
                            "name": "generator",
                            "nameLocation": "10335:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 753,
                            "src": "10330:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 714,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10330:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 717,
                            "mutability": "mutable",
                            "name": "team",
                            "nameLocation": "10351:4:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 753,
                            "src": "10346:9:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 716,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "10346:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 723,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 720,
                              "name": "formula",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40,
                              "src": "10375:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                                "typeString": "mapping(enum Common.Share => uint8)"
                              }
                            },
                            {
                              "id": 721,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 709,
                              "src": "10384:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                                "typeString": "mapping(enum Common.Share => uint8)"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 718,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "10359:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 719,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "split",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2511,
                            "src": "10359:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_mapping$_t_enum$_Share_$1982_$_t_uint8_$_$_t_uint256_$returns$_t_uint256_$_t_uint256_$_t_uint256_$",
                              "typeString": "function (mapping(enum Common.Share => uint8),uint256) view returns (uint256,uint256,uint256)"
                            }
                          },
                          "id": 722,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10359:32:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_uint256_$_t_uint256_$",
                            "typeString": "tuple(uint256,uint256,uint256)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "10313:78:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 728,
                                "name": "outWaste",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 691,
                                "src": "10424:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                  "typeString": "struct Common.WasteData memory"
                                }
                              },
                              "id": 729,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "collector",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2008,
                              "src": "10424:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 730,
                              "name": "collector",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 713,
                              "src": "10444:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 725,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "10409:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 724,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1828,
                                "src": "10402:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1828_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 726,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10402:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1828",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1815,
                            "src": "10402:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10402:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 732,
                        "nodeType": "ExpressionStatement",
                        "src": "10402:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 737,
                                "name": "outWaste",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 691,
                                "src": "10487:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                  "typeString": "struct Common.WasteData memory"
                                }
                              },
                              "id": 738,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "generator",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2010,
                              "src": "10487:18:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 739,
                              "name": "generator",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 715,
                              "src": "10507:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 734,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "10472:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 733,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1828,
                                "src": "10465:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1828_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 735,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10465:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1828",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 736,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1815,
                            "src": "10465:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 740,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10465:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 741,
                        "nodeType": "ExpressionStatement",
                        "src": "10465:52:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 748,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "10558:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoolaContract_$1086",
                                    "typeString": "contract IBoolaContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBoolaContract_$1086",
                                    "typeString": "contract IBoolaContract"
                                  }
                                ],
                                "id": 747,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "10550:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 746,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "10550:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 749,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10550:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 750,
                              "name": "team",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 717,
                              "src": "10565:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 743,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "10535:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 742,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1828,
                                "src": "10528:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1828_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 744,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "10528:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1828",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 745,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1815,
                            "src": "10528:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10528:42:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 752,
                        "nodeType": "ExpressionStatement",
                        "src": "10528:42:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 669,
                    "nodeType": "StructuredDocumentation",
                    "src": "9540:394:0",
                    "text": "@dev Collect waste.\nNote : Only generated waste can be collected\n@param binId - Bin where the waste is located.\n@param wasteId - Which waste to collect.\nNote - Every waste is unique to another.\nTo make purchase of manure easy, wastes are recycled\nin 50s."
                  },
                  "id": 754,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 676,
                            "name": "Category",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1978,
                            "src": "10003:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                              "typeString": "type(enum Common.Category)"
                            }
                          },
                          "id": 677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RECYCLER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1975,
                          "src": "10003:17:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1978",
                            "typeString": "enum Common.Category"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 678,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "10022:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 679,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10022:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 680,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 675,
                        "name": "isApproved",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 138,
                        "src": "9992:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "9992:43:0"
                    },
                    {
                      "arguments": [
                        {
                          "id": 682,
                          "name": "binId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 671,
                          "src": "10052:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 683,
                          "name": "wasteId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 673,
                          "src": "10059:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 684,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1972,
                            "src": "10068:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                              "typeString": "type(enum Common.State)"
                            }
                          },
                          "id": 685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "COLLECTED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1970,
                          "src": "10068:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          }
                        },
                        {
                          "hexValue": "496e76616c696420776173746520706f696e746572",
                          "id": 686,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "10085:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_abad94b6453a098656ff9e059ac305e98d85667a0f3abab2d5b73772b5e607f0",
                            "typeString": "literal_string \"Invalid waste pointer\""
                          },
                          "value": "Invalid waste pointer"
                        }
                      ],
                      "id": 687,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 681,
                        "name": "validateWasteId",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 119,
                        "src": "10036:15:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10036:73:0"
                    }
                  ],
                  "name": "recycle",
                  "nameLocation": "9949:7:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 674,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 671,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "9962:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "9957:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 670,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9957:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 673,
                        "mutability": "mutable",
                        "name": "wasteId",
                        "nameLocation": "9974:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 754,
                        "src": "9969:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 672,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "9969:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9956:26:0"
                  },
                  "returnParameters": {
                    "id": 688,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10110:0:0"
                  },
                  "scope": 1086,
                  "src": "9940:640:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 789,
                    "nodeType": "Block",
                    "src": "10766:115:0",
                    "statements": [
                      {
                        "body": {
                          "id": 787,
                          "nodeType": "Block",
                          "src": "10820:54:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 781,
                                    "name": "binId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 757,
                                    "src": "10843:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 782,
                                      "name": "wasteIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 760,
                                      "src": "10850:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 784,
                                    "indexExpression": {
                                      "id": 783,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 770,
                                      "src": "10859:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "10850:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 780,
                                  "name": "recycle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 754,
                                  "src": "10835:7:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 785,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10835:27:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 786,
                              "nodeType": "ExpressionStatement",
                              "src": "10835:27:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 776,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 773,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 770,
                            "src": "10794:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 774,
                              "name": "wasteIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 760,
                              "src": "10798:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 775,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "10798:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10794:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 788,
                        "initializationExpression": {
                          "assignments": [
                            770
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 770,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "10787:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 788,
                              "src": "10782:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 769,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "10782:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 772,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 771,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10791:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "10782:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "10815:3:0",
                            "subExpression": {
                              "id": 777,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 770,
                              "src": "10815:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 779,
                          "nodeType": "ExpressionStatement",
                          "src": "10815:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "10777:97:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 755,
                    "nodeType": "StructuredDocumentation",
                    "src": "10588:61:0",
                    "text": "@notice Can recycle wastes greater than 0 but less than 51"
                  },
                  "functionSelector": "0bdd7063",
                  "id": 790,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 763,
                          "name": "wasteIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 760,
                          "src": "10736:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 764,
                              "name": "_empty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "10746:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Empty_$2045_memory_ptr_$",
                                "typeString": "function () pure returns (struct Common.Empty memory)"
                              }
                            },
                            "id": 765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "10746:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Empty_$2045_memory_ptr",
                              "typeString": "struct Common.Empty memory"
                            }
                          },
                          "id": 766,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wastedata",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2044,
                          "src": "10746:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        }
                      ],
                      "id": 767,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 762,
                        "name": "validateSize",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "10723:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "10723:42:0"
                    }
                  ],
                  "name": "recycleMultiple",
                  "nameLocation": "10664:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 757,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "10685:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 790,
                        "src": "10680:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 756,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "10680:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 760,
                        "mutability": "mutable",
                        "name": "wasteIds",
                        "nameLocation": "10706:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 790,
                        "src": "10692:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 758,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "10692:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 759,
                          "nodeType": "ArrayTypeName",
                          "src": "10692:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10679:36:0"
                  },
                  "returnParameters": {
                    "id": 768,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10766:0:0"
                  },
                  "scope": 1086,
                  "src": "10655:226:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 828,
                    "nodeType": "Block",
                    "src": "11050:220:0",
                    "statements": [
                      {
                        "assignments": [
                          795
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 795,
                            "mutability": "mutable",
                            "name": "rewardBal",
                            "nameLocation": "11066:9:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 828,
                            "src": "11061:14:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 794,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "11061:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 807,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 802,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11110:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoolaContract_$1086",
                                    "typeString": "contract IBoolaContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBoolaContract_$1086",
                                    "typeString": "contract IBoolaContract"
                                  }
                                ],
                                "id": 801,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11102:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 800,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11102:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 803,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11102:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 804,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "11116:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 805,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11116:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 797,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "11085:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 796,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1828,
                                "src": "11078:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1828_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 798,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11078:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1828",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "allowance",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1805,
                            "src": "11078:23:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view external returns (uint256)"
                            }
                          },
                          "id": 806,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11078:51:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11061:68:0"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 810,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 808,
                            "name": "rewardBal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 795,
                            "src": "11143:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 809,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11156:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11143:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 814,
                        "nodeType": "IfStatement",
                        "src": "11140:45:0",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 811,
                              "name": "NothingToWithdraw",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1996,
                              "src": "11166:17:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 812,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11166:19:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 813,
                          "nodeType": "RevertStatement",
                          "src": "11159:26:0"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 821,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "11231:4:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IBoolaContract_$1086",
                                    "typeString": "contract IBoolaContract"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IBoolaContract_$1086",
                                    "typeString": "contract IBoolaContract"
                                  }
                                ],
                                "id": 820,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "11223:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 819,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "11223:7:0",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11223:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 823,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "11238:10:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11238:12:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 825,
                              "name": "rewardBal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 795,
                              "src": "11252:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 816,
                                  "name": "token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 18,
                                  "src": "11203:5:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 815,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1828,
                                "src": "11196:6:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$1828_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 817,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11196:13:0",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$1828",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "transferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1827,
                            "src": "11196:26:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,address,uint256) external returns (bool)"
                            }
                          },
                          "id": 826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11196:66:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 827,
                        "nodeType": "ExpressionStatement",
                        "src": "11196:66:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 791,
                    "nodeType": "StructuredDocumentation",
                    "src": "10891:126:0",
                    "text": "@notice Withdraw reward if any {IBoola Token}\nNote - Caller must have previous reward otherwise it fails."
                  },
                  "functionSelector": "3ccfd60b",
                  "id": 829,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "withdraw",
                  "nameLocation": "11032:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 792,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11040:2:0"
                  },
                  "returnParameters": {
                    "id": 793,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11050:0:0"
                  },
                  "scope": 1086,
                  "src": "11023:247:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 898,
                    "nodeType": "Block",
                    "src": "11789:381:0",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 851,
                                    "name": "profiles",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 57,
                                    "src": "11808:8:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                      "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                    }
                                  },
                                  "id": 854,
                                  "indexExpression": {
                                    "expression": {
                                      "id": 852,
                                      "name": "Category",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1978,
                                      "src": "11817:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                        "typeString": "type(enum Common.Category)"
                                      }
                                    },
                                    "id": 853,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "COLLECTOR",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1973,
                                    "src": "11817:18:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_Category_$1978",
                                      "typeString": "enum Common.Category"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11808:28:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                    "typeString": "mapping(address => struct Common.Profile storage ref)"
                                  }
                                },
                                "id": 857,
                                "indexExpression": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "id": 855,
                                    "name": "_msgSender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1154,
                                    "src": "11837:10:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                      "typeString": "function () view returns (address)"
                                    }
                                  },
                                  "id": 856,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "11837:12:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "11808:42:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                  "typeString": "struct Common.Profile storage ref"
                                }
                              },
                              "id": 858,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "isRegistered",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2024,
                              "src": "11808:55:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420616c6c6f776564",
                              "id": 859,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11864:13:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
                                "typeString": "literal_string \"Not allowed\""
                              },
                              "value": "Not allowed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_98bb0d434888d1b812a0a4194c9568f0648e9ed0f8cbde68f7f17a68afe7b6cd",
                                "typeString": "literal_string \"Not allowed\""
                              }
                            ],
                            "id": 850,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11800:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 860,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11800:78:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 861,
                        "nodeType": "ExpressionStatement",
                        "src": "11800:78:0"
                      },
                      {
                        "assignments": [
                          864
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 864,
                            "mutability": "mutable",
                            "name": "_state",
                            "nameLocation": "11895:6:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 898,
                            "src": "11889:12:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1972",
                              "typeString": "enum Common.State"
                            },
                            "typeName": {
                              "id": 863,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 862,
                                "name": "State",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1972,
                                "src": "11889:5:0"
                              },
                              "referencedDeclaration": 1972,
                              "src": "11889:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 867,
                        "initialValue": {
                          "expression": {
                            "id": 865,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1972,
                            "src": "11904:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                              "typeString": "type(enum Common.State)"
                            }
                          },
                          "id": 866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "GENERATED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1969,
                          "src": "11904:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11889:30:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 874,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 869,
                                    "name": "_garbages",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48,
                                    "src": "11938:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                      "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 871,
                                  "indexExpression": {
                                    "id": 870,
                                    "name": "_state",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 864,
                                    "src": "11948:6:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_State_$1972",
                                      "typeString": "enum Common.State"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "11938:17:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                    "typeString": "struct Common.WasteData storage ref[] storage ref"
                                  }
                                },
                                "id": 872,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "11938:24:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "id": 873,
                                "name": "wasteId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 834,
                                "src": "11965:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "11938:34:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "77617374654964206f7574206f6620626f756e64",
                              "id": 875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11974:22:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cb93a266f8c738155922c03fad65991711659ffd1817f66a1e374e7caf1aa548",
                                "typeString": "literal_string \"wasteId out of bound\""
                              },
                              "value": "wasteId out of bound"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cb93a266f8c738155922c03fad65991711659ffd1817f66a1e374e7caf1aa548",
                                "typeString": "literal_string \"wasteId out of bound\""
                              }
                            ],
                            "id": 868,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "11930:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11930:67:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 877,
                        "nodeType": "ExpressionStatement",
                        "src": "11930:67:0"
                      },
                      {
                        "assignments": [
                          880
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 880,
                            "mutability": "mutable",
                            "name": "outWaste",
                            "nameLocation": "12025:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 898,
                            "src": "12008:25:0",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                              "typeString": "struct Common.WasteData"
                            },
                            "typeName": {
                              "id": 879,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 878,
                                "name": "WasteData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2016,
                                "src": "12008:9:0"
                              },
                              "referencedDeclaration": 2016,
                              "src": "12008:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                                "typeString": "struct Common.WasteData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 887,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 883,
                              "name": "_garbages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "12061:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                              }
                            },
                            {
                              "id": 884,
                              "name": "wasteId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 834,
                              "src": "12072:7:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 885,
                              "name": "_state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 864,
                              "src": "12081:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            ],
                            "expression": {
                              "id": 881,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "12036:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 882,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "popFromMapping",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2234,
                            "src": "12036:24:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$_$_t_uint256_$_t_enum$_State_$1972_$returns$_t_struct$_WasteData_$2016_memory_ptr_$",
                              "typeString": "function (mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref),uint256,enum Common.State) returns (struct Common.WasteData memory)"
                            }
                          },
                          "id": 886,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12036:52:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                            "typeString": "struct Common.WasteData memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12008:80:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 891,
                              "name": "bins",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 35,
                              "src": "12121:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                "typeString": "struct Common.BinData storage ref[] storage ref"
                              }
                            },
                            {
                              "id": 892,
                              "name": "binId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 832,
                              "src": "12127:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 893,
                              "name": "outWaste",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 880,
                              "src": "12134:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              }
                            },
                            {
                              "expression": {
                                "id": 894,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1972,
                                "src": "12144:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                                  "typeString": "type(enum Common.State)"
                                }
                              },
                              "id": 895,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "COLLECTED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1970,
                              "src": "12144:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage",
                                "typeString": "struct Common.BinData storage ref[] storage ref"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              },
                              {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            ],
                            "expression": {
                              "id": 888,
                              "name": "IBoolaLib",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2524,
                              "src": "12099:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IBoolaLib_$2524_$",
                                "typeString": "type(library IBoolaLib)"
                              }
                            },
                            "id": 890,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "portToArray",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2199,
                            "src": "12099:21:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr_$_t_uint256_$_t_struct$_WasteData_$2016_memory_ptr_$_t_enum$_State_$1972_$returns$__$",
                              "typeString": "function (struct Common.BinData storage ref[] storage pointer,uint256,struct Common.WasteData memory,enum Common.State)"
                            }
                          },
                          "id": 896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12099:61:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 897,
                        "nodeType": "ExpressionStatement",
                        "src": "12099:61:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 830,
                    "nodeType": "StructuredDocumentation",
                    "src": "11278:329:0",
                    "text": "@dev Collect waste for disposal. \nNote: Caller must be an approved waste collector.\nmust supply the following:\no @param binId - Location of bin to deposit collected waste. ie bin index\no @param wasteId - Identifier for waste collected."
                  },
                  "functionSelector": "c3864cce",
                  "id": 899,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "expression": {
                            "id": 837,
                            "name": "Category",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1978,
                            "src": "11681:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                              "typeString": "type(enum Common.Category)"
                            }
                          },
                          "id": 838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "COLLECTOR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1973,
                          "src": "11681:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1978",
                            "typeString": "enum Common.Category"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 839,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "11701:10:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 840,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11701:12:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "id": 841,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 836,
                        "name": "isApproved",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 138,
                        "src": "11670:10:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11670:44:0"
                    },
                    {
                      "arguments": [
                        {
                          "id": 843,
                          "name": "binId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 832,
                          "src": "11731:5:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "id": 844,
                          "name": "wasteId",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 834,
                          "src": "11738:7:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        {
                          "expression": {
                            "id": 845,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1972,
                            "src": "11747:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                              "typeString": "type(enum Common.State)"
                            }
                          },
                          "id": 846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "GENERATED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1969,
                          "src": "11747:15:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          }
                        },
                        {
                          "hexValue": "496e76616c696420776173746520706f696e746572",
                          "id": 847,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11764:23:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_abad94b6453a098656ff9e059ac305e98d85667a0f3abab2d5b73772b5e607f0",
                            "typeString": "literal_string \"Invalid waste pointer\""
                          },
                          "value": "Invalid waste pointer"
                        }
                      ],
                      "id": 848,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 842,
                        "name": "validateWasteId",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 119,
                        "src": "11715:15:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "11715:73:0"
                    }
                  ],
                  "name": "collectWaste",
                  "nameLocation": "11624:12:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 835,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 832,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "11642:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 899,
                        "src": "11637:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 831,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11637:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 834,
                        "mutability": "mutable",
                        "name": "wasteId",
                        "nameLocation": "11654:7:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 899,
                        "src": "11649:12:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 833,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "11649:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11636:26:0"
                  },
                  "returnParameters": {
                    "id": 849,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11789:0:0"
                  },
                  "scope": 1086,
                  "src": "11615:555:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 933,
                    "nodeType": "Block",
                    "src": "12358:120:0",
                    "statements": [
                      {
                        "body": {
                          "id": 931,
                          "nodeType": "Block",
                          "src": "12412:59:0",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 925,
                                    "name": "binId",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 901,
                                    "src": "12440:5:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 926,
                                      "name": "wasteIds",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 904,
                                      "src": "12447:8:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 928,
                                    "indexExpression": {
                                      "id": 927,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 914,
                                      "src": "12456:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "12447:11:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 924,
                                  "name": "collectWaste",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 899,
                                  "src": "12427:12:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                                    "typeString": "function (uint256,uint256)"
                                  }
                                },
                                "id": 929,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12427:32:0",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 930,
                              "nodeType": "ExpressionStatement",
                              "src": "12427:32:0"
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 920,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 917,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 914,
                            "src": "12386:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "expression": {
                              "id": 918,
                              "name": "wasteIds",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 904,
                              "src": "12390:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "12390:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12386:19:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 932,
                        "initializationExpression": {
                          "assignments": [
                            914
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 914,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "12379:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 932,
                              "src": "12374:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 913,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "12374:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 916,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 915,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12383:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12374:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 922,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12407:3:0",
                            "subExpression": {
                              "id": 921,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 914,
                              "src": "12407:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 923,
                          "nodeType": "ExpressionStatement",
                          "src": "12407:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "12369:102:0"
                      }
                    ]
                  },
                  "functionSelector": "41311bc3",
                  "id": 934,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "id": 907,
                          "name": "wasteIds",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 904,
                          "src": "12329:8:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                            "typeString": "uint256[] memory"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 908,
                              "name": "_empty",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 616,
                              "src": "12338:6:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$__$returns$_t_struct$_Empty_$2045_memory_ptr_$",
                                "typeString": "function () pure returns (struct Common.Empty memory)"
                              }
                            },
                            "id": 909,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12338:8:0",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Empty_$2045_memory_ptr",
                              "typeString": "struct Common.Empty memory"
                            }
                          },
                          "id": 910,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "wastedata",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2044,
                          "src": "12338:18:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_string_memory_ptr_$dyn_memory_ptr",
                            "typeString": "string memory[] memory"
                          }
                        }
                      ],
                      "id": 911,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 906,
                        "name": "validateSize",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 201,
                        "src": "12316:12:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "12316:41:0"
                    }
                  ],
                  "name": "collectMultipleWaste",
                  "nameLocation": "12252:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 905,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 901,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "12278:5:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "12273:10:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 900,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12273:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 904,
                        "mutability": "mutable",
                        "name": "wasteIds",
                        "nameLocation": "12299:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 934,
                        "src": "12285:22:0",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 902,
                            "name": "uint",
                            "nodeType": "ElementaryTypeName",
                            "src": "12285:4:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 903,
                          "nodeType": "ArrayTypeName",
                          "src": "12285:6:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                            "typeString": "uint256[]"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12272:36:0"
                  },
                  "returnParameters": {
                    "id": 912,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12358:0:0"
                  },
                  "scope": 1086,
                  "src": "12243:235:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1045,
                    "nodeType": "Block",
                    "src": "12758:807:0",
                    "statements": [
                      {
                        "assignments": [
                          941
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 941,
                            "mutability": "mutable",
                            "name": "len",
                            "nameLocation": "12774:3:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1045,
                            "src": "12769:8:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 940,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12769:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 947,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 942,
                              "name": "_garbages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 48,
                              "src": "12780:9:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                              }
                            },
                            "id": 945,
                            "indexExpression": {
                              "expression": {
                                "id": 943,
                                "name": "State",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1972,
                                "src": "12790:5:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                                  "typeString": "type(enum Common.State)"
                                }
                              },
                              "id": 944,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "RECYCLED",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1971,
                              "src": "12790:14:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "12780:25:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                              "typeString": "struct Common.WasteData storage ref[] storage ref"
                            }
                          },
                          "id": 946,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "12780:32:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12769:43:0"
                      },
                      {
                        "assignments": [
                          949
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 949,
                            "mutability": "mutable",
                            "name": "actualVolume",
                            "nameLocation": "12828:12:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1045,
                            "src": "12823:17:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 948,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "12823:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 950,
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12823:17:0"
                      },
                      {
                        "assignments": [
                          953
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 953,
                            "mutability": "mutable",
                            "name": "_s",
                            "nameLocation": "12857:2:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1045,
                            "src": "12851:8:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1972",
                              "typeString": "enum Common.State"
                            },
                            "typeName": {
                              "id": 952,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 951,
                                "name": "State",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1972,
                                "src": "12851:5:0"
                              },
                              "referencedDeclaration": 1972,
                              "src": "12851:5:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_State_$1972",
                                "typeString": "enum Common.State"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 956,
                        "initialValue": {
                          "expression": {
                            "id": 954,
                            "name": "State",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1972,
                            "src": "12862:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                              "typeString": "type(enum Common.State)"
                            }
                          },
                          "id": 955,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "RECYCLED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1971,
                          "src": "12862:14:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12851:25:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 964,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 960,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 958,
                                  "name": "len",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "12895:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">",
                                "rightExpression": {
                                  "hexValue": "30",
                                  "id": 959,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "12901:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "12895:7:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "&&",
                              "rightExpression": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 963,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 961,
                                  "name": "len",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 941,
                                  "src": "12906:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": ">=",
                                "rightExpression": {
                                  "id": 962,
                                  "name": "volume",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 937,
                                  "src": "12913:6:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "12906:13:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "src": "12895:24:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4e6f7420617661696c61626c65",
                              "id": 965,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "12921:15:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b9c8b0a781ee5b87f71931d50074d05dd76b7be959de5062a78ccee2fb412519",
                                "typeString": "literal_string \"Not available\""
                              },
                              "value": "Not available"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b9c8b0a781ee5b87f71931d50074d05dd76b7be959de5062a78ccee2fb412519",
                                "typeString": "literal_string \"Not available\""
                              }
                            ],
                            "id": 957,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "12887:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 966,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12887:50:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 967,
                        "nodeType": "ExpressionStatement",
                        "src": "12887:50:0"
                      },
                      {
                        "body": {
                          "id": 1029,
                          "nodeType": "Block",
                          "src": "12981:468:0",
                          "statements": [
                            {
                              "assignments": [
                                980
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 980,
                                  "mutability": "mutable",
                                  "name": "wd",
                                  "nameLocation": "13013:2:0",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 1029,
                                  "src": "12996:19:0",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                    "typeString": "struct Common.WasteData"
                                  },
                                  "typeName": {
                                    "id": 979,
                                    "nodeType": "UserDefinedTypeName",
                                    "pathNode": {
                                      "id": 978,
                                      "name": "WasteData",
                                      "nodeType": "IdentifierPath",
                                      "referencedDeclaration": 2016,
                                      "src": "12996:9:0"
                                    },
                                    "referencedDeclaration": 2016,
                                    "src": "12996:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                                      "typeString": "struct Common.WasteData"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 986,
                              "initialValue": {
                                "baseExpression": {
                                  "baseExpression": {
                                    "id": 981,
                                    "name": "_garbages",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 48,
                                    "src": "13018:9:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                      "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                                    }
                                  },
                                  "id": 983,
                                  "indexExpression": {
                                    "id": 982,
                                    "name": "_s",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 953,
                                    "src": "13028:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_enum$_State_$1972",
                                      "typeString": "enum Common.State"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "13018:13:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                    "typeString": "struct Common.WasteData storage ref[] storage ref"
                                  }
                                },
                                "id": 985,
                                "indexExpression": {
                                  "id": 984,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 969,
                                  "src": "13032:1:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13018:16:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WasteData_$2016_storage",
                                  "typeString": "struct Common.WasteData storage ref"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "12996:38:0"
                            },
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                "id": 993,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "id": 987,
                                    "name": "wd",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 980,
                                    "src": "13052:2:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 988,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "recycler",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2012,
                                  "src": "13052:11:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "!=",
                                "rightExpression": {
                                  "arguments": [
                                    {
                                      "hexValue": "30",
                                      "id": 991,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "13075:1:0",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      }
                                    ],
                                    "id": 990,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13067:7:0",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 989,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13067:7:0",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 992,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13067:10:0",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "src": "13052:25:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 1028,
                              "nodeType": "IfStatement",
                              "src": "13049:389:0",
                              "trueBody": {
                                "id": 1027,
                                "nodeType": "Block",
                                "src": "13079:359:0",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 995,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "13098:15:0",
                                      "subExpression": {
                                        "id": 994,
                                        "name": "actualVolume",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 949,
                                        "src": "13098:12:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 996,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13098:15:0"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "expression": {
                                                "id": 1007,
                                                "name": "wd",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 980,
                                                "src": "13217:2:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                                  "typeString": "struct Common.WasteData memory"
                                                }
                                              },
                                              "id": 1008,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "value",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2006,
                                              "src": "13217:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1009,
                                                "name": "wd",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 980,
                                                "src": "13248:2:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                                  "typeString": "struct Common.WasteData memory"
                                                }
                                              },
                                              "id": 1010,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "collector",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2008,
                                              "src": "13248:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1011,
                                                "name": "wd",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 980,
                                                "src": "13283:2:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                                  "typeString": "struct Common.WasteData memory"
                                                }
                                              },
                                              "id": 1012,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "generator",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2010,
                                              "src": "13283:12:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1013,
                                                "name": "wd",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 980,
                                                "src": "13318:2:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                                  "typeString": "struct Common.WasteData memory"
                                                }
                                              },
                                              "id": 1014,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "recycler",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2012,
                                              "src": "13318:11:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            {
                                              "expression": {
                                                "id": 1015,
                                                "name": "wd",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 980,
                                                "src": "13352:2:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                                  "typeString": "struct Common.WasteData memory"
                                                }
                                              },
                                              "id": 1016,
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "memberName": "state",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 2015,
                                              "src": "13352:8:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_enum$_State_$1972",
                                                "typeString": "enum Common.State"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              },
                                              {
                                                "typeIdentifier": "t_enum$_State_$1972",
                                                "typeString": "enum Common.State"
                                              }
                                            ],
                                            "id": 1006,
                                            "name": "WasteData",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 2016,
                                            "src": "13185:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_struct$_WasteData_$2016_storage_ptr_$",
                                              "typeString": "type(struct Common.WasteData storage pointer)"
                                            }
                                          },
                                          "id": 1017,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "structConstructorCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "13185:194:0",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                            "typeString": "struct Common.WasteData memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                            "typeString": "struct Common.WasteData memory"
                                          }
                                        ],
                                        "expression": {
                                          "expression": {
                                            "baseExpression": {
                                              "baseExpression": {
                                                "id": 997,
                                                "name": "profiles",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 57,
                                                "src": "13132:8:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                                  "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                                }
                                              },
                                              "id": 1002,
                                              "indexExpression": {
                                                "expression": {
                                                  "id": 998,
                                                  "name": "Category",
                                                  "nodeType": "Identifier",
                                                  "overloadedDeclarations": [],
                                                  "referencedDeclaration": 1978,
                                                  "src": "13141:8:0",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                                                    "typeString": "type(enum Common.Category)"
                                                  }
                                                },
                                                "id": 999,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "memberName": "SOLD",
                                                "nodeType": "MemberAccess",
                                                "referencedDeclaration": 1977,
                                                "src": "13141:13:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_enum$_Category_$1978",
                                                  "typeString": "enum Common.Category"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "13132:23:0",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                                "typeString": "mapping(address => struct Common.Profile storage ref)"
                                              }
                                            },
                                            "id": 1003,
                                            "indexExpression": {
                                              "arguments": [],
                                              "expression": {
                                                "argumentTypes": [],
                                                "id": 1000,
                                                "name": "_msgSender",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 1154,
                                                "src": "13156:10:0",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                                  "typeString": "function () view returns (address)"
                                                }
                                              },
                                              "id": 1001,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "functionCall",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "13156:12:0",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_address",
                                                "typeString": "address"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "13132:37:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                              "typeString": "struct Common.Profile storage ref"
                                            }
                                          },
                                          "id": 1004,
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "purchased",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 2028,
                                          "src": "13132:47:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                            "typeString": "struct Common.WasteData storage ref[] storage ref"
                                          }
                                        },
                                        "id": 1005,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "push",
                                        "nodeType": "MemberAccess",
                                        "src": "13132:52:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr_$_t_struct$_WasteData_$2016_storage_$returns$__$bound_to$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr_$",
                                          "typeString": "function (struct Common.WasteData storage ref[] storage pointer,struct Common.WasteData storage ref)"
                                        }
                                      },
                                      "id": 1018,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13132:248:0",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1019,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13132:248:0"
                                  },
                                  {
                                    "expression": {
                                      "id": 1025,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "delete",
                                      "prefix": true,
                                      "src": "13399:23:0",
                                      "subExpression": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 1020,
                                            "name": "_garbages",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 48,
                                            "src": "13406:9:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                              "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                                            }
                                          },
                                          "id": 1022,
                                          "indexExpression": {
                                            "id": 1021,
                                            "name": "_s",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 953,
                                            "src": "13416:2:0",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_enum$_State_$1972",
                                              "typeString": "enum Common.State"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "13406:13:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                            "typeString": "struct Common.WasteData storage ref[] storage ref"
                                          }
                                        },
                                        "id": 1024,
                                        "indexExpression": {
                                          "id": 1023,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 969,
                                          "src": "13420:1:0",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "13406:16:0",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_WasteData_$2016_storage",
                                          "typeString": "struct Common.WasteData storage ref"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 1026,
                                    "nodeType": "ExpressionStatement",
                                    "src": "13399:23:0"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 974,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 972,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 969,
                            "src": "12964:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 973,
                            "name": "volume",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 937,
                            "src": "12968:6:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "12964:10:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1030,
                        "initializationExpression": {
                          "assignments": [
                            969
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 969,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "12957:1:0",
                              "nodeType": "VariableDeclaration",
                              "scope": 1030,
                              "src": "12952:6:0",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 968,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "12952:4:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 971,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 970,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12961:1:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "12952:10:0"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 976,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "12976:3:0",
                            "subExpression": {
                              "id": 975,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 969,
                              "src": "12976:1:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 977,
                          "nodeType": "ExpressionStatement",
                          "src": "12976:3:0"
                        },
                        "nodeType": "ForStatement",
                        "src": "12948:501:0"
                      },
                      {
                        "assignments": [
                          1032
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1032,
                            "mutability": "mutable",
                            "name": "amtToPay",
                            "nameLocation": "13464:8:0",
                            "nodeType": "VariableDeclaration",
                            "scope": 1045,
                            "src": "13459:13:0",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1031,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "13459:4:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1036,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1035,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1033,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "13475:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "*",
                          "rightExpression": {
                            "id": 1034,
                            "name": "actualVolume",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 949,
                            "src": "13483:12:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13475:20:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13459:36:0"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1041,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 1038,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "13514:3:0",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 1039,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "src": "13514:9:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1040,
                                "name": "amtToPay",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1032,
                                "src": "13527:8:0",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "13514:21:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4956616c7565",
                              "id": 1042,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13537:8:0",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c6f5816ffca9f3bdafc2c13d983135d2a105150b42711b53975c78544de1fc78",
                                "typeString": "literal_string \"IValue\""
                              },
                              "value": "IValue"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c6f5816ffca9f3bdafc2c13d983135d2a105150b42711b53975c78544de1fc78",
                                "typeString": "literal_string \"IValue\""
                              }
                            ],
                            "id": 1037,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13506:7:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13506:40:0",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1044,
                        "nodeType": "ExpressionStatement",
                        "src": "13506:40:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 935,
                    "nodeType": "StructuredDocumentation",
                    "src": "12486:217:0",
                    "text": "@notice Buy recycled waste in form of manure\nNOTE: Only recycled waste can be bought.\nIf available manure cannot cover requested volume, buyer simply \npurchased available volume."
                  },
                  "functionSelector": "c437a2f0",
                  "id": 1046,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "buyRecycled",
                  "nameLocation": "12718:11:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 938,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 937,
                        "mutability": "mutable",
                        "name": "volume",
                        "nameLocation": "12735:6:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1046,
                        "src": "12730:11:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 936,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "12730:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12729:13:0"
                  },
                  "returnParameters": {
                    "id": 939,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12758:0:0"
                  },
                  "scope": 1086,
                  "src": "12709:856:0",
                  "stateMutability": "payable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1058,
                    "nodeType": "Block",
                    "src": "13671:35:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1054,
                            "name": "price",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30,
                            "src": "13682:5:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1055,
                            "name": "newPrice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1049,
                            "src": "13690:8:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13682:16:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1057,
                        "nodeType": "ExpressionStatement",
                        "src": "13682:16:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1047,
                    "nodeType": "StructuredDocumentation",
                    "src": "13573:42:0",
                    "text": "@dev Sets new price for recycled waste."
                  },
                  "functionSelector": "91b7f5ed",
                  "id": 1059,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1052,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1051,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "13661:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13661:9:0"
                    }
                  ],
                  "name": "setPrice",
                  "nameLocation": "13630:8:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1050,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1049,
                        "mutability": "mutable",
                        "name": "newPrice",
                        "nameLocation": "13644:8:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1059,
                        "src": "13639:13:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1048,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13639:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13638:15:0"
                  },
                  "returnParameters": {
                    "id": 1053,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13671:0:0"
                  },
                  "scope": 1086,
                  "src": "13621:85:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1071,
                    "nodeType": "Block",
                    "src": "13837:46:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1069,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1067,
                            "name": "newSignUpReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 15,
                            "src": "13848:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1068,
                            "name": "newReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1062,
                            "src": "13866:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13848:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1070,
                        "nodeType": "ExpressionStatement",
                        "src": "13848:27:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1060,
                    "nodeType": "StructuredDocumentation",
                    "src": "13716:58:0",
                    "text": "@dev Sets new sign up reward. Note With access modifier"
                  },
                  "functionSelector": "f2d03e15",
                  "id": 1072,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1065,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1064,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "13828:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "13828:9:0"
                    }
                  ],
                  "name": "setSignUpReward",
                  "nameLocation": "13789:15:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1063,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1062,
                        "mutability": "mutable",
                        "name": "newReward",
                        "nameLocation": "13810:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1072,
                        "src": "13805:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1061,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13805:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13804:16:0"
                  },
                  "returnParameters": {
                    "id": 1066,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "13837:0:0"
                  },
                  "scope": 1086,
                  "src": "13780:103:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1084,
                    "nodeType": "Block",
                    "src": "14017:46:0",
                    "statements": [
                      {
                        "expression": {
                          "id": 1082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1080,
                            "name": "collectorReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 24,
                            "src": "14028:15:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1081,
                            "name": "newReward",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1075,
                            "src": "14046:9:0",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "14028:27:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1083,
                        "nodeType": "ExpressionStatement",
                        "src": "14028:27:0"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1073,
                    "nodeType": "StructuredDocumentation",
                    "src": "13891:58:0",
                    "text": "@dev Sets new sign up reward. Note With access modifier"
                  },
                  "functionSelector": "72938a14",
                  "id": 1085,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1078,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1077,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "14008:9:0"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "14008:9:0"
                    }
                  ],
                  "name": "setCollectorUpReward",
                  "nameLocation": "13964:20:0",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1076,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1075,
                        "mutability": "mutable",
                        "name": "newReward",
                        "nameLocation": "13990:9:0",
                        "nodeType": "VariableDeclaration",
                        "scope": 1085,
                        "src": "13985:14:0",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1074,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "13985:4:0",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "13984:16:0"
                  },
                  "returnParameters": {
                    "id": 1079,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "14017:0:0"
                  },
                  "scope": 1086,
                  "src": "13955:108:0",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1087,
              "src": "1777:12293:0",
              "usedErrors": [
                1984,
                1986,
                1988,
                1990,
                1992,
                1994,
                1996,
                1998
              ]
            }
          ],
          "src": "39:14033:0"
        },
        "id": 0
      },
      "contracts/IBoolaToken.sol": {
        "ast": {
          "absolutePath": "contracts/IBoolaToken.sol",
          "exportedSymbols": {
            "Context": [
              1164
            ],
            "ERC20": [
              1750
            ],
            "IBoolaToken": [
              1142
            ],
            "IERC20": [
              1828
            ],
            "IERC20Metadata": [
              1853
            ],
            "Ownable": [
              1966
            ]
          },
          "id": 1143,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1088,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "33:23:1"
            },
            {
              "absolutePath": "contracts/deps/ERC20.sol",
              "file": "./deps/ERC20.sol",
              "id": 1089,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1143,
              "sourceUnit": 1751,
              "src": "60:26:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/deps/Ownable.sol",
              "file": "./deps/Ownable.sol",
              "id": 1090,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1143,
              "sourceUnit": 1967,
              "src": "88:28:1",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1092,
                    "name": "ERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1750,
                    "src": "245:5:1"
                  },
                  "id": 1093,
                  "nodeType": "InheritanceSpecifier",
                  "src": "245:5:1"
                },
                {
                  "baseName": {
                    "id": 1094,
                    "name": "Ownable",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1966,
                    "src": "252:7:1"
                  },
                  "id": 1095,
                  "nodeType": "InheritanceSpecifier",
                  "src": "252:7:1"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1091,
                "nodeType": "StructuredDocumentation",
                "src": "120:99:1",
                "text": " @notice A simple ERC20 Token implementation that also accepts donation for the project"
              },
              "fullyImplemented": true,
              "id": 1142,
              "linearizedBaseContracts": [
                1142,
                1966,
                1750,
                1853,
                1828,
                1164
              ],
              "name": "IBoolaToken",
              "nameLocation": "230:11:1",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1113,
                    "nodeType": "Block",
                    "src": "310:128:1",
                    "statements": [
                      {
                        "documentation": "@notice mint 10000 tokens to the owner",
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1103,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "389:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1104,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "389:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_rational_6000000000000000000000000000_by_1",
                                "typeString": "int_const 6000000000000000000000000000"
                              },
                              "id": 1110,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "leftExpression": {
                                "hexValue": "365f3030305f3030305f303030",
                                "id": 1105,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "403:13:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_6000000000_by_1",
                                  "typeString": "int_const 6000000000"
                                },
                                "value": "6_000_000_000"
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "*",
                              "rightExpression": {
                                "components": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    },
                                    "id": 1108,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "hexValue": "3130",
                                      "id": 1106,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "420:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_10_by_1",
                                        "typeString": "int_const 10"
                                      },
                                      "value": "10"
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "**",
                                    "rightExpression": {
                                      "hexValue": "3138",
                                      "id": 1107,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "426:2:1",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_18_by_1",
                                        "typeString": "int_const 18"
                                      },
                                      "value": "18"
                                    },
                                    "src": "420:8:1",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                      "typeString": "int_const 1000000000000000000"
                                    }
                                  }
                                ],
                                "id": 1109,
                                "isConstant": false,
                                "isInlineArray": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "TupleExpression",
                                "src": "419:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1000000000000000000_by_1",
                                  "typeString": "int_const 1000000000000000000"
                                }
                              },
                              "src": "403:26:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_6000000000000000000000000000_by_1",
                                "typeString": "int_const 6000000000000000000000000000"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_rational_6000000000000000000000000000_by_1",
                                "typeString": "int_const 6000000000000000000000000000"
                              }
                            ],
                            "id": 1102,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1567,
                            "src": "383:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "383:47:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1112,
                        "nodeType": "ExpressionStatement",
                        "src": "383:47:1"
                      }
                    ]
                  },
                  "id": 1114,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [
                    {
                      "arguments": [
                        {
                          "hexValue": "69426f6f6c6120546f6b656e",
                          "id": 1098,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "287:14:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_ecf137805f3c7b16b7cd75b612dbedb313a6a4e7a0b0eab405dc2eb10effe1dc",
                            "typeString": "literal_string \"iBoola Token\""
                          },
                          "value": "iBoola Token"
                        },
                        {
                          "hexValue": "494254",
                          "id": 1099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "303:5:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_4577ac5eb216b19b739e9e6413b0aa470a7eb302437384d9d676880857b160ac",
                            "typeString": "literal_string \"IBT\""
                          },
                          "value": "IBT"
                        }
                      ],
                      "id": 1100,
                      "kind": "baseConstructorSpecifier",
                      "modifierName": {
                        "id": 1097,
                        "name": "ERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1750,
                        "src": "281:5:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "281:28:1"
                    }
                  ],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1096,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "278:2:1"
                  },
                  "returnParameters": {
                    "id": 1101,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "310:0:1"
                  },
                  "scope": 1142,
                  "src": "267:171:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1128,
                    "nodeType": "Block",
                    "src": "502:36:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1124,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1116,
                              "src": "519:2:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1125,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1118,
                              "src": "523:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1123,
                            "name": "_mint",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1567,
                            "src": "513:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1126,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "513:17:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1127,
                        "nodeType": "ExpressionStatement",
                        "src": "513:17:1"
                      }
                    ]
                  },
                  "functionSelector": "40c10f19",
                  "id": 1129,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1121,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1120,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "492:9:1"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "492:9:1"
                    }
                  ],
                  "name": "mint",
                  "nameLocation": "455:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1119,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1116,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "468:2:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "460:10:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1115,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "460:7:1",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1118,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "477:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1129,
                        "src": "472:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1117,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "472:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "459:25:1"
                  },
                  "returnParameters": {
                    "id": 1122,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "502:0:1"
                  },
                  "scope": 1142,
                  "src": "446:92:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1140,
                    "nodeType": "Block",
                    "src": "580:46:1",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1135,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "597:10:1",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1136,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "597:12:1",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1137,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1131,
                              "src": "611:6:1",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1134,
                            "name": "_burn",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1639,
                            "src": "591:5:1",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256)"
                            }
                          },
                          "id": 1138,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "591:27:1",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1139,
                        "nodeType": "ExpressionStatement",
                        "src": "591:27:1"
                      }
                    ]
                  },
                  "functionSelector": "42966c68",
                  "id": 1141,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "burn",
                  "nameLocation": "555:4:1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1132,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1131,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "565:6:1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1141,
                        "src": "560:11:1",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1130,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "560:4:1",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "559:13:1"
                  },
                  "returnParameters": {
                    "id": 1133,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "580:0:1"
                  },
                  "scope": 1142,
                  "src": "546:80:1",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                }
              ],
              "scope": 1143,
              "src": "221:408:1",
              "usedErrors": []
            }
          ],
          "src": "33:598:1"
        },
        "id": 1
      },
      "contracts/deps/Context.sol": {
        "ast": {
          "absolutePath": "contracts/deps/Context.sol",
          "exportedSymbols": {
            "Context": [
              1164
            ]
          },
          "id": 1165,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1144,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "89:23:2"
            },
            {
              "abstract": true,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1145,
                "nodeType": "StructuredDocumentation",
                "src": "116:505:2",
                "text": " @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."
              },
              "fullyImplemented": true,
              "id": 1164,
              "linearizedBaseContracts": [
                1164
              ],
              "name": "Context",
              "nameLocation": "641:7:2",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 1153,
                    "nodeType": "Block",
                    "src": "718:36:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1150,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "736:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1151,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "736:10:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1149,
                        "id": 1152,
                        "nodeType": "Return",
                        "src": "729:17:2"
                      }
                    ]
                  },
                  "id": 1154,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgSender",
                  "nameLocation": "665:10:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1146,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "675:2:2"
                  },
                  "returnParameters": {
                    "id": 1149,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1148,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1154,
                        "src": "709:7:2",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1147,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "709:7:2",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "708:9:2"
                  },
                  "scope": 1164,
                  "src": "656:98:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1162,
                    "nodeType": "Block",
                    "src": "829:34:2",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "id": 1159,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "847:3:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 1160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "data",
                          "nodeType": "MemberAccess",
                          "src": "847:8:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_calldata_ptr",
                            "typeString": "bytes calldata"
                          }
                        },
                        "functionReturnParameters": 1158,
                        "id": 1161,
                        "nodeType": "Return",
                        "src": "840:15:2"
                      }
                    ]
                  },
                  "id": 1163,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_msgData",
                  "nameLocation": "771:8:2",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1155,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "779:2:2"
                  },
                  "returnParameters": {
                    "id": 1158,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1157,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1163,
                        "src": "813:14:2",
                        "stateVariable": false,
                        "storageLocation": "calldata",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes"
                        },
                        "typeName": {
                          "id": 1156,
                          "name": "bytes",
                          "nodeType": "ElementaryTypeName",
                          "src": "813:5:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage_ptr",
                            "typeString": "bytes"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "812:16:2"
                  },
                  "scope": 1164,
                  "src": "762:101:2",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1165,
              "src": "623:243:2",
              "usedErrors": []
            }
          ],
          "src": "89:779:2"
        },
        "id": 2
      },
      "contracts/deps/ERC20.sol": {
        "ast": {
          "absolutePath": "contracts/deps/ERC20.sol",
          "exportedSymbols": {
            "Context": [
              1164
            ],
            "ERC20": [
              1750
            ],
            "IERC20": [
              1828
            ],
            "IERC20Metadata": [
              1853
            ]
          },
          "id": 1751,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1166,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "108:23:3"
            },
            {
              "absolutePath": "contracts/deps/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 1167,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 1829,
              "src": "135:22:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/deps/IERC20Metadata.sol",
              "file": "./IERC20Metadata.sol",
              "id": 1168,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 1854,
              "src": "159:30:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "absolutePath": "contracts/deps/Context.sol",
              "file": "./Context.sol",
              "id": 1169,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1751,
              "sourceUnit": 1165,
              "src": "191:23:3",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1171,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1164,
                    "src": "1434:7:3"
                  },
                  "id": 1172,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1434:7:3"
                },
                {
                  "baseName": {
                    "id": 1173,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1828,
                    "src": "1443:6:3"
                  },
                  "id": 1174,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1443:6:3"
                },
                {
                  "baseName": {
                    "id": 1175,
                    "name": "IERC20Metadata",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1853,
                    "src": "1451:14:3"
                  },
                  "id": 1176,
                  "nodeType": "InheritanceSpecifier",
                  "src": "1451:14:3"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1170,
                "nodeType": "StructuredDocumentation",
                "src": "218:1196:3",
                "text": " @dev Implementation of the {IERC20} interface.\n This implementation is agnostic to the way tokens are created. This means\n that a supply mechanism has to be added in a derived contract using {_mint}.\n For a generic mechanism see {ERC20PresetMinterPauser}.\n TIP: For a detailed writeup see our guide\n https://forum.zeppelin.solutions/t/how-to-implement-erc20-supply-mechanisms/226[How\n to implement supply mechanisms].\n We have followed general OpenZeppelin Contracts guidelines: functions revert\n instead returning `false` on failure. This behavior is nonetheless\n conventional and does not conflict with the expectations of ERC20\n applications.\n Additionally, an {Approval} event is emitted on calls to {transferFrom}.\n This allows applications to reconstruct the allowance for all accounts just\n by listening to said events. Other implementations of the EIP may not emit\n these events, as it isn't required by the specification.\n Finally, the non-standard {decreaseAllowance} and {increaseAllowance}\n functions have been added to mitigate the well-known issues around setting\n allowances. See {IERC20-approve}."
              },
              "fullyImplemented": true,
              "id": 1750,
              "linearizedBaseContracts": [
                1750,
                1853,
                1828,
                1164
              ],
              "name": "ERC20",
              "nameLocation": "1425:5:3",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1180,
                  "mutability": "mutable",
                  "name": "_balances",
                  "nameLocation": "1509:9:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "1473:45:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                    "typeString": "mapping(address => uint256)"
                  },
                  "typeName": {
                    "id": 1179,
                    "keyType": {
                      "id": 1177,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1481:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1473:27:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                      "typeString": "mapping(address => uint256)"
                    },
                    "valueType": {
                      "id": 1178,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "1492:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1186,
                  "mutability": "mutable",
                  "name": "_allowances",
                  "nameLocation": "1583:11:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "1527:67:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                    "typeString": "mapping(address => mapping(address => uint256))"
                  },
                  "typeName": {
                    "id": 1185,
                    "keyType": {
                      "id": 1181,
                      "name": "address",
                      "nodeType": "ElementaryTypeName",
                      "src": "1535:7:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Mapping",
                    "src": "1527:47:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                      "typeString": "mapping(address => mapping(address => uint256))"
                    },
                    "valueType": {
                      "id": 1184,
                      "keyType": {
                        "id": 1182,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1554:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "Mapping",
                      "src": "1546:27:3",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      },
                      "valueType": {
                        "id": 1183,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1565:7:3",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1188,
                  "mutability": "mutable",
                  "name": "_totalSupply",
                  "nameLocation": "1619:12:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "1603:28:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 1187,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1603:7:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1190,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1655:5:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "1640:20:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1189,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1640:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "constant": false,
                  "id": 1192,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1682:7:3",
                  "nodeType": "VariableDeclaration",
                  "scope": 1750,
                  "src": "1667:22:3",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_storage",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 1191,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1667:6:3",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 1208,
                    "nodeType": "Block",
                    "src": "2066:60:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1202,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1200,
                            "name": "_name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1190,
                            "src": "2077:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1201,
                            "name": "name_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1195,
                            "src": "2085:5:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2077:13:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1203,
                        "nodeType": "ExpressionStatement",
                        "src": "2077:13:3"
                      },
                      {
                        "expression": {
                          "id": 1206,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1204,
                            "name": "_symbol",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1192,
                            "src": "2101:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1205,
                            "name": "symbol_",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1197,
                            "src": "2111:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          "src": "2101:17:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "id": 1207,
                        "nodeType": "ExpressionStatement",
                        "src": "2101:17:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1193,
                    "nodeType": "StructuredDocumentation",
                    "src": "1698:306:3",
                    "text": " @dev Sets the values for {name} and {symbol}.\n The default value of {decimals} is 18. To select a different value for\n {decimals} you should overload it.\n All two of these values are immutable: they can only be set once during\n construction."
                  },
                  "id": 1209,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1198,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1195,
                        "mutability": "mutable",
                        "name": "name_",
                        "nameLocation": "2036:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "2022:19:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1194,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2022:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1197,
                        "mutability": "mutable",
                        "name": "symbol_",
                        "nameLocation": "2057:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1209,
                        "src": "2043:21:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1196,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2043:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2021:44:3"
                  },
                  "returnParameters": {
                    "id": 1199,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2066:0:3"
                  },
                  "scope": 1750,
                  "src": "2010:116:3",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1840
                  ],
                  "body": {
                    "id": 1218,
                    "nodeType": "Block",
                    "src": "2265:31:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1216,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1190,
                          "src": "2283:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1215,
                        "id": 1217,
                        "nodeType": "Return",
                        "src": "2276:12:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1210,
                    "nodeType": "StructuredDocumentation",
                    "src": "2134:56:3",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1219,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "2205:4:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1212,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2232:8:3"
                  },
                  "parameters": {
                    "id": 1211,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2209:2:3"
                  },
                  "returnParameters": {
                    "id": 1215,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1214,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1219,
                        "src": "2250:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1213,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2250:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2249:15:3"
                  },
                  "scope": 1750,
                  "src": "2196:100:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1846
                  ],
                  "body": {
                    "id": 1228,
                    "nodeType": "Block",
                    "src": "2486:33:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1226,
                          "name": "_symbol",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1192,
                          "src": "2504:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage",
                            "typeString": "string storage ref"
                          }
                        },
                        "functionReturnParameters": 1225,
                        "id": 1227,
                        "nodeType": "Return",
                        "src": "2497:14:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1220,
                    "nodeType": "StructuredDocumentation",
                    "src": "2304:105:3",
                    "text": " @dev Returns the symbol of the token, usually a shorter version of the\n name."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1229,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "2424:6:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1222,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "2453:8:3"
                  },
                  "parameters": {
                    "id": 1221,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2430:2:3"
                  },
                  "returnParameters": {
                    "id": 1225,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1224,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1229,
                        "src": "2471:13:3",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1223,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2471:6:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2470:15:3"
                  },
                  "scope": 1750,
                  "src": "2415:104:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1852
                  ],
                  "body": {
                    "id": 1238,
                    "nodeType": "Block",
                    "src": "3223:28:3",
                    "statements": [
                      {
                        "expression": {
                          "hexValue": "3138",
                          "id": 1236,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3241:2:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_18_by_1",
                            "typeString": "int_const 18"
                          },
                          "value": "18"
                        },
                        "functionReturnParameters": 1235,
                        "id": 1237,
                        "nodeType": "Return",
                        "src": "3234:9:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1230,
                    "nodeType": "StructuredDocumentation",
                    "src": "2527:625:3",
                    "text": " @dev Returns the number of decimals used to get its user representation.\n For example, if `decimals` equals `2`, a balance of `505` tokens should\n be displayed to a user as `5.05` (`505 / 10 ** 2`).\n Tokens usually opt for a value of 18, imitating the relationship between\n Ether and Wei. This is the value {ERC20} uses, unless this function is\n overridden;\n NOTE: This information is only used for _display_ purposes: it in\n no way affects any of the arithmetic of the contract, including\n {IERC20-balanceOf} and {IERC20-transfer}."
                  },
                  "functionSelector": "313ce567",
                  "id": 1239,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "3167:8:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1232,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3198:8:3"
                  },
                  "parameters": {
                    "id": 1231,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3175:2:3"
                  },
                  "returnParameters": {
                    "id": 1235,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1234,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1239,
                        "src": "3216:5:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1233,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "3216:5:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3215:7:3"
                  },
                  "scope": 1750,
                  "src": "3158:93:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1777
                  ],
                  "body": {
                    "id": 1248,
                    "nodeType": "Block",
                    "src": "3386:38:3",
                    "statements": [
                      {
                        "expression": {
                          "id": 1246,
                          "name": "_totalSupply",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1188,
                          "src": "3404:12:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1245,
                        "id": 1247,
                        "nodeType": "Return",
                        "src": "3397:19:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1240,
                    "nodeType": "StructuredDocumentation",
                    "src": "3259:51:3",
                    "text": " @dev See {IERC20-totalSupply}."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1249,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "3325:11:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1242,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3359:8:3"
                  },
                  "parameters": {
                    "id": 1241,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3336:2:3"
                  },
                  "returnParameters": {
                    "id": 1245,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1244,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1249,
                        "src": "3377:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1243,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3377:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3376:9:3"
                  },
                  "scope": 1750,
                  "src": "3316:108:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1785
                  ],
                  "body": {
                    "id": 1262,
                    "nodeType": "Block",
                    "src": "3570:44:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "id": 1258,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "3588:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1260,
                          "indexExpression": {
                            "id": 1259,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1252,
                            "src": "3598:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3588:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1257,
                        "id": 1261,
                        "nodeType": "Return",
                        "src": "3581:25:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1250,
                    "nodeType": "StructuredDocumentation",
                    "src": "3432:49:3",
                    "text": " @dev See {IERC20-balanceOf}."
                  },
                  "functionSelector": "70a08231",
                  "id": 1263,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "3496:9:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1254,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3543:8:3"
                  },
                  "parameters": {
                    "id": 1253,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1252,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "3514:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "3506:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1251,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3506:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3505:17:3"
                  },
                  "returnParameters": {
                    "id": 1257,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1256,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1263,
                        "src": "3561:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1255,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3561:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3560:9:3"
                  },
                  "scope": 1750,
                  "src": "3487:127:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1795
                  ],
                  "body": {
                    "id": 1287,
                    "nodeType": "Block",
                    "src": "3905:108:3",
                    "statements": [
                      {
                        "assignments": [
                          1275
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1275,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "3924:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1287,
                            "src": "3916:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1274,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3916:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1278,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1276,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "3932:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3932:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3916:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1280,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1275,
                              "src": "3965:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1281,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1266,
                              "src": "3972:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1282,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1268,
                              "src": "3976:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1279,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "3955:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1283,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3955:28:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1284,
                        "nodeType": "ExpressionStatement",
                        "src": "3955:28:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1285,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4001:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1273,
                        "id": 1286,
                        "nodeType": "Return",
                        "src": "3994:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1264,
                    "nodeType": "StructuredDocumentation",
                    "src": "3622:192:3",
                    "text": " @dev See {IERC20-transfer}.\n Requirements:\n - `to` cannot be the zero address.\n - the caller must have a balance of at least `amount`."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1288,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "3829:8:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1270,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "3881:8:3"
                  },
                  "parameters": {
                    "id": 1269,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1266,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "3846:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "3838:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1265,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3838:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1268,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "3858:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "3850:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1267,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3850:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3837:28:3"
                  },
                  "returnParameters": {
                    "id": 1273,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1272,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1288,
                        "src": "3899:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1271,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3899:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3898:6:3"
                  },
                  "scope": 1750,
                  "src": "3820:193:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1805
                  ],
                  "body": {
                    "id": 1305,
                    "nodeType": "Block",
                    "src": "4174:53:3",
                    "statements": [
                      {
                        "expression": {
                          "baseExpression": {
                            "baseExpression": {
                              "id": 1299,
                              "name": "_allowances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1186,
                              "src": "4192:11:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                "typeString": "mapping(address => mapping(address => uint256))"
                              }
                            },
                            "id": 1301,
                            "indexExpression": {
                              "id": 1300,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1291,
                              "src": "4204:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4192:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1303,
                          "indexExpression": {
                            "id": 1302,
                            "name": "spender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1293,
                            "src": "4211:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "4192:27:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "functionReturnParameters": 1298,
                        "id": 1304,
                        "nodeType": "Return",
                        "src": "4185:34:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1289,
                    "nodeType": "StructuredDocumentation",
                    "src": "4021:49:3",
                    "text": " @dev See {IERC20-allowance}."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1306,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "4085:9:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1295,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4147:8:3"
                  },
                  "parameters": {
                    "id": 1294,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1291,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "4103:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1306,
                        "src": "4095:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1290,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4095:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1293,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4118:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1306,
                        "src": "4110:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1292,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4110:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4094:32:3"
                  },
                  "returnParameters": {
                    "id": 1298,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1297,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1306,
                        "src": "4165:7:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1296,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4165:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4164:9:3"
                  },
                  "scope": 1750,
                  "src": "4076:151:3",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1815
                  ],
                  "body": {
                    "id": 1330,
                    "nodeType": "Block",
                    "src": "4636:112:3",
                    "statements": [
                      {
                        "assignments": [
                          1318
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1318,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "4655:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1330,
                            "src": "4647:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1317,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4647:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1321,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1319,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "4663:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1320,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4663:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "4647:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1323,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1318,
                              "src": "4695:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1324,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1309,
                              "src": "4702:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1325,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1311,
                              "src": "4711:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1322,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1684,
                            "src": "4686:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1326,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4686:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1327,
                        "nodeType": "ExpressionStatement",
                        "src": "4686:32:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1328,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4736:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1316,
                        "id": 1329,
                        "nodeType": "Return",
                        "src": "4729:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1307,
                    "nodeType": "StructuredDocumentation",
                    "src": "4235:306:3",
                    "text": " @dev See {IERC20-approve}.\n NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on\n `transferFrom`. This is semantically equivalent to an infinite approval.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1331,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "4556:7:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1313,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "4612:8:3"
                  },
                  "parameters": {
                    "id": 1312,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1309,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "4572:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "4564:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1308,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4564:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1311,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4589:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "4581:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1310,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4581:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4563:33:3"
                  },
                  "returnParameters": {
                    "id": 1316,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1315,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1331,
                        "src": "4630:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1314,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "4630:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4629:6:3"
                  },
                  "scope": 1750,
                  "src": "4547:201:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "baseFunctions": [
                    1827
                  ],
                  "body": {
                    "id": 1363,
                    "nodeType": "Block",
                    "src": "5465:158:3",
                    "statements": [
                      {
                        "assignments": [
                          1345
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1345,
                            "mutability": "mutable",
                            "name": "spender",
                            "nameLocation": "5484:7:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1363,
                            "src": "5476:15:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1344,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5476:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1348,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1346,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "5494:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5494:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5476:30:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1350,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1334,
                              "src": "5533:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1351,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1345,
                              "src": "5539:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1352,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1338,
                              "src": "5548:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1349,
                            "name": "_spendAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1727,
                            "src": "5517:15:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1353,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5517:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1354,
                        "nodeType": "ExpressionStatement",
                        "src": "5517:38:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1356,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1334,
                              "src": "5576:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1357,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1336,
                              "src": "5582:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1358,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1338,
                              "src": "5586:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1355,
                            "name": "_transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1511,
                            "src": "5566:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5566:27:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1360,
                        "nodeType": "ExpressionStatement",
                        "src": "5566:27:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1361,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5611:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1343,
                        "id": 1362,
                        "nodeType": "Return",
                        "src": "5604:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1332,
                    "nodeType": "StructuredDocumentation",
                    "src": "4756:566:3",
                    "text": " @dev See {IERC20-transferFrom}.\n Emits an {Approval} event indicating the updated allowance. This is not\n required by the EIP. See the note at the beginning of {ERC20}.\n NOTE: Does not update the allowance if the current allowance\n is the maximum `uint256`.\n Requirements:\n - `from` and `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`.\n - the caller must have allowance for ``from``'s tokens of at least\n `amount`."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1364,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "5337:12:3",
                  "nodeType": "FunctionDefinition",
                  "overrides": {
                    "id": 1340,
                    "nodeType": "OverrideSpecifier",
                    "overrides": [],
                    "src": "5441:8:3"
                  },
                  "parameters": {
                    "id": 1339,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1334,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "5368:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1364,
                        "src": "5360:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1333,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5360:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1336,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "5391:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1364,
                        "src": "5383:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1335,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5383:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1338,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "5412:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1364,
                        "src": "5404:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1337,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5404:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5349:76:3"
                  },
                  "returnParameters": {
                    "id": 1343,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1342,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1364,
                        "src": "5459:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1341,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "5459:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "5458:6:3"
                  },
                  "scope": 1750,
                  "src": "5328:295:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1392,
                    "nodeType": "Block",
                    "src": "6126:144:3",
                    "statements": [
                      {
                        "assignments": [
                          1375
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1375,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "6145:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1392,
                            "src": "6137:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1374,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6137:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1378,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1376,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "6153:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1377,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6153:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6137:28:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1380,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1375,
                              "src": "6185:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1381,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1367,
                              "src": "6192:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1387,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 1383,
                                    "name": "owner",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1375,
                                    "src": "6211:5:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 1384,
                                    "name": "spender",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1367,
                                    "src": "6218:7:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 1382,
                                  "name": "allowance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1306,
                                  "src": "6201:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                    "typeString": "function (address,address) view returns (uint256)"
                                  }
                                },
                                "id": 1385,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "6201:25:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "id": 1386,
                                "name": "addedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1369,
                                "src": "6229:10:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6201:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1379,
                            "name": "_approve",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1684,
                            "src": "6176:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1388,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6176:64:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1389,
                        "nodeType": "ExpressionStatement",
                        "src": "6176:64:3"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1390,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6258:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1373,
                        "id": 1391,
                        "nodeType": "Return",
                        "src": "6251:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1365,
                    "nodeType": "StructuredDocumentation",
                    "src": "5631:395:3",
                    "text": " @dev Atomically increases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address."
                  },
                  "functionSelector": "39509351",
                  "id": 1393,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "increaseAllowance",
                  "nameLocation": "6041:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1370,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1367,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6067:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1393,
                        "src": "6059:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1366,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6059:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1369,
                        "mutability": "mutable",
                        "name": "addedValue",
                        "nameLocation": "6084:10:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1393,
                        "src": "6076:18:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1368,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6076:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6058:37:3"
                  },
                  "returnParameters": {
                    "id": 1373,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1372,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1393,
                        "src": "6120:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1371,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6120:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6119:6:3"
                  },
                  "scope": 1750,
                  "src": "6032:238:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1433,
                    "nodeType": "Block",
                    "src": "6872:337:3",
                    "statements": [
                      {
                        "assignments": [
                          1404
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1404,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "6891:5:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1433,
                            "src": "6883:13:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1403,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6883:7:3",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1407,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1405,
                            "name": "_msgSender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1154,
                            "src": "6899:10:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                              "typeString": "function () view returns (address)"
                            }
                          },
                          "id": 1406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6899:12:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6883:28:3"
                      },
                      {
                        "assignments": [
                          1409
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1409,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "6930:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1433,
                            "src": "6922:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1408,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "6922:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1414,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1411,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1404,
                              "src": "6959:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1412,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1396,
                              "src": "6966:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1410,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1306,
                            "src": "6949:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 1413,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6949:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6922:52:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1418,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1416,
                                "name": "currentAllowance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1409,
                                "src": "6993:16:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1417,
                                "name": "subtractedValue",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1398,
                                "src": "7013:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "6993:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77207a65726f",
                              "id": 1419,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7030:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                                "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                              },
                              "value": "ERC20: decreased allowance below zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f8b476f7d28209d77d4a4ac1fe36b9f8259aa1bb6bddfa6e89de7e51615cf8a8",
                                "typeString": "literal_string \"ERC20: decreased allowance below zero\""
                              }
                            ],
                            "id": 1415,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "6985:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1420,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6985:85:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1421,
                        "nodeType": "ExpressionStatement",
                        "src": "6985:85:3"
                      },
                      {
                        "id": 1430,
                        "nodeType": "UncheckedBlock",
                        "src": "7081:97:3",
                        "statements": [
                          {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1423,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1404,
                                  "src": "7115:5:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 1424,
                                  "name": "spender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1396,
                                  "src": "7122:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 1427,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "id": 1425,
                                    "name": "currentAllowance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1409,
                                    "src": "7131:16:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "-",
                                  "rightExpression": {
                                    "id": 1426,
                                    "name": "subtractedValue",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 1398,
                                    "src": "7150:15:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "7131:34:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 1422,
                                "name": "_approve",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1684,
                                "src": "7106:8:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                  "typeString": "function (address,address,uint256)"
                                }
                              },
                              "id": 1428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7106:60:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_tuple$__$",
                                "typeString": "tuple()"
                              }
                            },
                            "id": 1429,
                            "nodeType": "ExpressionStatement",
                            "src": "7106:60:3"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 1431,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "7197:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 1402,
                        "id": 1432,
                        "nodeType": "Return",
                        "src": "7190:11:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1394,
                    "nodeType": "StructuredDocumentation",
                    "src": "6278:489:3",
                    "text": " @dev Atomically decreases the allowance granted to `spender` by the caller.\n This is an alternative to {approve} that can be used as a mitigation for\n problems described in {IERC20-approve}.\n Emits an {Approval} event indicating the updated allowance.\n Requirements:\n - `spender` cannot be the zero address.\n - `spender` must have allowance for the caller of at least\n `subtractedValue`."
                  },
                  "functionSelector": "a457c2d7",
                  "id": 1434,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decreaseAllowance",
                  "nameLocation": "6782:17:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1399,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1396,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "6808:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1434,
                        "src": "6800:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1395,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6800:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1398,
                        "mutability": "mutable",
                        "name": "subtractedValue",
                        "nameLocation": "6825:15:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1434,
                        "src": "6817:23:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1397,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6817:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6799:42:3"
                  },
                  "returnParameters": {
                    "id": 1402,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1401,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1434,
                        "src": "6866:4:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1400,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "6866:4:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "6865:6:3"
                  },
                  "scope": 1750,
                  "src": "6773:436:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1510,
                    "nodeType": "Block",
                    "src": "7791:559:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1450,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1445,
                                "name": "from",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1437,
                                "src": "7810:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1448,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7826:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1447,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7818:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1446,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7818:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1449,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7818:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7810:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e736665722066726f6d20746865207a65726f2061646472657373",
                              "id": 1451,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7830:39:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                                "typeString": "literal_string \"ERC20: transfer from the zero address\""
                              },
                              "value": "ERC20: transfer from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_baecc556b46f4ed0f2b4cb599d60785ac8563dd2dc0a5bf12edea1c39e5e1fea",
                                "typeString": "literal_string \"ERC20: transfer from the zero address\""
                              }
                            ],
                            "id": 1444,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7802:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7802:68:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1453,
                        "nodeType": "ExpressionStatement",
                        "src": "7802:68:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1460,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1455,
                                "name": "to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1439,
                                "src": "7889:2:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1458,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "7903:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1457,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "7895:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1456,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "7895:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1459,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "7895:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "7889:16:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e7366657220746f20746865207a65726f2061646472657373",
                              "id": 1461,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7907:37:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                                "typeString": "literal_string \"ERC20: transfer to the zero address\""
                              },
                              "value": "ERC20: transfer to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_0557e210f7a69a685100a7e4e3d0a7024c546085cee28910fd17d0b081d9516f",
                                "typeString": "literal_string \"ERC20: transfer to the zero address\""
                              }
                            ],
                            "id": 1454,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7881:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7881:64:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1463,
                        "nodeType": "ExpressionStatement",
                        "src": "7881:64:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1465,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "7979:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1466,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "7985:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1467,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1441,
                              "src": "7989:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1464,
                            "name": "_beforeTokenTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "7958:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1468,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7958:38:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1469,
                        "nodeType": "ExpressionStatement",
                        "src": "7958:38:3"
                      },
                      {
                        "assignments": [
                          1471
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1471,
                            "mutability": "mutable",
                            "name": "fromBalance",
                            "nameLocation": "8017:11:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1510,
                            "src": "8009:19:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1470,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8009:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1475,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1472,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "8031:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1474,
                          "indexExpression": {
                            "id": 1473,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1437,
                            "src": "8041:4:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "8031:15:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8009:37:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1479,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1477,
                                "name": "fromBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1471,
                                "src": "8065:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1478,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1441,
                                "src": "8080:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8065:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a207472616e7366657220616d6f756e7420657863656564732062616c616e6365",
                              "id": 1480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8088:40:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                                "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                              },
                              "value": "ERC20: transfer amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4107e8a8b9e94bf8ff83080ddec1c0bffe897ebc2241b89d44f66b3d274088b6",
                                "typeString": "literal_string \"ERC20: transfer amount exceeds balance\""
                              }
                            ],
                            "id": 1476,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8057:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1481,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8057:72:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1482,
                        "nodeType": "ExpressionStatement",
                        "src": "8057:72:3"
                      },
                      {
                        "id": 1491,
                        "nodeType": "UncheckedBlock",
                        "src": "8140:75:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 1489,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 1483,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1180,
                                  "src": "8165:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1485,
                                "indexExpression": {
                                  "id": 1484,
                                  "name": "from",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1437,
                                  "src": "8175:4:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "8165:15:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1488,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1486,
                                  "name": "fromBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1471,
                                  "src": "8183:11:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1487,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1441,
                                  "src": "8197:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "8183:20:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "8165:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1490,
                            "nodeType": "ExpressionStatement",
                            "src": "8165:38:3"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 1496,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1492,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "8225:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1494,
                            "indexExpression": {
                              "id": 1493,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "8235:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8225:13:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1495,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1441,
                            "src": "8242:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8225:23:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1497,
                        "nodeType": "ExpressionStatement",
                        "src": "8225:23:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1499,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "8275:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1500,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "8281:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1501,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1441,
                              "src": "8285:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1498,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1762,
                            "src": "8266:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1502,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8266:26:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1503,
                        "nodeType": "EmitStatement",
                        "src": "8261:31:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1505,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1437,
                              "src": "8325:4:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1506,
                              "name": "to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1439,
                              "src": "8331:2:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1507,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1441,
                              "src": "8335:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1504,
                            "name": "_afterTokenTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1749,
                            "src": "8305:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8305:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1509,
                        "nodeType": "ExpressionStatement",
                        "src": "8305:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1435,
                    "nodeType": "StructuredDocumentation",
                    "src": "7217:456:3",
                    "text": " @dev Moves `amount` of tokens from `from` to `to`.\n This internal function is equivalent to {transfer}, and can be used to\n e.g. implement automatic token fees, slashing mechanisms, etc.\n Emits a {Transfer} event.\n Requirements:\n - `from` cannot be the zero address.\n - `to` cannot be the zero address.\n - `from` must have a balance of at least `amount`."
                  },
                  "id": 1511,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transfer",
                  "nameLocation": "7688:9:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1442,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1437,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "7716:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "7708:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1436,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7708:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1439,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "7739:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "7731:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1438,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "7731:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1441,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "7760:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1511,
                        "src": "7752:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1440,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "7752:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "7697:76:3"
                  },
                  "returnParameters": {
                    "id": 1443,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "7791:0:3"
                  },
                  "scope": 1750,
                  "src": "7679:671:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1566,
                    "nodeType": "Block",
                    "src": "8702:334:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1525,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1520,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1514,
                                "src": "8721:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1523,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "8740:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1522,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "8732:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1521,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "8732:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1524,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "8732:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "8721:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a206d696e7420746f20746865207a65726f2061646472657373",
                              "id": 1526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "8744:33:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                "typeString": "literal_string \"ERC20: mint to the zero address\""
                              },
                              "value": "ERC20: mint to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fc0b381caf0a47702017f3c4b358ebe3d3aff6c60ce819a8bf3ef5a95d4f202e",
                                "typeString": "literal_string \"ERC20: mint to the zero address\""
                              }
                            ],
                            "id": 1519,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "8713:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1527,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8713:65:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1528,
                        "nodeType": "ExpressionStatement",
                        "src": "8713:65:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1532,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8820:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1531,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8812:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1530,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8812:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8812:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1534,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1514,
                              "src": "8824:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1535,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1516,
                              "src": "8833:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1529,
                            "name": "_beforeTokenTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "8791:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8791:49:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1537,
                        "nodeType": "ExpressionStatement",
                        "src": "8791:49:3"
                      },
                      {
                        "expression": {
                          "id": 1540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1538,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1188,
                            "src": "8853:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1539,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1516,
                            "src": "8869:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8853:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1541,
                        "nodeType": "ExpressionStatement",
                        "src": "8853:22:3"
                      },
                      {
                        "expression": {
                          "id": 1546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 1542,
                              "name": "_balances",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1180,
                              "src": "8886:9:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1544,
                            "indexExpression": {
                              "id": 1543,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1514,
                              "src": "8896:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8886:18:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 1545,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1516,
                            "src": "8908:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8886:28:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1547,
                        "nodeType": "ExpressionStatement",
                        "src": "8886:28:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1551,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "8947:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1550,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "8939:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1549,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "8939:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1552,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8939:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1553,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1514,
                              "src": "8951:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1554,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1516,
                              "src": "8960:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1548,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1762,
                            "src": "8930:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1555,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8930:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1556,
                        "nodeType": "EmitStatement",
                        "src": "8925:42:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1560,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9008:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1559,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9000:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1558,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9000:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1561,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9000:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1562,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1514,
                              "src": "9012:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1563,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1516,
                              "src": "9021:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1557,
                            "name": "_afterTokenTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1749,
                            "src": "8980:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1564,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8980:48:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1565,
                        "nodeType": "ExpressionStatement",
                        "src": "8980:48:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1512,
                    "nodeType": "StructuredDocumentation",
                    "src": "8358:273:3",
                    "text": "@dev Creates `amount` tokens and assigns them to `account`, increasing\n the total supply.\n Emits a {Transfer} event with `from` set to the zero address.\n Requirements:\n - `account` cannot be the zero address."
                  },
                  "id": 1567,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_mint",
                  "nameLocation": "8646:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1517,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1514,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "8660:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1567,
                        "src": "8652:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1513,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "8652:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1516,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "8677:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1567,
                        "src": "8669:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1515,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "8669:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "8651:33:3"
                  },
                  "returnParameters": {
                    "id": 1518,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "8702:0:3"
                  },
                  "scope": 1750,
                  "src": "8637:399:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1638,
                    "nodeType": "Block",
                    "src": "9434:526:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1581,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1576,
                                "name": "account",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1570,
                                "src": "9453:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1579,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "9472:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1578,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "9464:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1577,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "9464:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1580,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "9464:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "9453:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a206275726e2066726f6d20746865207a65726f2061646472657373",
                              "id": 1582,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9476:35:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                                "typeString": "literal_string \"ERC20: burn from the zero address\""
                              },
                              "value": "ERC20: burn from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_b16788493b576042bb52c50ed56189e0b250db113c7bfb1c3897d25cf9632d7f",
                                "typeString": "literal_string \"ERC20: burn from the zero address\""
                              }
                            ],
                            "id": 1575,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9445:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9445:67:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1584,
                        "nodeType": "ExpressionStatement",
                        "src": "9445:67:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1586,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1570,
                              "src": "9546:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1589,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9563:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1588,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9555:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1587,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9555:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1590,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9555:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1591,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1572,
                              "src": "9567:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1585,
                            "name": "_beforeTokenTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1738,
                            "src": "9525:20:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9525:49:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1593,
                        "nodeType": "ExpressionStatement",
                        "src": "9525:49:3"
                      },
                      {
                        "assignments": [
                          1595
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1595,
                            "mutability": "mutable",
                            "name": "accountBalance",
                            "nameLocation": "9595:14:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1638,
                            "src": "9587:22:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1594,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "9587:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1599,
                        "initialValue": {
                          "baseExpression": {
                            "id": 1596,
                            "name": "_balances",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1180,
                            "src": "9612:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 1598,
                          "indexExpression": {
                            "id": 1597,
                            "name": "account",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1570,
                            "src": "9622:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "9612:18:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9587:43:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 1603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1601,
                                "name": "accountBalance",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1595,
                                "src": "9649:14:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">=",
                              "rightExpression": {
                                "id": 1602,
                                "name": "amount",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1572,
                                "src": "9667:6:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9649:24:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a206275726e20616d6f756e7420657863656564732062616c616e6365",
                              "id": 1604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "9675:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                                "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                              },
                              "value": "ERC20: burn amount exceeds balance"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_149b126e7125232b4200af45303d04fba8b74653b1a295a6a561a528c33fefdd",
                                "typeString": "literal_string \"ERC20: burn amount exceeds balance\""
                              }
                            ],
                            "id": 1600,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "9641:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9641:71:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1606,
                        "nodeType": "ExpressionStatement",
                        "src": "9641:71:3"
                      },
                      {
                        "id": 1615,
                        "nodeType": "UncheckedBlock",
                        "src": "9723:81:3",
                        "statements": [
                          {
                            "expression": {
                              "id": 1613,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "baseExpression": {
                                  "id": 1607,
                                  "name": "_balances",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1180,
                                  "src": "9748:9:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                    "typeString": "mapping(address => uint256)"
                                  }
                                },
                                "id": 1609,
                                "indexExpression": {
                                  "id": 1608,
                                  "name": "account",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1570,
                                  "src": "9758:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": true,
                                "nodeType": "IndexAccess",
                                "src": "9748:18:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "commonType": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                },
                                "id": 1612,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "id": 1610,
                                  "name": "accountBalance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1595,
                                  "src": "9769:14:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "-",
                                "rightExpression": {
                                  "id": 1611,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1572,
                                  "src": "9786:6:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "9769:23:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "9748:44:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 1614,
                            "nodeType": "ExpressionStatement",
                            "src": "9748:44:3"
                          }
                        ]
                      },
                      {
                        "expression": {
                          "id": 1618,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1616,
                            "name": "_totalSupply",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1188,
                            "src": "9814:12:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 1617,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1572,
                            "src": "9830:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "9814:22:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1619,
                        "nodeType": "ExpressionStatement",
                        "src": "9814:22:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1621,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1570,
                              "src": "9863:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1624,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9880:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1623,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9872:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1622,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9872:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1625,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9872:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1626,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1572,
                              "src": "9884:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1620,
                            "name": "Transfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1762,
                            "src": "9854:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1627,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9854:37:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1628,
                        "nodeType": "EmitStatement",
                        "src": "9849:42:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1630,
                              "name": "account",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1570,
                              "src": "9924:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1633,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "9941:1:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1632,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "9933:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1631,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "9933:7:3",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1634,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "9933:10:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1635,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1572,
                              "src": "9945:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1629,
                            "name": "_afterTokenTransfer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1749,
                            "src": "9904:19:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9904:48:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1637,
                        "nodeType": "ExpressionStatement",
                        "src": "9904:48:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1568,
                    "nodeType": "StructuredDocumentation",
                    "src": "9044:319:3",
                    "text": " @dev Destroys `amount` tokens from `account`, reducing the\n total supply.\n Emits a {Transfer} event with `to` set to the zero address.\n Requirements:\n - `account` cannot be the zero address.\n - `account` must have at least `amount` tokens."
                  },
                  "id": 1639,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_burn",
                  "nameLocation": "9378:5:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1573,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1570,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "9392:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1639,
                        "src": "9384:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1569,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "9384:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1572,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "9409:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1639,
                        "src": "9401:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1571,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9401:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "9383:33:3"
                  },
                  "returnParameters": {
                    "id": 1574,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "9434:0:3"
                  },
                  "scope": 1750,
                  "src": "9369:591:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1683,
                    "nodeType": "Block",
                    "src": "10515:263:3",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1655,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1650,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "10534:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1653,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10551:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1652,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10543:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1651,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10543:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1654,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10543:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10534:19:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20617070726f76652066726f6d20746865207a65726f2061646472657373",
                              "id": 1656,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10555:38:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                                "typeString": "literal_string \"ERC20: approve from the zero address\""
                              },
                              "value": "ERC20: approve from the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_c953f4879035ed60e766b34720f656aab5c697b141d924c283124ecedb91c208",
                                "typeString": "literal_string \"ERC20: approve from the zero address\""
                              }
                            ],
                            "id": 1649,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10526:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1657,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10526:68:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1658,
                        "nodeType": "ExpressionStatement",
                        "src": "10526:68:3"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1665,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1660,
                                "name": "spender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1644,
                                "src": "10613:7:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1663,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "10632:1:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1662,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "10624:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1661,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "10624:7:3",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1664,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10624:10:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "10613:21:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "45524332303a20617070726f766520746f20746865207a65726f2061646472657373",
                              "id": 1666,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10636:36:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                                "typeString": "literal_string \"ERC20: approve to the zero address\""
                              },
                              "value": "ERC20: approve to the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_24883cc5fe64ace9d0df1893501ecb93c77180f0ff69cca79affb3c316dc8029",
                                "typeString": "literal_string \"ERC20: approve to the zero address\""
                              }
                            ],
                            "id": 1659,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10605:7:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1667,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10605:68:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1668,
                        "nodeType": "ExpressionStatement",
                        "src": "10605:68:3"
                      },
                      {
                        "expression": {
                          "id": 1675,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 1669,
                                "name": "_allowances",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1186,
                                "src": "10686:11:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 1672,
                              "indexExpression": {
                                "id": 1670,
                                "name": "owner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1642,
                                "src": "10698:5:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10686:18:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 1673,
                            "indexExpression": {
                              "id": 1671,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "10705:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "10686:27:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1674,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1646,
                            "src": "10716:6:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "10686:36:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 1676,
                        "nodeType": "ExpressionStatement",
                        "src": "10686:36:3"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1678,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1642,
                              "src": "10747:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1679,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1644,
                              "src": "10754:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1680,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1646,
                              "src": "10763:6:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 1677,
                            "name": "Approval",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1771,
                            "src": "10738:8:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,address,uint256)"
                            }
                          },
                          "id": 1681,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10738:32:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1682,
                        "nodeType": "EmitStatement",
                        "src": "10733:37:3"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1640,
                    "nodeType": "StructuredDocumentation",
                    "src": "9968:424:3",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the `owner` s tokens.\n This internal function is equivalent to `approve`, and can be used to\n e.g. set automatic allowances for certain subsystems, etc.\n Emits an {Approval} event.\n Requirements:\n - `owner` cannot be the zero address.\n - `spender` cannot be the zero address."
                  },
                  "id": 1684,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_approve",
                  "nameLocation": "10407:8:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1647,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1642,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "10434:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1684,
                        "src": "10426:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1641,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10426:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1644,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "10458:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1684,
                        "src": "10450:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1643,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "10450:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1646,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "10484:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1684,
                        "src": "10476:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1645,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "10476:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "10415:82:3"
                  },
                  "returnParameters": {
                    "id": 1648,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "10515:0:3"
                  },
                  "scope": 1750,
                  "src": "10398:380:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1726,
                    "nodeType": "Block",
                    "src": "11193:329:3",
                    "statements": [
                      {
                        "assignments": [
                          1695
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1695,
                            "mutability": "mutable",
                            "name": "currentAllowance",
                            "nameLocation": "11212:16:3",
                            "nodeType": "VariableDeclaration",
                            "scope": 1726,
                            "src": "11204:24:3",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 1694,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "11204:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1700,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 1697,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1687,
                              "src": "11241:5:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1698,
                              "name": "spender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1689,
                              "src": "11248:7:3",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1696,
                            "name": "allowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1306,
                            "src": "11231:9:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_uint256_$",
                              "typeString": "function (address,address) view returns (uint256)"
                            }
                          },
                          "id": 1699,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11231:25:3",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11204:52:3"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 1707,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 1701,
                            "name": "currentAllowance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1695,
                            "src": "11271:16:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 1704,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "11296:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  },
                                  "typeName": {
                                    "id": 1703,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "11296:7:3",
                                    "typeDescriptions": {}
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_type$_t_uint256_$",
                                    "typeString": "type(uint256)"
                                  }
                                ],
                                "id": 1702,
                                "name": "type",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -27,
                                "src": "11291:4:3",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                  "typeString": "function () pure"
                                }
                              },
                              "id": 1705,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11291:13:3",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_meta_type_t_uint256",
                                "typeString": "type(uint256)"
                              }
                            },
                            "id": 1706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "max",
                            "nodeType": "MemberAccess",
                            "src": "11291:17:3",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "11271:37:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 1725,
                        "nodeType": "IfStatement",
                        "src": "11267:248:3",
                        "trueBody": {
                          "id": 1724,
                          "nodeType": "Block",
                          "src": "11310:205:3",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 1711,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 1709,
                                      "name": "currentAllowance",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1695,
                                      "src": "11333:16:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": ">=",
                                    "rightExpression": {
                                      "id": 1710,
                                      "name": "amount",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1691,
                                      "src": "11353:6:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "src": "11333:26:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "45524332303a20696e73756666696369656e7420616c6c6f77616e6365",
                                    "id": 1712,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "11361:31:3",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                      "typeString": "literal_string \"ERC20: insufficient allowance\""
                                    },
                                    "value": "ERC20: insufficient allowance"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_3b6607e091cba9325f958656d2b5e0622ab7dc0eac71a26ac788cb25bc19f4fe",
                                      "typeString": "literal_string \"ERC20: insufficient allowance\""
                                    }
                                  ],
                                  "id": 1708,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "11325:7:3",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 1713,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "11325:68:3",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 1714,
                              "nodeType": "ExpressionStatement",
                              "src": "11325:68:3"
                            },
                            {
                              "id": 1723,
                              "nodeType": "UncheckedBlock",
                              "src": "11408:96:3",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 1716,
                                        "name": "owner",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1687,
                                        "src": "11446:5:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "id": 1717,
                                        "name": "spender",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 1689,
                                        "src": "11453:7:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "commonType": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        "id": 1720,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "leftExpression": {
                                          "id": 1718,
                                          "name": "currentAllowance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1695,
                                          "src": "11462:16:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "nodeType": "BinaryOperation",
                                        "operator": "-",
                                        "rightExpression": {
                                          "id": 1719,
                                          "name": "amount",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 1691,
                                          "src": "11481:6:3",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "src": "11462:25:3",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      ],
                                      "id": 1715,
                                      "name": "_approve",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 1684,
                                      "src": "11437:8:3",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                        "typeString": "function (address,address,uint256)"
                                      }
                                    },
                                    "id": 1721,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "11437:51:3",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 1722,
                                  "nodeType": "ExpressionStatement",
                                  "src": "11437:51:3"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1685,
                    "nodeType": "StructuredDocumentation",
                    "src": "10786:277:3",
                    "text": " @dev Updates `owner` s allowance for `spender` based on spent `amount`.\n Does not update the allowance amount in case of infinite allowance.\n Revert if not enough allowance is available.\n Might emit an {Approval} event."
                  },
                  "id": 1727,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_spendAllowance",
                  "nameLocation": "11078:15:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1692,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1687,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "11112:5:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "11104:13:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1686,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11104:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1689,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "11136:7:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "11128:15:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1688,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "11128:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1691,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "11162:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1727,
                        "src": "11154:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1690,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11154:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "11093:82:3"
                  },
                  "returnParameters": {
                    "id": 1693,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "11193:0:3"
                  },
                  "scope": 1750,
                  "src": "11069:453:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1737,
                    "nodeType": "Block",
                    "src": "12245:2:3",
                    "statements": []
                  },
                  "documentation": {
                    "id": 1728,
                    "nodeType": "StructuredDocumentation",
                    "src": "11530:586:3",
                    "text": " @dev Hook that is called before any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n will be transferred to `to`.\n - when `from` is zero, `amount` tokens will be minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens will be burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
                  },
                  "id": 1738,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_beforeTokenTransfer",
                  "nameLocation": "12131:20:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1735,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1730,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "12170:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1738,
                        "src": "12162:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1729,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12162:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1732,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "12193:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1738,
                        "src": "12185:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1731,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12185:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1734,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "12214:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1738,
                        "src": "12206:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1733,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12206:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12151:76:3"
                  },
                  "returnParameters": {
                    "id": 1736,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12245:0:3"
                  },
                  "scope": 1750,
                  "src": "12122:125:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1748,
                    "nodeType": "Block",
                    "src": "12973:2:3",
                    "statements": []
                  },
                  "documentation": {
                    "id": 1739,
                    "nodeType": "StructuredDocumentation",
                    "src": "12255:590:3",
                    "text": " @dev Hook that is called after any transfer of tokens. This includes\n minting and burning.\n Calling conditions:\n - when `from` and `to` are both non-zero, `amount` of ``from``'s tokens\n has been transferred to `to`.\n - when `from` is zero, `amount` tokens have been minted for `to`.\n - when `to` is zero, `amount` of ``from``'s tokens have been burned.\n - `from` and `to` are never both zero.\n To learn more about hooks, head to xref:ROOT:extending-contracts.adoc#using-hooks[Using Hooks]."
                  },
                  "id": 1749,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_afterTokenTransfer",
                  "nameLocation": "12860:19:3",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1746,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1741,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "12898:4:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "12890:12:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1740,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12890:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1743,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "12921:2:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "12913:10:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1742,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "12913:7:3",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1745,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "12942:6:3",
                        "nodeType": "VariableDeclaration",
                        "scope": 1749,
                        "src": "12934:14:3",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1744,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "12934:7:3",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "12879:76:3"
                  },
                  "returnParameters": {
                    "id": 1747,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "12973:0:3"
                  },
                  "scope": 1750,
                  "src": "12851:124:3",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1751,
              "src": "1416:11562:3",
              "usedErrors": []
            }
          ],
          "src": "108:12872:3"
        },
        "id": 3
      },
      "contracts/deps/IERC20.sol": {
        "ast": {
          "absolutePath": "contracts/deps/IERC20.sol",
          "exportedSymbols": {
            "IERC20": [
              1828
            ]
          },
          "id": 1829,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1752,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "109:23:4"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1753,
                "nodeType": "StructuredDocumentation",
                "src": "136:72:4",
                "text": " @dev Interface of the ERC20 standard as defined in the EIP."
              },
              "fullyImplemented": false,
              "id": 1828,
              "linearizedBaseContracts": [
                1828
              ],
              "name": "IERC20",
              "nameLocation": "220:6:4",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1754,
                    "nodeType": "StructuredDocumentation",
                    "src": "234:163:4",
                    "text": " @dev Emitted when `value` tokens are moved from one account (`from`) to\n another (`to`).\n Note that `value` may be zero."
                  },
                  "id": 1762,
                  "name": "Transfer",
                  "nameLocation": "409:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1761,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1756,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "434:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1762,
                        "src": "418:20:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1755,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "418:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1758,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "456:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1762,
                        "src": "440:18:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1757,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "440:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1760,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "468:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1762,
                        "src": "460:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1759,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "460:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "417:57:4"
                  },
                  "src": "403:72:4"
                },
                {
                  "anonymous": false,
                  "documentation": {
                    "id": 1763,
                    "nodeType": "StructuredDocumentation",
                    "src": "483:151:4",
                    "text": " @dev Emitted when the allowance of a `spender` for an `owner` is set by\n a call to {approve}. `value` is the new allowance."
                  },
                  "id": 1771,
                  "name": "Approval",
                  "nameLocation": "646:8:4",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1770,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1765,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "671:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1771,
                        "src": "655:21:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1764,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "655:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1767,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "694:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1771,
                        "src": "678:23:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1766,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "678:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1769,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "711:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1771,
                        "src": "703:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1768,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "703:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "654:63:4"
                  },
                  "src": "640:78:4"
                },
                {
                  "documentation": {
                    "id": 1772,
                    "nodeType": "StructuredDocumentation",
                    "src": "726:68:4",
                    "text": " @dev Returns the amount of tokens in existence."
                  },
                  "functionSelector": "18160ddd",
                  "id": 1777,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "totalSupply",
                  "nameLocation": "809:11:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1773,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "820:2:4"
                  },
                  "returnParameters": {
                    "id": 1776,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1775,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1777,
                        "src": "846:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1774,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "846:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "845:9:4"
                  },
                  "scope": 1828,
                  "src": "800:55:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1778,
                    "nodeType": "StructuredDocumentation",
                    "src": "863:74:4",
                    "text": " @dev Returns the amount of tokens owned by `account`."
                  },
                  "functionSelector": "70a08231",
                  "id": 1785,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "balanceOf",
                  "nameLocation": "952:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1781,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1780,
                        "mutability": "mutable",
                        "name": "account",
                        "nameLocation": "970:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "962:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1779,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "962:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "961:17:4"
                  },
                  "returnParameters": {
                    "id": 1784,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1783,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1785,
                        "src": "1002:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1782,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1002:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1001:9:4"
                  },
                  "scope": 1828,
                  "src": "943:68:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1786,
                    "nodeType": "StructuredDocumentation",
                    "src": "1019:208:4",
                    "text": " @dev Moves `amount` tokens from the caller's account to `to`.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "a9059cbb",
                  "id": 1795,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transfer",
                  "nameLocation": "1242:8:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1791,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1788,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "1259:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "1251:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1787,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1251:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1790,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "1271:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "1263:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1789,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1263:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1250:28:4"
                  },
                  "returnParameters": {
                    "id": 1794,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1793,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1795,
                        "src": "1297:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1792,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "1297:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1296:6:4"
                  },
                  "scope": 1828,
                  "src": "1233:70:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1796,
                    "nodeType": "StructuredDocumentation",
                    "src": "1311:270:4",
                    "text": " @dev Returns the remaining number of tokens that `spender` will be\n allowed to spend on behalf of `owner` through {transferFrom}. This is\n zero by default.\n This value changes when {approve} or {transferFrom} are called."
                  },
                  "functionSelector": "dd62ed3e",
                  "id": 1805,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "allowance",
                  "nameLocation": "1596:9:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1801,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1798,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "1614:5:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1805,
                        "src": "1606:13:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1797,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1606:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1800,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "1629:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1805,
                        "src": "1621:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1799,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1621:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1605:32:4"
                  },
                  "returnParameters": {
                    "id": 1804,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1803,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1805,
                        "src": "1661:7:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1802,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1661:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1660:9:4"
                  },
                  "scope": 1828,
                  "src": "1587:83:4",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1806,
                    "nodeType": "StructuredDocumentation",
                    "src": "1678:655:4",
                    "text": " @dev Sets `amount` as the allowance of `spender` over the caller's tokens.\n Returns a boolean value indicating whether the operation succeeded.\n IMPORTANT: Beware that changing an allowance with this method brings the risk\n that someone may use both the old and the new allowance by unfortunate\n transaction ordering. One possible solution to mitigate this race\n condition is to first reduce the spender's allowance to 0 and set the\n desired value afterwards:\n https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729\n Emits an {Approval} event."
                  },
                  "functionSelector": "095ea7b3",
                  "id": 1815,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "approve",
                  "nameLocation": "2348:7:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1811,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1808,
                        "mutability": "mutable",
                        "name": "spender",
                        "nameLocation": "2364:7:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1815,
                        "src": "2356:15:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1807,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2356:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1810,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2381:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1815,
                        "src": "2373:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1809,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2373:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2355:33:4"
                  },
                  "returnParameters": {
                    "id": 1814,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1813,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1815,
                        "src": "2407:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1812,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2407:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2406:6:4"
                  },
                  "scope": 1828,
                  "src": "2339:74:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1816,
                    "nodeType": "StructuredDocumentation",
                    "src": "2421:295:4",
                    "text": " @dev Moves `amount` tokens from `from` to `to` using the\n allowance mechanism. `amount` is then deducted from the caller's\n allowance.\n Returns a boolean value indicating whether the operation succeeded.\n Emits a {Transfer} event."
                  },
                  "functionSelector": "23b872dd",
                  "id": 1827,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "transferFrom",
                  "nameLocation": "2731:12:4",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1823,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1818,
                        "mutability": "mutable",
                        "name": "from",
                        "nameLocation": "2762:4:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "2754:12:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1817,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2754:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1820,
                        "mutability": "mutable",
                        "name": "to",
                        "nameLocation": "2785:2:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "2777:10:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1819,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2777:7:4",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1822,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "2806:6:4",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "2798:14:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1821,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2798:7:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2743:76:4"
                  },
                  "returnParameters": {
                    "id": 1826,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1825,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1827,
                        "src": "2838:4:4",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 1824,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2838:4:4",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2837:6:4"
                  },
                  "scope": 1828,
                  "src": "2722:122:4",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1829,
              "src": "210:2637:4",
              "usedErrors": []
            }
          ],
          "src": "109:2740:4"
        },
        "id": 4
      },
      "contracts/deps/IERC20Metadata.sol": {
        "ast": {
          "absolutePath": "contracts/deps/IERC20Metadata.sol",
          "exportedSymbols": {
            "IERC20": [
              1828
            ],
            "IERC20Metadata": [
              1853
            ]
          },
          "id": 1854,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1830,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "113:23:5"
            },
            {
              "absolutePath": "contracts/deps/IERC20.sol",
              "file": "./IERC20.sol",
              "id": 1831,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1854,
              "sourceUnit": 1829,
              "src": "140:22:5",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1833,
                    "name": "IERC20",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1828,
                    "src": "316:6:5"
                  },
                  "id": 1834,
                  "nodeType": "InheritanceSpecifier",
                  "src": "316:6:5"
                }
              ],
              "contractDependencies": [],
              "contractKind": "interface",
              "documentation": {
                "id": 1832,
                "nodeType": "StructuredDocumentation",
                "src": "166:120:5",
                "text": " @dev Interface for the optional metadata functions from the ERC20 standard.\n _Available since v4.1._"
              },
              "fullyImplemented": false,
              "id": 1853,
              "linearizedBaseContracts": [
                1853,
                1828
              ],
              "name": "IERC20Metadata",
              "nameLocation": "298:14:5",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "documentation": {
                    "id": 1835,
                    "nodeType": "StructuredDocumentation",
                    "src": "330:56:5",
                    "text": " @dev Returns the name of the token."
                  },
                  "functionSelector": "06fdde03",
                  "id": 1840,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "name",
                  "nameLocation": "401:4:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1836,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "405:2:5"
                  },
                  "returnParameters": {
                    "id": 1839,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1838,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1840,
                        "src": "431:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1837,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "431:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "430:15:5"
                  },
                  "scope": 1853,
                  "src": "392:54:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1841,
                    "nodeType": "StructuredDocumentation",
                    "src": "454:58:5",
                    "text": " @dev Returns the symbol of the token."
                  },
                  "functionSelector": "95d89b41",
                  "id": 1846,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "symbol",
                  "nameLocation": "527:6:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1842,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "533:2:5"
                  },
                  "returnParameters": {
                    "id": 1845,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1844,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1846,
                        "src": "559:13:5",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 1843,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "559:6:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "558:15:5"
                  },
                  "scope": 1853,
                  "src": "518:56:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                },
                {
                  "documentation": {
                    "id": 1847,
                    "nodeType": "StructuredDocumentation",
                    "src": "582:67:5",
                    "text": " @dev Returns the decimals places of the token."
                  },
                  "functionSelector": "313ce567",
                  "id": 1852,
                  "implemented": false,
                  "kind": "function",
                  "modifiers": [],
                  "name": "decimals",
                  "nameLocation": "664:8:5",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1848,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "672:2:5"
                  },
                  "returnParameters": {
                    "id": 1851,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1850,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1852,
                        "src": "698:5:5",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        },
                        "typeName": {
                          "id": 1849,
                          "name": "uint8",
                          "nodeType": "ElementaryTypeName",
                          "src": "698:5:5",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint8",
                            "typeString": "uint8"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "697:7:5"
                  },
                  "scope": 1853,
                  "src": "655:50:5",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "external"
                }
              ],
              "scope": 1854,
              "src": "288:420:5",
              "usedErrors": []
            }
          ],
          "src": "113:597:5"
        },
        "id": 5
      },
      "contracts/deps/Ownable.sol": {
        "ast": {
          "absolutePath": "contracts/deps/Ownable.sol",
          "exportedSymbols": {
            "Context": [
              1164
            ],
            "Ownable": [
              1966
            ]
          },
          "id": 1967,
          "license": "MIT",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1855,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "105:23:6"
            },
            {
              "absolutePath": "contracts/deps/Context.sol",
              "file": "./Context.sol",
              "id": 1856,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 1967,
              "sourceUnit": 1165,
              "src": "132:23:6",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": true,
              "baseContracts": [
                {
                  "baseName": {
                    "id": 1858,
                    "name": "Context",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 1164,
                    "src": "695:7:6"
                  },
                  "id": 1859,
                  "nodeType": "InheritanceSpecifier",
                  "src": "695:7:6"
                }
              ],
              "contractDependencies": [],
              "contractKind": "contract",
              "documentation": {
                "id": 1857,
                "nodeType": "StructuredDocumentation",
                "src": "159:505:6",
                "text": " @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."
              },
              "fullyImplemented": true,
              "id": 1966,
              "linearizedBaseContracts": [
                1966,
                1164
              ],
              "name": "Ownable",
              "nameLocation": "684:7:6",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "constant": false,
                  "id": 1861,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "726:6:6",
                  "nodeType": "VariableDeclaration",
                  "scope": 1966,
                  "src": "710:22:6",
                  "stateVariable": true,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 1860,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "710:7:6",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "private"
                },
                {
                  "anonymous": false,
                  "id": 1867,
                  "name": "OwnershipTransferred",
                  "nameLocation": "747:20:6",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 1866,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1863,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "previousOwner",
                        "nameLocation": "784:13:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1867,
                        "src": "768:29:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1862,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "768:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 1865,
                        "indexed": true,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "815:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1867,
                        "src": "799:24:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1864,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "799:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "767:57:6"
                  },
                  "src": "741:84:6"
                },
                {
                  "body": {
                    "id": 1876,
                    "nodeType": "Block",
                    "src": "946:51:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [],
                              "expression": {
                                "argumentTypes": [],
                                "id": 1872,
                                "name": "_msgSender",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1154,
                                "src": "976:10:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                  "typeString": "function () view returns (address)"
                                }
                              },
                              "id": 1873,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "976:12:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1871,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1965,
                            "src": "957:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1874,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "957:32:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1875,
                        "nodeType": "ExpressionStatement",
                        "src": "957:32:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1868,
                    "nodeType": "StructuredDocumentation",
                    "src": "833:93:6",
                    "text": " @dev Initializes the contract setting the deployer as the initial owner."
                  },
                  "id": 1877,
                  "implemented": true,
                  "kind": "constructor",
                  "modifiers": [],
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1869,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "943:2:6"
                  },
                  "returnParameters": {
                    "id": 1870,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "946:0:6"
                  },
                  "scope": 1966,
                  "src": "932:65:6",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1884,
                    "nodeType": "Block",
                    "src": "1111:44:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 1880,
                            "name": "_checkOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1908,
                            "src": "1122:11:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$__$returns$__$",
                              "typeString": "function () view"
                            }
                          },
                          "id": 1881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1122:13:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1882,
                        "nodeType": "ExpressionStatement",
                        "src": "1122:13:6"
                      },
                      {
                        "id": 1883,
                        "nodeType": "PlaceholderStatement",
                        "src": "1146:1:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1878,
                    "nodeType": "StructuredDocumentation",
                    "src": "1005:79:6",
                    "text": " @dev Throws if called by any account other than the owner."
                  },
                  "id": 1885,
                  "name": "onlyOwner",
                  "nameLocation": "1099:9:6",
                  "nodeType": "ModifierDefinition",
                  "parameters": {
                    "id": 1879,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1108:2:6"
                  },
                  "src": "1090:65:6",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1893,
                    "nodeType": "Block",
                    "src": "1291:32:6",
                    "statements": [
                      {
                        "expression": {
                          "id": 1891,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1861,
                          "src": "1309:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "functionReturnParameters": 1890,
                        "id": 1892,
                        "nodeType": "Return",
                        "src": "1302:13:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1886,
                    "nodeType": "StructuredDocumentation",
                    "src": "1163:67:6",
                    "text": " @dev Returns the address of the current owner."
                  },
                  "functionSelector": "8da5cb5b",
                  "id": 1894,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "owner",
                  "nameLocation": "1245:5:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1887,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1250:2:6"
                  },
                  "returnParameters": {
                    "id": 1890,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1889,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 1894,
                        "src": "1282:7:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1888,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1282:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1281:9:6"
                  },
                  "scope": 1966,
                  "src": "1236:87:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1907,
                    "nodeType": "Block",
                    "src": "1446:87:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1903,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1899,
                                  "name": "owner",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1894,
                                  "src": "1465:5:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 1900,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1465:7:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "id": 1901,
                                  "name": "_msgSender",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 1154,
                                  "src": "1476:10:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                                    "typeString": "function () view returns (address)"
                                  }
                                },
                                "id": 1902,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1476:12:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "1465:23:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572",
                              "id": 1904,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1490:34:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              },
                              "value": "Ownable: caller is not the owner"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe",
                                "typeString": "literal_string \"Ownable: caller is not the owner\""
                              }
                            ],
                            "id": 1898,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1457:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1905,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1457:68:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1906,
                        "nodeType": "ExpressionStatement",
                        "src": "1457:68:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1895,
                    "nodeType": "StructuredDocumentation",
                    "src": "1331:64:6",
                    "text": " @dev Throws if the sender is not the owner."
                  },
                  "id": 1908,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_checkOwner",
                  "nameLocation": "1410:11:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1896,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1421:2:6"
                  },
                  "returnParameters": {
                    "id": 1897,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1446:0:6"
                  },
                  "scope": 1966,
                  "src": "1401:132:6",
                  "stateMutability": "view",
                  "virtual": true,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 1921,
                    "nodeType": "Block",
                    "src": "1938:49:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 1917,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "1976:1:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 1916,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1968:7:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 1915,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1968:7:6",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 1918,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1968:10:6",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1914,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1965,
                            "src": "1949:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1919,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1949:30:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1920,
                        "nodeType": "ExpressionStatement",
                        "src": "1949:30:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1909,
                    "nodeType": "StructuredDocumentation",
                    "src": "1541:337:6",
                    "text": " @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions anymore. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby removing any functionality that is only available to the owner."
                  },
                  "functionSelector": "715018a6",
                  "id": 1922,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1912,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1911,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "1928:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "1928:9:6"
                    }
                  ],
                  "name": "renounceOwnership",
                  "nameLocation": "1893:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1910,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1910:2:6"
                  },
                  "returnParameters": {
                    "id": 1913,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1938:0:6"
                  },
                  "scope": 1966,
                  "src": "1884:103:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1944,
                    "nodeType": "Block",
                    "src": "2212:131:6",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 1936,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 1931,
                                "name": "newOwner",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 1925,
                                "src": "2231:8:6",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 1934,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2251:1:6",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 1933,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "2243:7:6",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 1932,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "2243:7:6",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 1935,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2243:10:6",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "2231:22:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373",
                              "id": 1937,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2255:40:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              },
                              "value": "Ownable: new owner is the zero address"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe",
                                "typeString": "literal_string \"Ownable: new owner is the zero address\""
                              }
                            ],
                            "id": 1930,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "2223:7:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 1938,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2223:73:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1939,
                        "nodeType": "ExpressionStatement",
                        "src": "2223:73:6"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 1941,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1925,
                              "src": "2326:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1940,
                            "name": "_transferOwnership",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1965,
                            "src": "2307:18:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 1942,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2307:28:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1943,
                        "nodeType": "ExpressionStatement",
                        "src": "2307:28:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1923,
                    "nodeType": "StructuredDocumentation",
                    "src": "1995:141:6",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."
                  },
                  "functionSelector": "f2fde38b",
                  "id": 1945,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [
                    {
                      "id": 1928,
                      "kind": "modifierInvocation",
                      "modifierName": {
                        "id": 1927,
                        "name": "onlyOwner",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 1885,
                        "src": "2202:9:6"
                      },
                      "nodeType": "ModifierInvocation",
                      "src": "2202:9:6"
                    }
                  ],
                  "name": "transferOwnership",
                  "nameLocation": "2151:17:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1926,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1925,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2177:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1945,
                        "src": "2169:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1924,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2169:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2168:18:6"
                  },
                  "returnParameters": {
                    "id": 1929,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2212:0:6"
                  },
                  "scope": 1966,
                  "src": "2142:201:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "public"
                },
                {
                  "body": {
                    "id": 1964,
                    "nodeType": "Block",
                    "src": "2566:128:6",
                    "statements": [
                      {
                        "assignments": [
                          1952
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 1952,
                            "mutability": "mutable",
                            "name": "oldOwner",
                            "nameLocation": "2585:8:6",
                            "nodeType": "VariableDeclaration",
                            "scope": 1964,
                            "src": "2577:16:6",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 1951,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2577:7:6",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 1954,
                        "initialValue": {
                          "id": 1953,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 1861,
                          "src": "2596:6:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2577:25:6"
                      },
                      {
                        "expression": {
                          "id": 1957,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 1955,
                            "name": "_owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1861,
                            "src": "2613:6:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 1956,
                            "name": "newOwner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1948,
                            "src": "2622:8:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "2613:17:6",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 1958,
                        "nodeType": "ExpressionStatement",
                        "src": "2613:17:6"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 1960,
                              "name": "oldOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1952,
                              "src": "2667:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 1961,
                              "name": "newOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 1948,
                              "src": "2677:8:6",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 1959,
                            "name": "OwnershipTransferred",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 1867,
                            "src": "2646:20:6",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 1962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2646:40:6",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 1963,
                        "nodeType": "EmitStatement",
                        "src": "2641:45:6"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 1946,
                    "nodeType": "StructuredDocumentation",
                    "src": "2351:146:6",
                    "text": " @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."
                  },
                  "id": 1965,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_transferOwnership",
                  "nameLocation": "2512:18:6",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 1949,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 1948,
                        "mutability": "mutable",
                        "name": "newOwner",
                        "nameLocation": "2539:8:6",
                        "nodeType": "VariableDeclaration",
                        "scope": 1965,
                        "src": "2531:16:6",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 1947,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2531:7:6",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2530:18:6"
                  },
                  "returnParameters": {
                    "id": 1950,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2566:0:6"
                  },
                  "scope": 1966,
                  "src": "2503:191:6",
                  "stateMutability": "nonpayable",
                  "virtual": true,
                  "visibility": "internal"
                }
              ],
              "scope": 1967,
              "src": "666:2031:6",
              "usedErrors": []
            }
          ],
          "src": "105:2594:6"
        },
        "id": 6
      },
      "contracts/interfaces/Common.sol": {
        "ast": {
          "absolutePath": "contracts/interfaces/Common.sol",
          "exportedSymbols": {
            "Common": [
              2046
            ]
          },
          "id": 2047,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 1968,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:7"
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "interface",
              "fullyImplemented": true,
              "id": 2046,
              "linearizedBaseContracts": [
                2046
              ],
              "name": "Common",
              "nameLocation": "76:6:7",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "canonicalName": "Common.State",
                  "id": 1972,
                  "members": [
                    {
                      "id": 1969,
                      "name": "GENERATED",
                      "nameLocation": "101:9:7",
                      "nodeType": "EnumValue",
                      "src": "101:9:7"
                    },
                    {
                      "id": 1970,
                      "name": "COLLECTED",
                      "nameLocation": "112:9:7",
                      "nodeType": "EnumValue",
                      "src": "112:9:7"
                    },
                    {
                      "id": 1971,
                      "name": "RECYCLED",
                      "nameLocation": "123:8:7",
                      "nodeType": "EnumValue",
                      "src": "123:8:7"
                    }
                  ],
                  "name": "State",
                  "nameLocation": "93:5:7",
                  "nodeType": "EnumDefinition",
                  "src": "88:45:7"
                },
                {
                  "canonicalName": "Common.Category",
                  "id": 1978,
                  "members": [
                    {
                      "id": 1973,
                      "name": "COLLECTOR",
                      "nameLocation": "153:9:7",
                      "nodeType": "EnumValue",
                      "src": "153:9:7"
                    },
                    {
                      "id": 1974,
                      "name": "GENERATOR",
                      "nameLocation": "164:9:7",
                      "nodeType": "EnumValue",
                      "src": "164:9:7"
                    },
                    {
                      "id": 1975,
                      "name": "RECYCLER",
                      "nameLocation": "175:8:7",
                      "nodeType": "EnumValue",
                      "src": "175:8:7"
                    },
                    {
                      "id": 1976,
                      "name": "BINOWNER",
                      "nameLocation": "185:8:7",
                      "nodeType": "EnumValue",
                      "src": "185:8:7"
                    },
                    {
                      "id": 1977,
                      "name": "SOLD",
                      "nameLocation": "195:4:7",
                      "nodeType": "EnumValue",
                      "src": "195:4:7"
                    }
                  ],
                  "name": "Category",
                  "nameLocation": "142:8:7",
                  "nodeType": "EnumDefinition",
                  "src": "137:64:7"
                },
                {
                  "canonicalName": "Common.Share",
                  "id": 1982,
                  "members": [
                    {
                      "id": 1979,
                      "name": "COLLECTOR",
                      "nameLocation": "218:9:7",
                      "nodeType": "EnumValue",
                      "src": "218:9:7"
                    },
                    {
                      "id": 1980,
                      "name": "GENERATOR",
                      "nameLocation": "229:9:7",
                      "nodeType": "EnumValue",
                      "src": "229:9:7"
                    },
                    {
                      "id": 1981,
                      "name": "TEAM",
                      "nameLocation": "240:4:7",
                      "nodeType": "EnumValue",
                      "src": "240:4:7"
                    }
                  ],
                  "name": "Share",
                  "nameLocation": "210:5:7",
                  "nodeType": "EnumDefinition",
                  "src": "205:41:7"
                },
                {
                  "id": 1984,
                  "name": "UserAlreadyExist",
                  "nameLocation": "258:16:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1983,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "274:2:7"
                  },
                  "src": "252:25:7"
                },
                {
                  "id": 1986,
                  "name": "UserAlreadyNotExist",
                  "nameLocation": "287:19:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1985,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "306:2:7"
                  },
                  "src": "281:28:7"
                },
                {
                  "id": 1988,
                  "name": "InvalidBinID",
                  "nameLocation": "319:12:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1987,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "331:2:7"
                  },
                  "src": "313:21:7"
                },
                {
                  "id": 1990,
                  "name": "EmptyBin",
                  "nameLocation": "344:8:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1989,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "352:2:7"
                  },
                  "src": "338:17:7"
                },
                {
                  "id": 1992,
                  "name": "CannotDeleteBinInEngagedMode",
                  "nameLocation": "365:28:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1991,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "393:2:7"
                  },
                  "src": "359:37:7"
                },
                {
                  "id": 1994,
                  "name": "InvalidWasteId",
                  "nameLocation": "406:14:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1993,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "420:2:7"
                  },
                  "src": "400:23:7"
                },
                {
                  "id": 1996,
                  "name": "NothingToWithdraw",
                  "nameLocation": "433:17:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1995,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "450:2:7"
                  },
                  "src": "427:26:7"
                },
                {
                  "id": 1998,
                  "name": "MaxWasteTransportExceeded",
                  "nameLocation": "463:25:7",
                  "nodeType": "ErrorDefinition",
                  "parameters": {
                    "id": 1997,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "488:2:7"
                  },
                  "src": "457:34:7"
                },
                {
                  "anonymous": false,
                  "id": 2004,
                  "name": "RegisteredBin",
                  "nameLocation": "503:13:7",
                  "nodeType": "EventDefinition",
                  "parameters": {
                    "id": 2003,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2000,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "522:5:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2004,
                        "src": "517:10:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 1999,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "517:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2002,
                        "indexed": false,
                        "mutability": "mutable",
                        "name": "msgSender",
                        "nameLocation": "537:9:7",
                        "nodeType": "VariableDeclaration",
                        "scope": 2004,
                        "src": "529:17:7",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2001,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "529:7:7",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "516:31:7"
                  },
                  "src": "497:51:7"
                },
                {
                  "canonicalName": "Common.WasteData",
                  "id": 2016,
                  "members": [
                    {
                      "constant": false,
                      "id": 2006,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "586:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2016,
                      "src": "578:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 2005,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "578:7:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2008,
                      "mutability": "mutable",
                      "name": "collector",
                      "nameLocation": "606:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2016,
                      "src": "598:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2007,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "598:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2010,
                      "mutability": "mutable",
                      "name": "generator",
                      "nameLocation": "630:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2016,
                      "src": "622:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2009,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "622:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2012,
                      "mutability": "mutable",
                      "name": "recycler",
                      "nameLocation": "654:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2016,
                      "src": "646:16:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2011,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "646:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2015,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "675:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2016,
                      "src": "669:11:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_State_$1972",
                        "typeString": "enum Common.State"
                      },
                      "typeName": {
                        "id": 2014,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 2013,
                          "name": "State",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 1972,
                          "src": "669:5:7"
                        },
                        "referencedDeclaration": 1972,
                        "src": "669:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1972",
                          "typeString": "enum Common.State"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "WasteData",
                  "nameLocation": "561:9:7",
                  "nodeType": "StructDefinition",
                  "scope": 2046,
                  "src": "554:132:7",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Common.Profile",
                  "id": 2031,
                  "members": [
                    {
                      "constant": false,
                      "id": 2018,
                      "mutability": "mutable",
                      "name": "transactionTime",
                      "nameLocation": "721:15:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2031,
                      "src": "714:22:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 2017,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "714:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2020,
                      "mutability": "mutable",
                      "name": "wasteCount",
                      "nameLocation": "748:10:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2031,
                      "src": "743:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 2019,
                        "name": "uint",
                        "nodeType": "ElementaryTypeName",
                        "src": "743:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2022,
                      "mutability": "mutable",
                      "name": "approval",
                      "nameLocation": "770:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2031,
                      "src": "765:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2021,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "765:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2024,
                      "mutability": "mutable",
                      "name": "isRegistered",
                      "nameLocation": "790:12:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2031,
                      "src": "785:17:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 2023,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "785:4:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2028,
                      "mutability": "mutable",
                      "name": "purchased",
                      "nameLocation": "821:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2031,
                      "src": "809:21:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr",
                        "typeString": "struct Common.WasteData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2026,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2025,
                            "name": "WasteData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2016,
                            "src": "809:9:7"
                          },
                          "referencedDeclaration": 2016,
                          "src": "809:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                            "typeString": "struct Common.WasteData"
                          }
                        },
                        "id": 2027,
                        "nodeType": "ArrayTypeName",
                        "src": "809:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr",
                          "typeString": "struct Common.WasteData[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2030,
                      "mutability": "mutable",
                      "name": "metadata",
                      "nameLocation": "843:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2031,
                      "src": "837:14:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 2029,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "837:5:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Profile",
                  "nameLocation": "699:7:7",
                  "nodeType": "StructDefinition",
                  "scope": 2046,
                  "src": "692:165:7",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Common.BinData",
                  "id": 2038,
                  "members": [
                    {
                      "constant": false,
                      "id": 2035,
                      "mutability": "mutable",
                      "name": "bin",
                      "nameLocation": "897:3:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2038,
                      "src": "885:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr",
                        "typeString": "struct Common.WasteData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2033,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2032,
                            "name": "WasteData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2016,
                            "src": "885:9:7"
                          },
                          "referencedDeclaration": 2016,
                          "src": "885:9:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                            "typeString": "struct Common.WasteData"
                          }
                        },
                        "id": 2034,
                        "nodeType": "ArrayTypeName",
                        "src": "885:11:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr",
                          "typeString": "struct Common.WasteData[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2037,
                      "mutability": "mutable",
                      "name": "owner",
                      "nameLocation": "915:5:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2038,
                      "src": "907:13:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 2036,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "907:7:7",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "BinData",
                  "nameLocation": "870:7:7",
                  "nodeType": "StructDefinition",
                  "scope": 2046,
                  "src": "863:63:7",
                  "visibility": "public"
                },
                {
                  "canonicalName": "Common.Empty",
                  "id": 2045,
                  "members": [
                    {
                      "constant": false,
                      "id": 2041,
                      "mutability": "mutable",
                      "name": "wasteIds",
                      "nameLocation": "959:8:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2045,
                      "src": "952:15:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2039,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "952:4:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2040,
                        "nodeType": "ArrayTypeName",
                        "src": "952:6:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 2044,
                      "mutability": "mutable",
                      "name": "wastedata",
                      "nameLocation": "983:9:7",
                      "nodeType": "VariableDeclaration",
                      "scope": 2045,
                      "src": "974:18:7",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                        "typeString": "string[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 2042,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "974:6:7",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "id": 2043,
                        "nodeType": "ArrayTypeName",
                        "src": "974:8:7",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_string_storage_$dyn_storage_ptr",
                          "typeString": "string[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "name": "Empty",
                  "nameLocation": "939:5:7",
                  "nodeType": "StructDefinition",
                  "scope": 2046,
                  "src": "932:66:7",
                  "visibility": "public"
                }
              ],
              "scope": 2047,
              "src": "66:937:7",
              "usedErrors": [
                1984,
                1986,
                1988,
                1990,
                1992,
                1994,
                1996,
                1998
              ]
            }
          ],
          "src": "39:964:7"
        },
        "id": 7
      },
      "contracts/libraries/IBoolaLib.sol": {
        "ast": {
          "absolutePath": "contracts/libraries/IBoolaLib.sol",
          "exportedSymbols": {
            "Common": [
              2046
            ],
            "IBoolaLib": [
              2524
            ]
          },
          "id": 2525,
          "license": "GPL-3.0",
          "nodeType": "SourceUnit",
          "nodes": [
            {
              "id": 2048,
              "literals": [
                "solidity",
                "^",
                "0.8",
                ".0"
              ],
              "nodeType": "PragmaDirective",
              "src": "39:23:8"
            },
            {
              "absolutePath": "contracts/interfaces/Common.sol",
              "file": "../interfaces/Common.sol",
              "id": 2049,
              "nameLocation": "-1:-1:-1",
              "nodeType": "ImportDirective",
              "scope": 2525,
              "sourceUnit": 2047,
              "src": "66:34:8",
              "symbolAliases": [],
              "unitAlias": ""
            },
            {
              "abstract": false,
              "baseContracts": [],
              "contractDependencies": [],
              "contractKind": "library",
              "fullyImplemented": true,
              "id": 2524,
              "linearizedBaseContracts": [
                2524
              ],
              "name": "IBoolaLib",
              "nameLocation": "112:9:8",
              "nodeType": "ContractDefinition",
              "nodes": [
                {
                  "body": {
                    "id": 2126,
                    "nodeType": "Block",
                    "src": "482:335:8",
                    "statements": [
                      {
                        "assignments": [
                          2071
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2071,
                            "mutability": "mutable",
                            "name": "_c",
                            "nameLocation": "507:2:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2126,
                            "src": "491:18:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Category_$1978",
                              "typeString": "enum Common.Category"
                            },
                            "typeName": {
                              "id": 2070,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2069,
                                "name": "Common.Category",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 1978,
                                "src": "491:15:8"
                              },
                              "referencedDeclaration": 1978,
                              "src": "491:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Category_$1978",
                                "typeString": "enum Common.Category"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2075,
                        "initialValue": {
                          "expression": {
                            "expression": {
                              "id": 2072,
                              "name": "Common",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2046,
                              "src": "512:6:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                "typeString": "type(contract Common)"
                              }
                            },
                            "id": 2073,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "Category",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 1978,
                            "src": "512:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_Category_$1978_$",
                              "typeString": "type(enum Common.Category)"
                            }
                          },
                          "id": 2074,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "COLLECTOR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 1973,
                          "src": "512:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1978",
                            "typeString": "enum Common.Category"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "491:46:8"
                      },
                      {
                        "expression": {
                          "id": 2084,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2076,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2058,
                                  "src": "546:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                    "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                  }
                                },
                                "id": 2079,
                                "indexExpression": {
                                  "id": 2077,
                                  "name": "_c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2071,
                                  "src": "551:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Category_$1978",
                                    "typeString": "enum Common.Category"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "546:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                  "typeString": "mapping(address => struct Common.Profile storage ref)"
                                }
                              },
                              "id": 2080,
                              "indexExpression": {
                                "id": 2078,
                                "name": "newCollector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2060,
                                "src": "555:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "546:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                "typeString": "struct Common.Profile storage ref"
                              }
                            },
                            "id": 2081,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "transactionTime",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2018,
                            "src": "546:38:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 2082,
                              "name": "_now",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2523,
                              "src": "587:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint32_$",
                                "typeString": "function () view returns (uint32)"
                              }
                            },
                            "id": 2083,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "587:6:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          "src": "546:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "id": 2085,
                        "nodeType": "ExpressionStatement",
                        "src": "546:47:8"
                      },
                      {
                        "expression": {
                          "id": 2093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2086,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2058,
                                  "src": "602:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                    "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                  }
                                },
                                "id": 2089,
                                "indexExpression": {
                                  "id": 2087,
                                  "name": "_c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2071,
                                  "src": "607:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Category_$1978",
                                    "typeString": "enum Common.Category"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "602:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                  "typeString": "mapping(address => struct Common.Profile storage ref)"
                                }
                              },
                              "id": 2090,
                              "indexExpression": {
                                "id": 2088,
                                "name": "newCollector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2060,
                                "src": "611:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "602:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                "typeString": "struct Common.Profile storage ref"
                              }
                            },
                            "id": 2091,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "wasteCount",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2020,
                            "src": "602:33:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "30",
                            "id": 2092,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "638:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "602:37:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2094,
                        "nodeType": "ExpressionStatement",
                        "src": "602:37:8"
                      },
                      {
                        "expression": {
                          "id": 2102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2095,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2058,
                                  "src": "648:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                    "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                  }
                                },
                                "id": 2098,
                                "indexExpression": {
                                  "id": 2096,
                                  "name": "_c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2071,
                                  "src": "653:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Category_$1978",
                                    "typeString": "enum Common.Category"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "648:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                  "typeString": "mapping(address => struct Common.Profile storage ref)"
                                }
                              },
                              "id": 2099,
                              "indexExpression": {
                                "id": 2097,
                                "name": "newCollector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2060,
                                "src": "657:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "648:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                "typeString": "struct Common.Profile storage ref"
                              }
                            },
                            "id": 2100,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "approval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2022,
                            "src": "648:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "66616c7365",
                            "id": 2101,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "682:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "648:39:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2103,
                        "nodeType": "ExpressionStatement",
                        "src": "648:39:8"
                      },
                      {
                        "expression": {
                          "id": 2111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2104,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2058,
                                  "src": "696:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                    "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                  }
                                },
                                "id": 2107,
                                "indexExpression": {
                                  "id": 2105,
                                  "name": "_c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2071,
                                  "src": "701:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Category_$1978",
                                    "typeString": "enum Common.Category"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "696:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                  "typeString": "mapping(address => struct Common.Profile storage ref)"
                                }
                              },
                              "id": 2108,
                              "indexExpression": {
                                "id": 2106,
                                "name": "newCollector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2060,
                                "src": "705:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "696:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                "typeString": "struct Common.Profile storage ref"
                              }
                            },
                            "id": 2109,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "isRegistered",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2024,
                            "src": "696:35:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 2110,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "734:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "696:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2112,
                        "nodeType": "ExpressionStatement",
                        "src": "696:42:8"
                      },
                      {
                        "expression": {
                          "id": 2124,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 2113,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2058,
                                  "src": "747:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                    "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                  }
                                },
                                "id": 2116,
                                "indexExpression": {
                                  "id": 2114,
                                  "name": "_c",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2071,
                                  "src": "752:2:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_Category_$1978",
                                    "typeString": "enum Common.Category"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "747:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                  "typeString": "mapping(address => struct Common.Profile storage ref)"
                                }
                              },
                              "id": 2117,
                              "indexExpression": {
                                "id": 2115,
                                "name": "newCollector",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2060,
                                "src": "756:12:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "747:22:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                "typeString": "struct Common.Profile storage ref"
                              }
                            },
                            "id": 2118,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "metadata",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2030,
                            "src": "747:31:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 2121,
                                "name": "location",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2062,
                                "src": "792:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              {
                                "id": 2122,
                                "name": "_address",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2064,
                                "src": "802:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                },
                                {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              ],
                              "expression": {
                                "id": 2119,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "781:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 2120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "781:10:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 2123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "781:30:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "747:64:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_storage",
                            "typeString": "bytes storage ref"
                          }
                        },
                        "id": 2125,
                        "nodeType": "ExpressionStatement",
                        "src": "747:64:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2050,
                    "nodeType": "StructuredDocumentation",
                    "src": "127:133:8",
                    "text": "@dev Sign up new collector\n@param self - Storage\n@param newCollector - Address of new Collector to add."
                  },
                  "id": 2127,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerCollector",
                  "nameLocation": "275:17:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2065,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2058,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "367:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2127,
                        "src": "299:72:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                          "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile))"
                        },
                        "typeName": {
                          "id": 2057,
                          "keyType": {
                            "id": 2052,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2051,
                              "name": "Common.Category",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1978,
                              "src": "308:15:8"
                            },
                            "referencedDeclaration": 1978,
                            "src": "308:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Category_$1978",
                              "typeString": "enum Common.Category"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "299:59:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                            "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile))"
                          },
                          "valueType": {
                            "id": 2056,
                            "keyType": {
                              "id": 2053,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "333:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Mapping",
                            "src": "325:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                              "typeString": "mapping(address => struct Common.Profile)"
                            },
                            "valueType": {
                              "id": 2055,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2054,
                                "name": "Common.Profile",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2031,
                                "src": "342:14:8"
                              },
                              "referencedDeclaration": 2031,
                              "src": "342:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage_ptr",
                                "typeString": "struct Common.Profile"
                              }
                            }
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2060,
                        "mutability": "mutable",
                        "name": "newCollector",
                        "nameLocation": "389:12:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2127,
                        "src": "381:20:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2059,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "381:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2062,
                        "mutability": "mutable",
                        "name": "location",
                        "nameLocation": "425:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2127,
                        "src": "411:22:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2061,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "411:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2064,
                        "mutability": "mutable",
                        "name": "_address",
                        "nameLocation": "457:8:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2127,
                        "src": "443:22:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string"
                        },
                        "typeName": {
                          "id": 2063,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "443:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_storage_ptr",
                            "typeString": "string"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "292:180:8"
                  },
                  "returnParameters": {
                    "id": 2066,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "482:0:8"
                  },
                  "scope": 2524,
                  "src": "266:551:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2162,
                    "nodeType": "Block",
                    "src": "1098:185:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2150,
                                    "name": "inWaste",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2138,
                                    "src": "1149:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 2151,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2006,
                                  "src": "1149:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2152,
                                    "name": "inWaste",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2138,
                                    "src": "1173:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 2153,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "collector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2008,
                                  "src": "1173:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2154,
                                    "name": "inWaste",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2138,
                                    "src": "1201:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 2155,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "generator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2010,
                                  "src": "1201:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2156,
                                    "name": "inWaste",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2138,
                                    "src": "1229:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 2157,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "recycler",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2012,
                                  "src": "1229:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2158,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2141,
                                  "src": "1256:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$1972",
                                    "typeString": "enum Common.State"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_State_$1972",
                                    "typeString": "enum Common.State"
                                  }
                                ],
                                "expression": {
                                  "id": 2148,
                                  "name": "Common",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2046,
                                  "src": "1122:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                    "typeString": "type(contract Common)"
                                  }
                                },
                                "id": 2149,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "WasteData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2016,
                                "src": "1122:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_WasteData_$2016_storage_ptr_$",
                                  "typeString": "type(struct Common.WasteData storage pointer)"
                                }
                              },
                              "id": 2159,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1122:148:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 2144,
                                "name": "self",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2135,
                                "src": "1105:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                  "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                                }
                              },
                              "id": 2146,
                              "indexExpression": {
                                "id": 2145,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2141,
                                "src": "1110:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$1972",
                                  "typeString": "enum Common.State"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1105:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                "typeString": "struct Common.WasteData storage ref[] storage ref"
                              }
                            },
                            "id": 2147,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1105:16:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr_$_t_struct$_WasteData_$2016_storage_$returns$__$bound_to$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Common.WasteData storage ref[] storage pointer,struct Common.WasteData storage ref)"
                            }
                          },
                          "id": 2160,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1105:172:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2161,
                        "nodeType": "ExpressionStatement",
                        "src": "1105:172:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2128,
                    "nodeType": "StructuredDocumentation",
                    "src": "823:112:8",
                    "text": "@dev Dual function: \no Recycles collected waste.\no Generate new waste."
                  },
                  "id": 2163,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "portToMap",
                  "nameLocation": "948:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2142,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2135,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "1015:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2163,
                        "src": "964:55:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                          "typeString": "mapping(enum Common.State => struct Common.WasteData[])"
                        },
                        "typeName": {
                          "id": 2134,
                          "keyType": {
                            "id": 2130,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2129,
                              "name": "Common.State",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1972,
                              "src": "973:12:8"
                            },
                            "referencedDeclaration": 1972,
                            "src": "973:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1972",
                              "typeString": "enum Common.State"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "964:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                            "typeString": "mapping(enum Common.State => struct Common.WasteData[])"
                          },
                          "valueType": {
                            "baseType": {
                              "id": 2132,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2131,
                                "name": "Common.WasteData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2016,
                                "src": "987:16:8"
                              },
                              "referencedDeclaration": 2016,
                              "src": "987:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                                "typeString": "struct Common.WasteData"
                              }
                            },
                            "id": 2133,
                            "nodeType": "ArrayTypeName",
                            "src": "987:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr",
                              "typeString": "struct Common.WasteData[]"
                            }
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2138,
                        "mutability": "mutable",
                        "name": "inWaste",
                        "nameLocation": "1051:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2163,
                        "src": "1027:31:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                          "typeString": "struct Common.WasteData"
                        },
                        "typeName": {
                          "id": 2137,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2136,
                            "name": "Common.WasteData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2016,
                            "src": "1027:16:8"
                          },
                          "referencedDeclaration": 2016,
                          "src": "1027:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                            "typeString": "struct Common.WasteData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2141,
                        "mutability": "mutable",
                        "name": "state",
                        "nameLocation": "1078:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2163,
                        "src": "1065:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1972",
                          "typeString": "enum Common.State"
                        },
                        "typeName": {
                          "id": 2140,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2139,
                            "name": "Common.State",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1972,
                            "src": "1065:12:8"
                          },
                          "referencedDeclaration": 1972,
                          "src": "1065:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "957:131:8"
                  },
                  "returnParameters": {
                    "id": 2143,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1098:0:8"
                  },
                  "scope": 2524,
                  "src": "939:344:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2198,
                    "nodeType": "Block",
                    "src": "1445:177:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 2186,
                                    "name": "inWaste",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2173,
                                    "src": "1498:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 2187,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "value",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2006,
                                  "src": "1498:13:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2188,
                                    "name": "inWaste",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2173,
                                    "src": "1520:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 2189,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "collector",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2008,
                                  "src": "1520:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2190,
                                    "name": "inWaste",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2173,
                                    "src": "1546:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 2191,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "generator",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2010,
                                  "src": "1546:17:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 2192,
                                    "name": "inWaste",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2173,
                                    "src": "1572:7:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 2193,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "recycler",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2012,
                                  "src": "1572:16:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 2194,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2176,
                                  "src": "1597:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$1972",
                                    "typeString": "enum Common.State"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_enum$_State_$1972",
                                    "typeString": "enum Common.State"
                                  }
                                ],
                                "expression": {
                                  "id": 2184,
                                  "name": "Common",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2046,
                                  "src": "1473:6:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                    "typeString": "type(contract Common)"
                                  }
                                },
                                "id": 2185,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "WasteData",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 2016,
                                "src": "1473:16:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_struct$_WasteData_$2016_storage_ptr_$",
                                  "typeString": "type(struct Common.WasteData storage pointer)"
                                }
                              },
                              "id": 2195,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "structConstructorCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1473:136:8",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                "typeString": "struct Common.WasteData memory"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2179,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2168,
                                  "src": "1452:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                                    "typeString": "struct Common.BinData storage ref[] storage pointer"
                                  }
                                },
                                "id": 2181,
                                "indexExpression": {
                                  "id": 2180,
                                  "name": "binId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2170,
                                  "src": "1457:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1452:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BinData_$2038_storage",
                                  "typeString": "struct Common.BinData storage ref"
                                }
                              },
                              "id": 2182,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2035,
                              "src": "1452:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                "typeString": "struct Common.WasteData storage ref[] storage ref"
                              }
                            },
                            "id": 2183,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "1452:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr_$_t_struct$_WasteData_$2016_storage_$returns$__$bound_to$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Common.WasteData storage ref[] storage pointer,struct Common.WasteData storage ref)"
                            }
                          },
                          "id": 2196,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1452:164:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2197,
                        "nodeType": "ExpressionStatement",
                        "src": "1452:164:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2164,
                    "nodeType": "StructuredDocumentation",
                    "src": "1289:26:8",
                    "text": "@dev Moves waste to bin"
                  },
                  "id": 2199,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "portToArray",
                  "nameLocation": "1328:11:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2177,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2168,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "1365:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2199,
                        "src": "1340:29:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                          "typeString": "struct Common.BinData[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2166,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2165,
                              "name": "Common.BinData",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2038,
                              "src": "1340:14:8"
                            },
                            "referencedDeclaration": 2038,
                            "src": "1340:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BinData_$2038_storage_ptr",
                              "typeString": "struct Common.BinData"
                            }
                          },
                          "id": 2167,
                          "nodeType": "ArrayTypeName",
                          "src": "1340:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                            "typeString": "struct Common.BinData[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2170,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "1376:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2199,
                        "src": "1371:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2169,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1371:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2173,
                        "mutability": "mutable",
                        "name": "inWaste",
                        "nameLocation": "1407:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2199,
                        "src": "1383:31:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                          "typeString": "struct Common.WasteData"
                        },
                        "typeName": {
                          "id": 2172,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2171,
                            "name": "Common.WasteData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2016,
                            "src": "1383:16:8"
                          },
                          "referencedDeclaration": 2016,
                          "src": "1383:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                            "typeString": "struct Common.WasteData"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2176,
                        "mutability": "mutable",
                        "name": "state",
                        "nameLocation": "1429:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2199,
                        "src": "1416:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1972",
                          "typeString": "enum Common.State"
                        },
                        "typeName": {
                          "id": 2175,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2174,
                            "name": "Common.State",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1972,
                            "src": "1416:12:8"
                          },
                          "referencedDeclaration": 1972,
                          "src": "1416:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1339:96:8"
                  },
                  "returnParameters": {
                    "id": 2178,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "1445:0:8"
                  },
                  "scope": 2524,
                  "src": "1319:303:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2233,
                    "nodeType": "Block",
                    "src": "1881:76:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 2224,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2218,
                            "name": "_waste",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2216,
                            "src": "1888:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                              "typeString": "struct Common.WasteData memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2219,
                                "name": "self",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2207,
                                "src": "1897:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                  "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                                }
                              },
                              "id": 2221,
                              "indexExpression": {
                                "id": 2220,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2212,
                                "src": "1902:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$1972",
                                  "typeString": "enum Common.State"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1897:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                "typeString": "struct Common.WasteData storage ref[] storage ref"
                              }
                            },
                            "id": 2223,
                            "indexExpression": {
                              "id": 2222,
                              "name": "wasteId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2209,
                              "src": "1909:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "1897:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WasteData_$2016_storage",
                              "typeString": "struct Common.WasteData storage ref"
                            }
                          },
                          "src": "1888:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                            "typeString": "struct Common.WasteData memory"
                          }
                        },
                        "id": 2225,
                        "nodeType": "ExpressionStatement",
                        "src": "1888:29:8"
                      },
                      {
                        "expression": {
                          "id": 2231,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "1924:27:8",
                          "subExpression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2226,
                                "name": "self",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2207,
                                "src": "1931:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                                  "typeString": "mapping(enum Common.State => struct Common.WasteData storage ref[] storage ref)"
                                }
                              },
                              "id": 2228,
                              "indexExpression": {
                                "id": 2227,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2212,
                                "src": "1936:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_State_$1972",
                                  "typeString": "enum Common.State"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "1931:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                "typeString": "struct Common.WasteData storage ref[] storage ref"
                              }
                            },
                            "id": 2230,
                            "indexExpression": {
                              "id": 2229,
                              "name": "wasteId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2209,
                              "src": "1943:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "1931:20:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WasteData_$2016_storage",
                              "typeString": "struct Common.WasteData storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2232,
                        "nodeType": "ExpressionStatement",
                        "src": "1924:27:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2200,
                    "nodeType": "StructuredDocumentation",
                    "src": "1628:85:8",
                    "text": "@dev Removes waste at 'wasteId' from bin at 'binId' in bin array at hashmap 'self'"
                  },
                  "id": 2234,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "popFromMapping",
                  "nameLocation": "1726:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2213,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2207,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "1792:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2234,
                        "src": "1741:55:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                          "typeString": "mapping(enum Common.State => struct Common.WasteData[])"
                        },
                        "typeName": {
                          "id": 2206,
                          "keyType": {
                            "id": 2202,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2201,
                              "name": "Common.State",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1972,
                              "src": "1750:12:8"
                            },
                            "referencedDeclaration": 1972,
                            "src": "1750:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_State_$1972",
                              "typeString": "enum Common.State"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "1741:42:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_State_$1972_$_t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_$",
                            "typeString": "mapping(enum Common.State => struct Common.WasteData[])"
                          },
                          "valueType": {
                            "baseType": {
                              "id": 2204,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2203,
                                "name": "Common.WasteData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2016,
                                "src": "1764:16:8"
                              },
                              "referencedDeclaration": 2016,
                              "src": "1764:16:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                                "typeString": "struct Common.WasteData"
                              }
                            },
                            "id": 2205,
                            "nodeType": "ArrayTypeName",
                            "src": "1764:18:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage_ptr",
                              "typeString": "struct Common.WasteData[]"
                            }
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2209,
                        "mutability": "mutable",
                        "name": "wasteId",
                        "nameLocation": "1803:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2234,
                        "src": "1798:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2208,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "1798:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2212,
                        "mutability": "mutable",
                        "name": "state",
                        "nameLocation": "1825:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2234,
                        "src": "1812:18:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_State_$1972",
                          "typeString": "enum Common.State"
                        },
                        "typeName": {
                          "id": 2211,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2210,
                            "name": "Common.State",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1972,
                            "src": "1812:12:8"
                          },
                          "referencedDeclaration": 1972,
                          "src": "1812:12:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_State_$1972",
                            "typeString": "enum Common.State"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1740:91:8"
                  },
                  "returnParameters": {
                    "id": 2217,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2216,
                        "mutability": "mutable",
                        "name": "_waste",
                        "nameLocation": "1873:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2234,
                        "src": "1849:30:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                          "typeString": "struct Common.WasteData"
                        },
                        "typeName": {
                          "id": 2215,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2214,
                            "name": "Common.WasteData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2016,
                            "src": "1849:16:8"
                          },
                          "referencedDeclaration": 2016,
                          "src": "1849:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                            "typeString": "struct Common.WasteData"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "1848:32:8"
                  },
                  "scope": 2524,
                  "src": "1717:240:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2266,
                    "nodeType": "Block",
                    "src": "2169:84:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 2256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2249,
                            "name": "_waste",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2247,
                            "src": "2176:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                              "typeString": "struct Common.WasteData memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2250,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2239,
                                  "src": "2185:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                                    "typeString": "struct Common.BinData storage ref[] storage pointer"
                                  }
                                },
                                "id": 2252,
                                "indexExpression": {
                                  "id": 2251,
                                  "name": "binId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2241,
                                  "src": "2190:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2185:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BinData_$2038_storage",
                                  "typeString": "struct Common.BinData storage ref"
                                }
                              },
                              "id": 2253,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2035,
                              "src": "2185:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                "typeString": "struct Common.WasteData storage ref[] storage ref"
                              }
                            },
                            "id": 2255,
                            "indexExpression": {
                              "id": 2254,
                              "name": "wasteId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2243,
                              "src": "2201:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2185:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WasteData_$2016_storage",
                              "typeString": "struct Common.WasteData storage ref"
                            }
                          },
                          "src": "2176:33:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                            "typeString": "struct Common.WasteData memory"
                          }
                        },
                        "id": 2257,
                        "nodeType": "ExpressionStatement",
                        "src": "2176:33:8"
                      },
                      {
                        "expression": {
                          "id": 2264,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "2216:31:8",
                          "subExpression": {
                            "baseExpression": {
                              "expression": {
                                "baseExpression": {
                                  "id": 2258,
                                  "name": "self",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2239,
                                  "src": "2223:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                                    "typeString": "struct Common.BinData storage ref[] storage pointer"
                                  }
                                },
                                "id": 2260,
                                "indexExpression": {
                                  "id": 2259,
                                  "name": "binId",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2241,
                                  "src": "2228:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2223:11:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BinData_$2038_storage",
                                  "typeString": "struct Common.BinData storage ref"
                                }
                              },
                              "id": 2261,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2035,
                              "src": "2223:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_storage_$dyn_storage",
                                "typeString": "struct Common.WasteData storage ref[] storage ref"
                              }
                            },
                            "id": 2263,
                            "indexExpression": {
                              "id": 2262,
                              "name": "wasteId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2243,
                              "src": "2239:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2223:24:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WasteData_$2016_storage",
                              "typeString": "struct Common.WasteData storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2265,
                        "nodeType": "ExpressionStatement",
                        "src": "2216:31:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2235,
                    "nodeType": "StructuredDocumentation",
                    "src": "1963:74:8",
                    "text": "@dev Removes waste at 'wasteId' from bin at 'binId' in bin array 'self'"
                  },
                  "id": 2267,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "popFromArray",
                  "nameLocation": "2050:12:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2244,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2239,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "2088:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "2063:29:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                          "typeString": "struct Common.BinData[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2237,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2236,
                              "name": "Common.BinData",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2038,
                              "src": "2063:14:8"
                            },
                            "referencedDeclaration": 2038,
                            "src": "2063:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BinData_$2038_storage_ptr",
                              "typeString": "struct Common.BinData"
                            }
                          },
                          "id": 2238,
                          "nodeType": "ArrayTypeName",
                          "src": "2063:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                            "typeString": "struct Common.BinData[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2241,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "2099:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "2094:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2240,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2094:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2243,
                        "mutability": "mutable",
                        "name": "wasteId",
                        "nameLocation": "2111:7:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "2106:12:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2242,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "2106:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2062:57:8"
                  },
                  "returnParameters": {
                    "id": 2248,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2247,
                        "mutability": "mutable",
                        "name": "_waste",
                        "nameLocation": "2161:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2267,
                        "src": "2137:30:8",
                        "stateVariable": false,
                        "storageLocation": "memory",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                          "typeString": "struct Common.WasteData"
                        },
                        "typeName": {
                          "id": 2246,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2245,
                            "name": "Common.WasteData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 2016,
                            "src": "2137:16:8"
                          },
                          "referencedDeclaration": 2016,
                          "src": "2137:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WasteData_$2016_storage_ptr",
                            "typeString": "struct Common.WasteData"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2136:32:8"
                  },
                  "scope": 2524,
                  "src": "2041:212:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2331,
                    "nodeType": "Block",
                    "src": "2669:295:8",
                    "statements": [
                      {
                        "assignments": [
                          2287
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2287,
                            "mutability": "mutable",
                            "name": "prevStatus",
                            "nameLocation": "2681:10:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2331,
                            "src": "2676:15:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 2286,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "2676:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2293,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 2289,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2276,
                              "src": "2710:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                              }
                            },
                            {
                              "id": 2290,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2278,
                              "src": "2716:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 2291,
                              "name": "cat",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2283,
                              "src": "2721:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_Category_$1978",
                                "typeString": "enum Common.Category"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_enum$_Category_$1978",
                                "typeString": "enum Common.Category"
                              }
                            ],
                            "id": 2288,
                            "name": "_previousStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2358,
                            "src": "2694:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$_$_t_address_$_t_enum$_Category_$1978_$returns$_t_bool_$",
                              "typeString": "function (mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref)),address,enum Common.Category) view returns (bool)"
                            }
                          },
                          "id": 2292,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2694:31:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2676:49:8"
                      },
                      {
                        "condition": {
                          "id": 2294,
                          "name": "value",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2280,
                          "src": "2735:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 2329,
                          "nodeType": "Block",
                          "src": "2851:108:8",
                          "statements": [
                            {
                              "condition": {
                                "id": 2313,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "!",
                                "prefix": true,
                                "src": "2863:11:8",
                                "subExpression": {
                                  "id": 2312,
                                  "name": "prevStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 2287,
                                  "src": "2864:10:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2319,
                              "nodeType": "IfStatement",
                              "src": "2860:51:8",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2314,
                                      "name": "Common",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2046,
                                      "src": "2883:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                        "typeString": "type(contract Common)"
                                      }
                                    },
                                    "id": 2316,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "UserAlreadyNotExist",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1986,
                                    "src": "2883:26:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 2317,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2883:28:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 2318,
                                "nodeType": "RevertStatement",
                                "src": "2876:35:8"
                              }
                            },
                            {
                              "expression": {
                                "id": 2327,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2320,
                                        "name": "self",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2276,
                                        "src": "2920:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                          "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                        }
                                      },
                                      "id": 2323,
                                      "indexExpression": {
                                        "id": 2321,
                                        "name": "cat",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2283,
                                        "src": "2925:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Category_$1978",
                                          "typeString": "enum Common.Category"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2920:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                        "typeString": "mapping(address => struct Common.Profile storage ref)"
                                      }
                                    },
                                    "id": 2324,
                                    "indexExpression": {
                                      "id": 2322,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2278,
                                      "src": "2930:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2920:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                      "typeString": "struct Common.Profile storage ref"
                                    }
                                  },
                                  "id": 2325,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "approval",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2022,
                                  "src": "2920:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 2326,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2946:5:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "2920:31:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2328,
                              "nodeType": "ExpressionStatement",
                              "src": "2920:31:8"
                            }
                          ]
                        },
                        "id": 2330,
                        "nodeType": "IfStatement",
                        "src": "2732:227:8",
                        "trueBody": {
                          "id": 2311,
                          "nodeType": "Block",
                          "src": "2742:103:8",
                          "statements": [
                            {
                              "condition": {
                                "id": 2295,
                                "name": "prevStatus",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2287,
                                "src": "2754:10:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2301,
                              "nodeType": "IfStatement",
                              "src": "2751:47:8",
                              "trueBody": {
                                "errorCall": {
                                  "arguments": [],
                                  "expression": {
                                    "argumentTypes": [],
                                    "expression": {
                                      "id": 2296,
                                      "name": "Common",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2046,
                                      "src": "2773:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                        "typeString": "type(contract Common)"
                                      }
                                    },
                                    "id": 2298,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "UserAlreadyExist",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1984,
                                    "src": "2773:23:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                      "typeString": "function () pure"
                                    }
                                  },
                                  "id": 2299,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2773:25:8",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 2300,
                                "nodeType": "RevertStatement",
                                "src": "2766:32:8"
                              }
                            },
                            {
                              "expression": {
                                "id": 2309,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "expression": {
                                    "baseExpression": {
                                      "baseExpression": {
                                        "id": 2302,
                                        "name": "self",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2276,
                                        "src": "2807:4:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                          "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                        }
                                      },
                                      "id": 2305,
                                      "indexExpression": {
                                        "id": 2303,
                                        "name": "cat",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2283,
                                        "src": "2812:3:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_enum$_Category_$1978",
                                          "typeString": "enum Common.Category"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2807:9:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                        "typeString": "mapping(address => struct Common.Profile storage ref)"
                                      }
                                    },
                                    "id": 2306,
                                    "indexExpression": {
                                      "id": 2304,
                                      "name": "who",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2278,
                                      "src": "2817:3:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "2807:14:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Profile_$2031_storage",
                                      "typeString": "struct Common.Profile storage ref"
                                    }
                                  },
                                  "id": 2307,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "memberName": "approval",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2022,
                                  "src": "2807:23:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 2308,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "2833:4:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "2807:30:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2310,
                              "nodeType": "ExpressionStatement",
                              "src": "2807:30:8"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2268,
                    "nodeType": "StructuredDocumentation",
                    "src": "2259:258:8",
                    "text": "@dev Sets collectors status to either true or false\n@param value - Value to set status to.\n@param who - User to set status for.\n@param self - storage.\nNote : If value is true, collector's status must be false vice versa."
                  },
                  "id": 2332,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "setStatus",
                  "nameLocation": "2530:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2284,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2276,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "2608:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2332,
                        "src": "2540:72:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                          "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile))"
                        },
                        "typeName": {
                          "id": 2275,
                          "keyType": {
                            "id": 2270,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2269,
                              "name": "Common.Category",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1978,
                              "src": "2549:15:8"
                            },
                            "referencedDeclaration": 1978,
                            "src": "2549:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Category_$1978",
                              "typeString": "enum Common.Category"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "2540:59:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                            "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile))"
                          },
                          "valueType": {
                            "id": 2274,
                            "keyType": {
                              "id": 2271,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2574:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Mapping",
                            "src": "2566:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                              "typeString": "mapping(address => struct Common.Profile)"
                            },
                            "valueType": {
                              "id": 2273,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2272,
                                "name": "Common.Profile",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2031,
                                "src": "2583:14:8"
                              },
                              "referencedDeclaration": 2031,
                              "src": "2583:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage_ptr",
                                "typeString": "struct Common.Profile"
                              }
                            }
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2278,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "2622:3:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2332,
                        "src": "2614:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2277,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2614:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2280,
                        "mutability": "mutable",
                        "name": "value",
                        "nameLocation": "2632:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2332,
                        "src": "2627:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2279,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "2627:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2283,
                        "mutability": "mutable",
                        "name": "cat",
                        "nameLocation": "2655:3:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2332,
                        "src": "2639:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Category_$1978",
                          "typeString": "enum Common.Category"
                        },
                        "typeName": {
                          "id": 2282,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2281,
                            "name": "Common.Category",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1978,
                            "src": "2639:15:8"
                          },
                          "referencedDeclaration": 1978,
                          "src": "2639:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1978",
                            "typeString": "enum Common.Category"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2539:120:8"
                  },
                  "returnParameters": {
                    "id": 2285,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "2669:0:8"
                  },
                  "scope": 2524,
                  "src": "2521:443:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2357,
                    "nodeType": "Block",
                    "src": "3130:43:8",
                    "statements": [
                      {
                        "expression": {
                          "expression": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 2350,
                                "name": "self",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2340,
                                "src": "3144:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                                  "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile storage ref))"
                                }
                              },
                              "id": 2352,
                              "indexExpression": {
                                "id": 2351,
                                "name": "cat",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2345,
                                "src": "3149:3:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_Category_$1978",
                                  "typeString": "enum Common.Category"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3144:9:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                                "typeString": "mapping(address => struct Common.Profile storage ref)"
                              }
                            },
                            "id": 2354,
                            "indexExpression": {
                              "id": 2353,
                              "name": "who",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2342,
                              "src": "3154:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "3144:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Profile_$2031_storage",
                              "typeString": "struct Common.Profile storage ref"
                            }
                          },
                          "id": 2355,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "approval",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 2022,
                          "src": "3144:23:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 2349,
                        "id": 2356,
                        "nodeType": "Return",
                        "src": "3137:30:8"
                      }
                    ]
                  },
                  "id": 2358,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_previousStatus",
                  "nameLocation": "2979:15:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2346,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2340,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "3063:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "2995:72:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                          "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile))"
                        },
                        "typeName": {
                          "id": 2339,
                          "keyType": {
                            "id": 2334,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2333,
                              "name": "Common.Category",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1978,
                              "src": "3004:15:8"
                            },
                            "referencedDeclaration": 1978,
                            "src": "3004:15:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Category_$1978",
                              "typeString": "enum Common.Category"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "2995:59:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Category_$1978_$_t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$_$",
                            "typeString": "mapping(enum Common.Category => mapping(address => struct Common.Profile))"
                          },
                          "valueType": {
                            "id": 2338,
                            "keyType": {
                              "id": 2335,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3029:7:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "Mapping",
                            "src": "3021:32:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_struct$_Profile_$2031_storage_$",
                              "typeString": "mapping(address => struct Common.Profile)"
                            },
                            "valueType": {
                              "id": 2337,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2336,
                                "name": "Common.Profile",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2031,
                                "src": "3038:14:8"
                              },
                              "referencedDeclaration": 2031,
                              "src": "3038:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Profile_$2031_storage_ptr",
                                "typeString": "struct Common.Profile"
                              }
                            }
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2342,
                        "mutability": "mutable",
                        "name": "who",
                        "nameLocation": "3077:3:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "3069:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2341,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3069:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2345,
                        "mutability": "mutable",
                        "name": "cat",
                        "nameLocation": "3098:3:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "3082:19:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Category_$1978",
                          "typeString": "enum Common.Category"
                        },
                        "typeName": {
                          "id": 2344,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 2343,
                            "name": "Common.Category",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 1978,
                            "src": "3082:15:8"
                          },
                          "referencedDeclaration": 1978,
                          "src": "3082:15:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_Category_$1978",
                            "typeString": "enum Common.Category"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "2994:108:8"
                  },
                  "returnParameters": {
                    "id": 2349,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2348,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2358,
                        "src": "3124:4:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "typeName": {
                          "id": 2347,
                          "name": "bool",
                          "nodeType": "ElementaryTypeName",
                          "src": "3124:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3123:6:8"
                  },
                  "scope": 2524,
                  "src": "2970:203:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "private"
                },
                {
                  "body": {
                    "id": 2387,
                    "nodeType": "Block",
                    "src": "3421:82:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 2373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2370,
                            "name": "newId",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2368,
                            "src": "3428:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 2371,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2363,
                              "src": "3436:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                                "typeString": "struct Common.BinData storage ref[] storage pointer"
                              }
                            },
                            "id": 2372,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3436:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3428:19:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2374,
                        "nodeType": "ExpressionStatement",
                        "src": "3428:19:8"
                      },
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 2375,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2363,
                              "src": "3454:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                                "typeString": "struct Common.BinData storage ref[] storage pointer"
                              }
                            },
                            "id": 2377,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "3454:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr_$returns$_t_struct$_BinData_$2038_storage_$bound_to$_t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Common.BinData storage ref[] storage pointer) returns (struct Common.BinData storage ref)"
                            }
                          },
                          "id": 2378,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3454:11:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_BinData_$2038_storage",
                            "typeString": "struct Common.BinData storage ref"
                          }
                        },
                        "id": 2379,
                        "nodeType": "ExpressionStatement",
                        "src": "3454:11:8"
                      },
                      {
                        "expression": {
                          "id": 2385,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "expression": {
                              "baseExpression": {
                                "id": 2380,
                                "name": "self",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2363,
                                "src": "3472:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                                  "typeString": "struct Common.BinData storage ref[] storage pointer"
                                }
                              },
                              "id": 2382,
                              "indexExpression": {
                                "id": 2381,
                                "name": "newId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2368,
                                "src": "3477:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3472:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BinData_$2038_storage",
                                "typeString": "struct Common.BinData storage ref"
                              }
                            },
                            "id": 2383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "memberName": "owner",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 2037,
                            "src": "3472:17:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "id": 2384,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2365,
                            "src": "3492:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3472:25:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 2386,
                        "nodeType": "ExpressionStatement",
                        "src": "3472:25:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2359,
                    "nodeType": "StructuredDocumentation",
                    "src": "3179:139:8",
                    "text": "@dev Registers new bin with owner.\n@param owner - Bin Owner\n@param self - Storage\n@return newId "
                  },
                  "id": 2388,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "registerNewBin",
                  "nameLocation": "3331:14:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2366,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2363,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "3371:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2388,
                        "src": "3346:29:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                          "typeString": "struct Common.BinData[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2361,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2360,
                              "name": "Common.BinData",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2038,
                              "src": "3346:14:8"
                            },
                            "referencedDeclaration": 2038,
                            "src": "3346:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BinData_$2038_storage_ptr",
                              "typeString": "struct Common.BinData"
                            }
                          },
                          "id": 2362,
                          "nodeType": "ArrayTypeName",
                          "src": "3346:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                            "typeString": "struct Common.BinData[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2365,
                        "mutability": "mutable",
                        "name": "owner",
                        "nameLocation": "3385:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2388,
                        "src": "3377:13:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "typeName": {
                          "id": 2364,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3377:7:8",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3345:46:8"
                  },
                  "returnParameters": {
                    "id": 2369,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2368,
                        "mutability": "mutable",
                        "name": "newId",
                        "nameLocation": "3414:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2388,
                        "src": "3409:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2367,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3409:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3408:12:8"
                  },
                  "scope": 2524,
                  "src": "3322:181:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2454,
                    "nodeType": "Block",
                    "src": "3755:338:8",
                    "statements": [
                      {
                        "assignments": [
                          2399,
                          2402
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 2399,
                            "mutability": "mutable",
                            "name": "len",
                            "nameLocation": "3768:3:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2454,
                            "src": "3763:8:8",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 2398,
                              "name": "uint",
                              "nodeType": "ElementaryTypeName",
                              "src": "3763:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          },
                          {
                            "constant": false,
                            "id": 2402,
                            "mutability": "mutable",
                            "name": "wasteBin",
                            "nameLocation": "3795:8:8",
                            "nodeType": "VariableDeclaration",
                            "scope": 2454,
                            "src": "3773:30:8",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BinData_$2038_memory_ptr",
                              "typeString": "struct Common.BinData"
                            },
                            "typeName": {
                              "id": 2401,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 2400,
                                "name": "Common.BinData",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 2038,
                                "src": "3773:14:8"
                              },
                              "referencedDeclaration": 2038,
                              "src": "3773:14:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BinData_$2038_storage_ptr",
                                "typeString": "struct Common.BinData"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 2409,
                        "initialValue": {
                          "components": [
                            {
                              "expression": {
                                "id": 2403,
                                "name": "self",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2393,
                                "src": "3809:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                                  "typeString": "struct Common.BinData storage ref[] storage pointer"
                                }
                              },
                              "id": 2404,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "3809:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 2405,
                                "name": "self",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2393,
                                "src": "3822:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                                  "typeString": "struct Common.BinData storage ref[] storage pointer"
                                }
                              },
                              "id": 2407,
                              "indexExpression": {
                                "id": 2406,
                                "name": "binId",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2395,
                                "src": "3827:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3822:11:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_BinData_$2038_storage",
                                "typeString": "struct Common.BinData storage ref"
                              }
                            }
                          ],
                          "id": 2408,
                          "isConstant": false,
                          "isInlineArray": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "TupleExpression",
                          "src": "3808:26:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_uint256_$_t_struct$_BinData_$2038_storage_$",
                            "typeString": "tuple(uint256,struct Common.BinData storage ref)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "3762:72:8"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2414,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "expression": {
                                "id": 2410,
                                "name": "wasteBin",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2402,
                                "src": "3844:8:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_BinData_$2038_memory_ptr",
                                  "typeString": "struct Common.BinData memory"
                                }
                              },
                              "id": 2411,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "bin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 2035,
                              "src": "3844:12:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_memory_ptr_$dyn_memory_ptr",
                                "typeString": "struct Common.WasteData memory[] memory"
                              }
                            },
                            "id": 2412,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "length",
                            "nodeType": "MemberAccess",
                            "src": "3844:19:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 2413,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3867:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "3844:24:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2420,
                        "nodeType": "IfStatement",
                        "src": "3841:53:8",
                        "trueBody": {
                          "errorCall": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 2415,
                                "name": "Common",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 2046,
                                "src": "3877:6:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                  "typeString": "type(contract Common)"
                                }
                              },
                              "id": 2417,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "EmptyBin",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 1990,
                              "src": "3877:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 2418,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3877:17:8",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_tuple$__$",
                              "typeString": "tuple()"
                            }
                          },
                          "id": 2419,
                          "nodeType": "RevertStatement",
                          "src": "3870:24:8"
                        }
                      },
                      {
                        "body": {
                          "id": 2447,
                          "nodeType": "Block",
                          "src": "3931:131:8",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_State_$1972",
                                  "typeString": "enum Common.State"
                                },
                                "id": 2439,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "expression": {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 2431,
                                        "name": "wasteBin",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2402,
                                        "src": "3943:8:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_BinData_$2038_memory_ptr",
                                          "typeString": "struct Common.BinData memory"
                                        }
                                      },
                                      "id": 2432,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "bin",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 2035,
                                      "src": "3943:12:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_struct$_WasteData_$2016_memory_ptr_$dyn_memory_ptr",
                                        "typeString": "struct Common.WasteData memory[] memory"
                                      }
                                    },
                                    "id": 2434,
                                    "indexExpression": {
                                      "id": 2433,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2422,
                                      "src": "3956:1:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3943:15:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WasteData_$2016_memory_ptr",
                                      "typeString": "struct Common.WasteData memory"
                                    }
                                  },
                                  "id": 2435,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "state",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 2015,
                                  "src": "3943:21:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$1972",
                                    "typeString": "enum Common.State"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "<",
                                "rightExpression": {
                                  "expression": {
                                    "expression": {
                                      "id": 2436,
                                      "name": "Common",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2046,
                                      "src": "3967:6:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                        "typeString": "type(contract Common)"
                                      }
                                    },
                                    "id": 2437,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "State",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 1972,
                                    "src": "3967:12:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_State_$1972_$",
                                      "typeString": "type(enum Common.State)"
                                    }
                                  },
                                  "id": 2438,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "RECYCLED",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 1971,
                                  "src": "3967:21:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_State_$1972",
                                    "typeString": "enum Common.State"
                                  }
                                },
                                "src": "3943:45:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 2446,
                              "nodeType": "IfStatement",
                              "src": "3940:115:8",
                              "trueBody": {
                                "id": 2445,
                                "nodeType": "Block",
                                "src": "3990:65:8",
                                "statements": [
                                  {
                                    "errorCall": {
                                      "arguments": [],
                                      "expression": {
                                        "argumentTypes": [],
                                        "expression": {
                                          "id": 2440,
                                          "name": "Common",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2046,
                                          "src": "4008:6:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                            "typeString": "type(contract Common)"
                                          }
                                        },
                                        "id": 2442,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "CannotDeleteBinInEngagedMode",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1992,
                                        "src": "4008:35:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_error_pure$__$returns$__$",
                                          "typeString": "function () pure"
                                        }
                                      },
                                      "id": 2443,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "4008:37:8",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 2444,
                                    "nodeType": "RevertStatement",
                                    "src": "4001:44:8"
                                  }
                                ]
                              }
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 2427,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 2425,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2422,
                            "src": "3917:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 2426,
                            "name": "len",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2399,
                            "src": "3921:3:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "3917:7:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 2448,
                        "initializationExpression": {
                          "assignments": [
                            2422
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 2422,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "3910:1:8",
                              "nodeType": "VariableDeclaration",
                              "scope": 2448,
                              "src": "3905:6:8",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 2421,
                                "name": "uint",
                                "nodeType": "ElementaryTypeName",
                                "src": "3905:4:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 2424,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 2423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3914:1:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "3905:10:8"
                        },
                        "loopExpression": {
                          "expression": {
                            "id": 2429,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "UnaryOperation",
                            "operator": "++",
                            "prefix": false,
                            "src": "3926:3:8",
                            "subExpression": {
                              "id": 2428,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2422,
                              "src": "3926:1:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 2430,
                          "nodeType": "ExpressionStatement",
                          "src": "3926:3:8"
                        },
                        "nodeType": "ForStatement",
                        "src": "3901:161:8"
                      },
                      {
                        "expression": {
                          "id": 2452,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "4069:18:8",
                          "subExpression": {
                            "baseExpression": {
                              "id": 2449,
                              "name": "self",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2393,
                              "src": "4076:4:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                                "typeString": "struct Common.BinData storage ref[] storage pointer"
                              }
                            },
                            "id": 2451,
                            "indexExpression": {
                              "id": 2450,
                              "name": "binId",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2395,
                              "src": "4081:5:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4076:11:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BinData_$2038_storage",
                              "typeString": "struct Common.BinData storage ref"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 2453,
                        "nodeType": "ExpressionStatement",
                        "src": "4069:18:8"
                      }
                    ]
                  },
                  "documentation": {
                    "id": 2389,
                    "nodeType": "StructuredDocumentation",
                    "src": "3509:171:8",
                    "text": "@dev Removes bin from bin array.\n@notice binId must be less than the bin array at any time since arrays are zero-based.\n@param self - Storage"
                  },
                  "id": 2455,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "removeBin",
                  "nameLocation": "3693:9:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2396,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2393,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "3728:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2455,
                        "src": "3703:29:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                          "typeString": "struct Common.BinData[]"
                        },
                        "typeName": {
                          "baseType": {
                            "id": 2391,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2390,
                              "name": "Common.BinData",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 2038,
                              "src": "3703:14:8"
                            },
                            "referencedDeclaration": 2038,
                            "src": "3703:14:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_BinData_$2038_storage_ptr",
                              "typeString": "struct Common.BinData"
                            }
                          },
                          "id": 2392,
                          "nodeType": "ArrayTypeName",
                          "src": "3703:16:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_BinData_$2038_storage_$dyn_storage_ptr",
                            "typeString": "struct Common.BinData[]"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2395,
                        "mutability": "mutable",
                        "name": "binId",
                        "nameLocation": "3739:5:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2455,
                        "src": "3734:10:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2394,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "3734:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "3702:43:8"
                  },
                  "returnParameters": {
                    "id": 2397,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "3755:0:8"
                  },
                  "scope": 2524,
                  "src": "3684:409:8",
                  "stateMutability": "nonpayable",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2510,
                    "nodeType": "Block",
                    "src": "4236:190:8",
                    "statements": [
                      {
                        "expression": {
                          "id": 2482,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2471,
                            "name": "collector",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2465,
                            "src": "4243:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2478,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2472,
                                      "name": "self",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2460,
                                      "src": "4256:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                                        "typeString": "mapping(enum Common.Share => uint8)"
                                      }
                                    },
                                    "id": 2476,
                                    "indexExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2473,
                                          "name": "Common",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2046,
                                          "src": "4261:6:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                            "typeString": "type(contract Common)"
                                          }
                                        },
                                        "id": 2474,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "Share",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "4261:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Share_$1982_$",
                                          "typeString": "type(enum Common.Share)"
                                        }
                                      },
                                      "id": 2475,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "COLLECTOR",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1979,
                                      "src": "4261:22:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Share_$1982",
                                        "typeString": "enum Common.Share"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4256:28:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2477,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2462,
                                    "src": "4287:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4256:37:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2479,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4255:39:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 2480,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4297:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "4255:45:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4243:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2483,
                        "nodeType": "ExpressionStatement",
                        "src": "4243:57:8"
                      },
                      {
                        "expression": {
                          "id": 2495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2484,
                            "name": "generator",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2467,
                            "src": "4307:9:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2491,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2485,
                                      "name": "self",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2460,
                                      "src": "4320:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                                        "typeString": "mapping(enum Common.Share => uint8)"
                                      }
                                    },
                                    "id": 2489,
                                    "indexExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2486,
                                          "name": "Common",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2046,
                                          "src": "4325:6:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                            "typeString": "type(contract Common)"
                                          }
                                        },
                                        "id": 2487,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "Share",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "4325:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Share_$1982_$",
                                          "typeString": "type(enum Common.Share)"
                                        }
                                      },
                                      "id": 2488,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "GENERATOR",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1980,
                                      "src": "4325:22:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Share_$1982",
                                        "typeString": "enum Common.Share"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4320:28:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2490,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2462,
                                    "src": "4351:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4320:37:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2492,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4319:39:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 2493,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4361:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "4319:45:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4307:57:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2496,
                        "nodeType": "ExpressionStatement",
                        "src": "4307:57:8"
                      },
                      {
                        "expression": {
                          "id": 2508,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 2497,
                            "name": "team",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2469,
                            "src": "4371:4:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 2507,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "components": [
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 2504,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "baseExpression": {
                                      "id": 2498,
                                      "name": "self",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2460,
                                      "src": "4379:4:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                                        "typeString": "mapping(enum Common.Share => uint8)"
                                      }
                                    },
                                    "id": 2502,
                                    "indexExpression": {
                                      "expression": {
                                        "expression": {
                                          "id": 2499,
                                          "name": "Common",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2046,
                                          "src": "4384:6:8",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_Common_$2046_$",
                                            "typeString": "type(contract Common)"
                                          }
                                        },
                                        "id": 2500,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "Share",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 1982,
                                        "src": "4384:12:8",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_enum$_Share_$1982_$",
                                          "typeString": "type(enum Common.Share)"
                                        }
                                      },
                                      "id": 2501,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "TEAM",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 1981,
                                      "src": "4384:17:8",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_enum$_Share_$1982",
                                        "typeString": "enum Common.Share"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "4379:23:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "*",
                                  "rightExpression": {
                                    "id": 2503,
                                    "name": "amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 2462,
                                    "src": "4405:6:8",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "4379:32:8",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "id": 2505,
                              "isConstant": false,
                              "isInlineArray": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "TupleExpression",
                              "src": "4378:34:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "/",
                            "rightExpression": {
                              "hexValue": "313030",
                              "id": 2506,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4415:3:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_100_by_1",
                                "typeString": "int_const 100"
                              },
                              "value": "100"
                            },
                            "src": "4378:40:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4371:47:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 2509,
                        "nodeType": "ExpressionStatement",
                        "src": "4371:47:8"
                      }
                    ]
                  },
                  "id": 2511,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "split",
                  "nameLocation": "4108:5:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2463,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2460,
                        "mutability": "mutable",
                        "name": "self",
                        "nameLocation": "4152:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2511,
                        "src": "4114:42:8",
                        "stateVariable": false,
                        "storageLocation": "storage",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                          "typeString": "mapping(enum Common.Share => uint8)"
                        },
                        "typeName": {
                          "id": 2459,
                          "keyType": {
                            "id": 2457,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 2456,
                              "name": "Common.Share",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 1982,
                              "src": "4123:12:8"
                            },
                            "referencedDeclaration": 1982,
                            "src": "4123:12:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_Share_$1982",
                              "typeString": "enum Common.Share"
                            }
                          },
                          "nodeType": "Mapping",
                          "src": "4114:29:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_enum$_Share_$1982_$_t_uint8_$",
                            "typeString": "mapping(enum Common.Share => uint8)"
                          },
                          "valueType": {
                            "id": 2458,
                            "name": "uint8",
                            "nodeType": "ElementaryTypeName",
                            "src": "4137:5:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2462,
                        "mutability": "mutable",
                        "name": "amount",
                        "nameLocation": "4163:6:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2511,
                        "src": "4158:11:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2461,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4158:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4113:57:8"
                  },
                  "returnParameters": {
                    "id": 2470,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2465,
                        "mutability": "mutable",
                        "name": "collector",
                        "nameLocation": "4198:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2511,
                        "src": "4193:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2464,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4193:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2467,
                        "mutability": "mutable",
                        "name": "generator",
                        "nameLocation": "4214:9:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2511,
                        "src": "4209:14:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2466,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4209:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      },
                      {
                        "constant": false,
                        "id": 2469,
                        "mutability": "mutable",
                        "name": "team",
                        "nameLocation": "4230:4:8",
                        "nodeType": "VariableDeclaration",
                        "scope": 2511,
                        "src": "4225:9:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 2468,
                          "name": "uint",
                          "nodeType": "ElementaryTypeName",
                          "src": "4225:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4192:43:8"
                  },
                  "scope": 2524,
                  "src": "4099:327:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                },
                {
                  "body": {
                    "id": 2522,
                    "nodeType": "Block",
                    "src": "4478:35:8",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 2518,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "4494:5:8",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 2519,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "4494:15:8",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 2517,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4487:6:8",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint32_$",
                              "typeString": "type(uint32)"
                            },
                            "typeName": {
                              "id": 2516,
                              "name": "uint32",
                              "nodeType": "ElementaryTypeName",
                              "src": "4487:6:8",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 2520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4487:23:8",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "functionReturnParameters": 2515,
                        "id": 2521,
                        "nodeType": "Return",
                        "src": "4480:30:8"
                      }
                    ]
                  },
                  "id": 2523,
                  "implemented": true,
                  "kind": "function",
                  "modifiers": [],
                  "name": "_now",
                  "nameLocation": "4441:4:8",
                  "nodeType": "FunctionDefinition",
                  "parameters": {
                    "id": 2512,
                    "nodeType": "ParameterList",
                    "parameters": [],
                    "src": "4445:2:8"
                  },
                  "returnParameters": {
                    "id": 2515,
                    "nodeType": "ParameterList",
                    "parameters": [
                      {
                        "constant": false,
                        "id": 2514,
                        "mutability": "mutable",
                        "name": "",
                        "nameLocation": "-1:-1:-1",
                        "nodeType": "VariableDeclaration",
                        "scope": 2523,
                        "src": "4470:6:8",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        "typeName": {
                          "id": 2513,
                          "name": "uint32",
                          "nodeType": "ElementaryTypeName",
                          "src": "4470:6:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "src": "4469:8:8"
                  },
                  "scope": 2524,
                  "src": "4432:81:8",
                  "stateMutability": "view",
                  "virtual": false,
                  "visibility": "internal"
                }
              ],
              "scope": 2525,
              "src": "104:4414:8",
              "usedErrors": []
            }
          ],
          "src": "39:4479:8"
        },
        "id": 8
      }
    }
  }
}
